[INFO ] 2020-04-27T15:10:31,936Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T15:10:32,253Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:10:33,925Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-27T15:10:34,912Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T15:10:34,928Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-27T15:10:34,930Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:10:35,509Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:10:35,540Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T15:10:36,219Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:10:36,231Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:10:36,231Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T15:10:36,442Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:10:36,463Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T15:10:37,114Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T15:10:37,393Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T15:10:37,393Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T15:10:37,415Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T15:10:37,416Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T15:10:37,416Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T15:10:38,292Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:10:38,292Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T15:10:38,316Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:10:38,316Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T15:10:38,357Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:10:38,357Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:10:38,491Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,534Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T15:10:38,588Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T15:10:38,662Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T15:10:38,662Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T15:10:38,674Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T15:10:38,696Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T15:10:38,696Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T15:10:38,728Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,728Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T15:10:38,738Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,739Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T15:10:38,739Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,739Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:38,770Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T15:10:38,811Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:38,811Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T15:10:38,833Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:38,833Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,844Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T15:10:38,855Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,855Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T15:10:38,878Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T15:10:38,924Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T15:10:38,924Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T15:10:38,924Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T15:10:38,924Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T15:10:38,924Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T15:10:38,936Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,936Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T15:10:38,936Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,936Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T15:10:38,937Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:38,948Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:38,949Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T15:10:38,995Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:38,995Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:10:38,995Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:10:39,008Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:10:39,009Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:39,009Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T15:10:40,683Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:10:40,693Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:10:40,693Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T15:10:40,693Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:10:40,696Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:10:40,707Z [Connection worker] internal.TestCordappImpl. - Cleaning VCS Checkout Cache (/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle/vcs-1) {}
[INFO ] 2020-04-27T15:10:40,719Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:10:40,719Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T15:10:40,731Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:10:40,757Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T15:10:40,929Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-151025.922/nodes/0/cordapps] {}
[INFO ] 2020-04-27T15:10:40,933Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T15:10:40,941Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T15:10:41,041Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T15:10:42,020Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T15:10:42,072Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T15:10:42,149Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:10:42,153Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:10:42,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T15:10:23.957Z
      epoch=1
  } {}
[INFO ] 2020-04-27T15:10:47,723Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:47,728Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-151025.922/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:47,728Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:47,779Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:47,880Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:47,887Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:50,044Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:50,782Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:50,786Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:50,792Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:50,792Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:50,903Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:50,951Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T15:10:50,978Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T15:10:50,978Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T15:10:51,226Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T15:10:51,237Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T15:10:51,237Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588000251237) {}
[INFO ] 2020-04-27T15:10:51,244Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T15:10:51,474Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588000251237) {}
[INFO ] 2020-04-27T15:10:51,668Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T15:10:51,703Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588000251237) {}
[INFO ] 2020-04-27T15:10:51,741Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:10:51,794Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=010BD891F6D623A01304BD8C586639F1F51FC6A4A2AE4BF95E8DA4685D7D4425 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T15:10:51,803Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T15:10:51,808Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T15:10:52,560Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588000251237) {}
[INFO ] 2020-04-27T15:10:52,598Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588000251237) {}
[INFO ] 2020-04-27T15:10:52,599Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:10:52,600Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588000251237) {}
[INFO ] 2020-04-27T15:10:52,600Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:10:52,613Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-151025.922/nodes/1/cordapps] {}
[INFO ] 2020-04-27T15:10:52,613Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T15:10:52,613Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T15:10:52,626Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T15:10:52,667Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T15:10:52,668Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T15:10:52,711Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:10:52,711Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:10:52,717Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T15:10:23.957Z
      epoch=1
  } {}
[INFO ] 2020-04-27T15:10:53,479Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,482Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-151025.922/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,482Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,508Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,512Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,512Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,663Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,687Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,690Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,693Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,693Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,830Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:53,838Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T15:10:53,841Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:10:53,841Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:10:53,997Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:10:53,998Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T15:10:54,029Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T15:10:54,029Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588000254029) {}
[INFO ] 2020-04-27T15:10:54,032Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T15:10:54,042Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588000254029) {}
[INFO ] 2020-04-27T15:10:54,050Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T15:10:54,053Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588000254029) {}
[INFO ] 2020-04-27T15:10:54,060Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:10:54,085Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=010BD891F6D623A01304BD8C586639F1F51FC6A4A2AE4BF95E8DA4685D7D4425 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T15:10:54,096Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588000254029) {}
[INFO ] 2020-04-27T15:10:54,101Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588000251237) {}
[INFO ] 2020-04-27T15:10:54,102Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T15:10:54,114Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588000254029) {}
[INFO ] 2020-04-27T15:10:54,115Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T15:10:54,127Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588000254029) {}
[INFO ] 2020-04-27T15:10:54,127Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:10:54,127Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588000254029) {}
[INFO ] 2020-04-27T15:10:54,127Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:10:54,133Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-151025.922/nodes/2/cordapps] {}
[INFO ] 2020-04-27T15:10:54,134Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T15:10:54,134Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T15:10:54,139Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-151025.922/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T15:10:54,165Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T15:10:54,166Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T15:10:54,195Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:10:54,195Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:10:54,199Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T15:10:23.957Z
      epoch=1
  } {}
[INFO ] 2020-04-27T15:10:54,716Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,718Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-151025.922/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,718Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,738Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,741Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,741Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,849Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,859Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,860Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,863Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,863Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,927Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:10:54,931Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T15:10:54,932Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:10:54,932Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:10:55,041Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:10:55,042Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T15:10:55,063Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T15:10:55,063Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588000255063) {}
[INFO ] 2020-04-27T15:10:55,065Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T15:10:55,072Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588000255063) {}
[INFO ] 2020-04-27T15:10:55,078Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T15:10:55,081Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588000255063) {}
[INFO ] 2020-04-27T15:10:55,086Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:10:55,110Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=010BD891F6D623A01304BD8C586639F1F51FC6A4A2AE4BF95E8DA4685D7D4425 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T15:10:55,118Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588000255063) {}
[INFO ] 2020-04-27T15:10:55,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588000251237) {}
[INFO ] 2020-04-27T15:10:55,122Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T15:10:55,131Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588000255063) {}
[INFO ] 2020-04-27T15:10:55,132Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T15:10:55,143Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588000254029) {}
[INFO ] 2020-04-27T15:10:55,145Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T15:10:55,155Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588000255063) {}
[INFO ] 2020-04-27T15:10:55,156Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T15:10:55,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588000255063) {}
[INFO ] 2020-04-27T15:10:55,165Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:10:55,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588000255063) {}
[INFO ] 2020-04-27T15:10:55,165Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T15:10:55,167Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T15:10:55,167Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T15:10:55,171Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T15:10:55,171Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T15:10:55,794Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=63050781-0f53-49de-b115-cf1fd4a2cfcb, invocation_id=ff025c3d-162e-4277-bd79-ee30e84b947b, invocation_timestamp=2020-04-27T15:10:55.229Z, origin=Only For Testing, session_id=ff025c3d-162e-4277-bd79-ee30e84b947b, session_timestamp=2020-04-27T15:10:55.229Z, thread-id=269}
[WARN ] 2020-04-27T15:10:55,794Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=63050781-0f53-49de-b115-cf1fd4a2cfcb, invocation_id=ff025c3d-162e-4277-bd79-ee30e84b947b, invocation_timestamp=2020-04-27T15:10:55.229Z, origin=Only For Testing, session_id=ff025c3d-162e-4277-bd79-ee30e84b947b, session_timestamp=2020-04-27T15:10:55.229Z, thread-id=269}
[INFO ] 2020-04-27T15:10:56,140Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=63050781-0f53-49de-b115-cf1fd4a2cfcb, invocation_id=ff025c3d-162e-4277-bd79-ee30e84b947b, invocation_timestamp=2020-04-27T15:10:55.229Z, origin=Only For Testing, session_id=ff025c3d-162e-4277-bd79-ee30e84b947b, session_timestamp=2020-04-27T15:10:55.229Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:10:56,140Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=63050781-0f53-49de-b115-cf1fd4a2cfcb, invocation_id=ff025c3d-162e-4277-bd79-ee30e84b947b, invocation_timestamp=2020-04-27T15:10:55.229Z, origin=Only For Testing, session_id=ff025c3d-162e-4277-bd79-ee30e84b947b, session_timestamp=2020-04-27T15:10:55.229Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:10:56,256Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=63050781-0f53-49de-b115-cf1fd4a2cfcb, invocation_id=ff025c3d-162e-4277-bd79-ee30e84b947b, invocation_timestamp=2020-04-27T15:10:55.229Z, origin=Only For Testing, session_id=ff025c3d-162e-4277-bd79-ee30e84b947b, session_timestamp=2020-04-27T15:10:55.229Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:10:56,424Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=865edb60-9fba-4dc1-8961-227aa258a25b, invocation_id=27ea2ca5-b97f-48f7-83d2-15a416e1bee4, invocation_timestamp=2020-04-27T15:10:56.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=27ea2ca5-b97f-48f7-83d2-15a416e1bee4, session_timestamp=2020-04-27T15:10:56.377Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:10:56,486Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=865edb60-9fba-4dc1-8961-227aa258a25b, invocation_id=27ea2ca5-b97f-48f7-83d2-15a416e1bee4, invocation_timestamp=2020-04-27T15:10:56.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=27ea2ca5-b97f-48f7-83d2-15a416e1bee4, session_timestamp=2020-04-27T15:10:56.377Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:10:56,493Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=865edb60-9fba-4dc1-8961-227aa258a25b, invocation_id=27ea2ca5-b97f-48f7-83d2-15a416e1bee4, invocation_timestamp=2020-04-27T15:10:56.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=27ea2ca5-b97f-48f7-83d2-15a416e1bee4, session_timestamp=2020-04-27T15:10:56.377Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:10:56,504Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=865edb60-9fba-4dc1-8961-227aa258a25b, invocation_id=27ea2ca5-b97f-48f7-83d2-15a416e1bee4, invocation_timestamp=2020-04-27T15:10:56.377Z, origin=O=Mock Company 1, L=London, C=GB, session_id=27ea2ca5-b97f-48f7-83d2-15a416e1bee4, session_timestamp=2020-04-27T15:10:56.377Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:10:56,554Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=63050781-0f53-49de-b115-cf1fd4a2cfcb, invocation_id=ff025c3d-162e-4277-bd79-ee30e84b947b, invocation_timestamp=2020-04-27T15:10:55.229Z, origin=Only For Testing, session_id=ff025c3d-162e-4277-bd79-ee30e84b947b, session_timestamp=2020-04-27T15:10:55.229Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:10:56,554Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=63050781-0f53-49de-b115-cf1fd4a2cfcb, invocation_id=ff025c3d-162e-4277-bd79-ee30e84b947b, invocation_timestamp=2020-04-27T15:10:55.229Z, origin=Only For Testing, session_id=ff025c3d-162e-4277-bd79-ee30e84b947b, session_timestamp=2020-04-27T15:10:55.229Z, thread-id=269, tx_id=57E1CA8B534AACBD22DD10707DBF45FB3658BEE8B0982DC7D6FD0F8F69750030}
[INFO ] 2020-04-27T15:25:00,692Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T15:25:01,006Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:25:02,564Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T15:25:02,610Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:25:02,651Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:25:02,651Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T15:25:02,652Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:25:02,652Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:25:02,652Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T15:25:02,653Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:25:02,653Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T15:25:02,664Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T15:25:02,674Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T15:25:02,674Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T15:25:02,674Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T15:25:02,674Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T15:25:02,675Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T15:25:02,768Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:25:02,768Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T15:25:02,778Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:25:02,779Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T15:25:02,800Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T15:25:02,800Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:25:02,823Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,834Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T15:25:02,834Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T15:25:02,858Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T15:25:02,858Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T15:25:02,870Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T15:25:02,870Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T15:25:02,870Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T15:25:02,870Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,870Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T15:25:02,870Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,870Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T15:25:02,871Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,871Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,871Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T15:25:02,893Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,893Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T15:25:02,893Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,893Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,893Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T15:25:02,944Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,945Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T15:25:02,945Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T15:25:02,957Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T15:25:02,957Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T15:25:02,957Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T15:25:02,957Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T15:25:02,957Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T15:25:02,967Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,967Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T15:25:02,967Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,967Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T15:25:02,968Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,968Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,968Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:25:02,980Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,981Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:25:02,981Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,981Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T15:25:02,981Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T15:25:02,981Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:02,990Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T15:25:02,992Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T15:25:03,003Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:25:03,003Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T15:25:03,003Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T15:25:03,005Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:25:03,023Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T15:25:03,023Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T15:25:03,057Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T15:25:03,325Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-152455.161/nodes/0/cordapps] {}
[INFO ] 2020-04-27T15:25:03,331Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T15:25:03,342Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T15:25:03,479Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T15:25:04,367Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T15:25:04,407Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T15:25:04,469Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:25:04,472Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:25:04,597Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T15:24:53.138Z
      epoch=1
  } {}
[INFO ] 2020-04-27T15:25:09,119Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:09,122Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-152455.161/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:09,122Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:09,174Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:09,260Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:09,266Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:11,303Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:11,903Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:11,906Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:11,909Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:11,909Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:11,985Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:12,028Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T15:25:12,048Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T15:25:12,048Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T15:25:12,229Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T15:25:12,236Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T15:25:12,244Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588001112236) {}
[INFO ] 2020-04-27T15:25:12,249Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T15:25:12,392Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588001112236) {}
[INFO ] 2020-04-27T15:25:12,447Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T15:25:12,467Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588001112236) {}
[INFO ] 2020-04-27T15:25:12,493Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:25:12,530Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=010BD891F6D623A01304BD8C586639F1F51FC6A4A2AE4BF95E8DA4685D7D4425 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T15:25:12,542Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T15:25:12,545Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T15:25:12,970Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588001112236) {}
[INFO ] 2020-04-27T15:25:13,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588001112236) {}
[INFO ] 2020-04-27T15:25:13,010Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:25:13,011Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588001112236) {}
[INFO ] 2020-04-27T15:25:13,011Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:25:13,020Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-152455.161/nodes/1/cordapps] {}
[INFO ] 2020-04-27T15:25:13,021Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T15:25:13,021Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T15:25:13,027Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T15:25:13,051Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T15:25:13,052Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T15:25:13,074Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:25:13,075Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:25:13,077Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T15:24:53.138Z
      epoch=1
  } {}
[INFO ] 2020-04-27T15:25:13,634Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,637Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-152455.161/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,637Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,662Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,664Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,664Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,756Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,764Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,765Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,767Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,767Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,820Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:13,825Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T15:25:13,827Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:25:13,827Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:25:13,917Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:25:13,918Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T15:25:13,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T15:25:13,937Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588001113937) {}
[INFO ] 2020-04-27T15:25:13,939Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T15:25:13,945Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588001113937) {}
[INFO ] 2020-04-27T15:25:13,951Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T15:25:13,954Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588001113937) {}
[INFO ] 2020-04-27T15:25:13,958Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:25:13,977Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=010BD891F6D623A01304BD8C586639F1F51FC6A4A2AE4BF95E8DA4685D7D4425 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T15:25:13,984Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588001113937) {}
[INFO ] 2020-04-27T15:25:13,987Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588001112236) {}
[INFO ] 2020-04-27T15:25:13,988Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T15:25:13,997Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588001113937) {}
[INFO ] 2020-04-27T15:25:13,998Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T15:25:14,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588001113937) {}
[INFO ] 2020-04-27T15:25:14,008Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:25:14,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588001113937) {}
[INFO ] 2020-04-27T15:25:14,008Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:25:14,012Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-152455.161/nodes/2/cordapps] {}
[INFO ] 2020-04-27T15:25:14,013Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T15:25:14,013Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T15:25:14,018Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-152455.161/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T15:25:14,040Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T15:25:14,040Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T15:25:14,059Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:25:14,059Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T15:25:14,063Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T15:24:53.138Z
      epoch=1
  } {}
[INFO ] 2020-04-27T15:25:14,476Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,477Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-152455.161/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,477Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,492Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,494Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,494Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,588Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,596Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,598Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,600Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,600Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,655Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T15:25:14,666Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T15:25:14,667Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:25:14,667Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:25:14,754Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T15:25:14,755Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T15:25:14,773Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T15:25:14,773Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588001114773) {}
[INFO ] 2020-04-27T15:25:14,775Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T15:25:14,781Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588001114773) {}
[INFO ] 2020-04-27T15:25:14,787Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T15:25:14,791Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588001114773) {}
[INFO ] 2020-04-27T15:25:14,797Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:25:14,823Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=010BD891F6D623A01304BD8C586639F1F51FC6A4A2AE4BF95E8DA4685D7D4425 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T15:25:14,832Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588001114773) {}
[INFO ] 2020-04-27T15:25:14,835Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588001112236) {}
[INFO ] 2020-04-27T15:25:14,837Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T15:25:14,846Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588001114773) {}
[INFO ] 2020-04-27T15:25:14,847Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T15:25:14,859Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588001113937) {}
[INFO ] 2020-04-27T15:25:14,860Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T15:25:14,870Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588001114773) {}
[INFO ] 2020-04-27T15:25:14,871Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T15:25:14,880Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588001114773) {}
[INFO ] 2020-04-27T15:25:14,880Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T15:25:14,880Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588001114773) {}
[INFO ] 2020-04-27T15:25:14,880Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:32,044Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T16:28:32,359Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:28:34,221Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T16:28:34,279Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:28:34,325Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:28:34,326Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T16:28:34,326Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:28:34,327Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:28:34,327Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T16:28:34,329Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:28:34,329Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:28:34,339Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T16:28:34,350Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:28:34,350Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T16:28:34,350Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:28:34,350Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T16:28:34,351Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:28:34,414Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:28:34,414Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T16:28:34,414Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:28:34,414Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T16:28:34,427Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:28:34,427Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:28:34,449Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,461Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:28:34,471Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T16:28:34,495Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:28:34,495Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T16:28:34,495Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:28:34,507Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T16:28:34,508Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:28:34,518Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,518Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T16:28:34,518Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,518Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T16:28:34,518Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,518Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,530Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T16:28:34,554Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,554Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T16:28:34,579Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,579Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,590Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T16:28:34,613Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,613Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:28:34,623Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T16:28:34,634Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:28:34,634Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T16:28:34,634Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:28:34,644Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T16:28:34,644Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:28:34,644Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,644Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T16:28:34,656Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,657Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T16:28:34,657Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,657Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,657Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,676Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:28:34,677Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,677Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:28:34,677Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:28:34,677Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,677Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T16:28:34,687Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:28:34,687Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:28:34,687Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T16:28:34,687Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:28:34,690Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:28:34,697Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T16:28:34,697Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:28:34,761Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T16:28:35,008Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-162825.748/nodes/0/cordapps] {}
[INFO ] 2020-04-27T16:28:35,015Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:28:35,024Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:28:35,162Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:28:36,173Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:28:36,231Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:28:36,315Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:28:36,318Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:28:36,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:28:23.563Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:28:41,641Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:41,645Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-162825.748/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:41,645Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:41,687Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:41,786Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:41,799Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:44,178Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:44,944Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:44,947Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:44,952Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:44,952Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:45,095Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:45,151Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:28:45,180Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:28:45,180Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:28:45,435Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:28:45,446Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:28:45,446Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588004925446) {}
[INFO ] 2020-04-27T16:28:45,451Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:28:45,661Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588004925446) {}
[INFO ] 2020-04-27T16:28:45,729Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:28:45,753Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588004925446) {}
[INFO ] 2020-04-27T16:28:45,782Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:45,829Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:28:45,837Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T16:28:45,840Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T16:28:46,315Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588004925446) {}
[INFO ] 2020-04-27T16:28:46,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588004925446) {}
[INFO ] 2020-04-27T16:28:46,345Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:46,345Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588004925446) {}
[INFO ] 2020-04-27T16:28:46,346Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:46,355Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-162825.748/nodes/1/cordapps] {}
[INFO ] 2020-04-27T16:28:46,355Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:28:46,355Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:28:46,741Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:28:46,763Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:28:46,764Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:28:46,788Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:28:46,788Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:28:46,792Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:28:23.563Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:28:47,397Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,400Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-162825.748/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,400Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,422Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,424Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,424Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,684Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,756Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,758Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,760Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,760Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,830Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:47,836Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:28:47,838Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:28:47,838Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:28:47,957Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:28:47,959Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T16:28:48,008Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:28:48,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588004928008) {}
[INFO ] 2020-04-27T16:28:48,010Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:28:48,017Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588004928008) {}
[INFO ] 2020-04-27T16:28:48,022Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:28:48,025Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588004928008) {}
[INFO ] 2020-04-27T16:28:48,030Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:48,053Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:28:48,064Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588004928008) {}
[INFO ] 2020-04-27T16:28:48,069Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588004925446) {}
[INFO ] 2020-04-27T16:28:48,071Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:28:48,081Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588004928008) {}
[INFO ] 2020-04-27T16:28:48,082Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:28:48,092Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588004928008) {}
[INFO ] 2020-04-27T16:28:48,092Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:48,093Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588004928008) {}
[INFO ] 2020-04-27T16:28:48,093Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:48,099Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-162825.748/nodes/2/cordapps] {}
[INFO ] 2020-04-27T16:28:48,099Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:28:48,099Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:28:48,106Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-162825.748/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:28:48,131Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:28:48,132Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:28:48,150Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:28:48,150Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:28:48,152Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:28:23.563Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:28:48,736Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,738Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-162825.748/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,738Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,756Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,826Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,827Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,926Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,934Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,936Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,938Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,938Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,987Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:28:48,991Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:28:48,992Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:28:48,992Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:28:49,111Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:28:49,113Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T16:28:49,168Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:28:49,168Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588004929168) {}
[INFO ] 2020-04-27T16:28:49,170Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:28:49,177Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588004929168) {}
[INFO ] 2020-04-27T16:28:49,183Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:28:49,187Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588004929168) {}
[INFO ] 2020-04-27T16:28:49,191Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:49,215Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:28:49,222Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588004929168) {}
[INFO ] 2020-04-27T16:28:49,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588004925446) {}
[INFO ] 2020-04-27T16:28:49,228Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:28:49,236Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588004929168) {}
[INFO ] 2020-04-27T16:28:49,237Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:28:49,248Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588004928008) {}
[INFO ] 2020-04-27T16:28:49,249Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:28:49,257Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588004929168) {}
[INFO ] 2020-04-27T16:28:49,259Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:28:49,267Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588004929168) {}
[INFO ] 2020-04-27T16:28:49,267Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:28:49,267Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588004929168) {}
[INFO ] 2020-04-27T16:28:49,267Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:08,429Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T16:32:08,740Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:32:10,339Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T16:32:10,386Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:32:10,426Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:32:10,427Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T16:32:10,427Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:32:10,427Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:32:10,427Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T16:32:10,433Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:32:10,433Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:32:10,446Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T16:32:10,446Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:32:10,457Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T16:32:10,457Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:32:10,457Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T16:32:10,458Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:32:10,511Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:32:10,511Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T16:32:10,521Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:32:10,521Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T16:32:10,521Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:32:10,521Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:32:10,546Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,556Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:32:10,556Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T16:32:10,578Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:32:10,579Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T16:32:10,590Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:32:10,591Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T16:32:10,591Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:32:10,603Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,603Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T16:32:10,603Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,603Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T16:32:10,603Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,603Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,603Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T16:32:10,625Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,625Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T16:32:10,635Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,635Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,635Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T16:32:10,646Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,646Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:32:10,646Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T16:32:10,658Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:32:10,658Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T16:32:10,659Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:32:10,659Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T16:32:10,659Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:32:10,668Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,669Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T16:32:10,669Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,669Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T16:32:10,669Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,669Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,669Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T16:32:10,681Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,681Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:32:10,681Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,681Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:32:10,681Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,681Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:32:10,681Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,682Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:32:10,682Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,682Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:32:10,682Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,682Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:32:10,682Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:32:10,682Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,682Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T16:32:10,692Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:32:10,693Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:32:10,693Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T16:32:10,693Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:32:10,695Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:32:10,705Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T16:32:10,705Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:32:10,731Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T16:32:10,917Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-163202.265/nodes/0/cordapps] {}
[INFO ] 2020-04-27T16:32:10,923Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:32:10,932Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:32:11,067Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:32:11,975Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:32:12,027Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:32:12,103Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:32:12,107Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:32:12,304Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:32:00.266Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:32:17,147Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:17,151Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-163202.265/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:17,151Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:17,195Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:17,295Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:17,304Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:19,617Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:20,290Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:20,301Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:20,339Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:20,339Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:20,411Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:20,455Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:32:20,474Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:32:20,474Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:32:20,697Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:32:20,708Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:32:20,708Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005140708) {}
[INFO ] 2020-04-27T16:32:20,714Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:32:20,921Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005140708) {}
[INFO ] 2020-04-27T16:32:20,982Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:32:21,002Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005140708) {}
[INFO ] 2020-04-27T16:32:21,031Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:21,058Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:32:21,066Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T16:32:21,069Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T16:32:21,460Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005140708) {}
[INFO ] 2020-04-27T16:32:21,487Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005140708) {}
[INFO ] 2020-04-27T16:32:21,488Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:21,489Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005140708) {}
[INFO ] 2020-04-27T16:32:21,489Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:21,498Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-163202.265/nodes/1/cordapps] {}
[INFO ] 2020-04-27T16:32:21,499Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:32:21,499Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:32:21,515Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:32:21,925Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:32:21,926Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:32:21,948Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:32:21,948Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:32:21,951Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:32:00.266Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:32:22,581Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,583Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-163202.265/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,583Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,604Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,606Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,606Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,716Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,771Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,772Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,773Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,773Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,821Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:22,825Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:32:22,828Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:32:22,828Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:32:22,932Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:32:22,933Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T16:32:22,983Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:32:22,983Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005142983) {}
[INFO ] 2020-04-27T16:32:22,984Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:32:22,990Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005142983) {}
[INFO ] 2020-04-27T16:32:22,996Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:32:22,999Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005142983) {}
[INFO ] 2020-04-27T16:32:23,005Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:23,029Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:32:23,036Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005142983) {}
[INFO ] 2020-04-27T16:32:23,040Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005140708) {}
[INFO ] 2020-04-27T16:32:23,041Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:32:23,052Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005142983) {}
[INFO ] 2020-04-27T16:32:23,053Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:32:23,062Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005142983) {}
[INFO ] 2020-04-27T16:32:23,062Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:23,062Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005142983) {}
[INFO ] 2020-04-27T16:32:23,062Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:23,067Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-163202.265/nodes/2/cordapps] {}
[INFO ] 2020-04-27T16:32:23,067Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:32:23,068Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:32:23,073Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-163202.265/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:32:23,096Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:32:23,097Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:32:23,115Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:32:23,115Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:32:23,119Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:32:00.266Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:32:23,590Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,592Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-163202.265/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,592Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,608Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,673Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,673Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,759Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,767Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,768Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,769Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,769Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,812Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:32:23,816Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:32:23,817Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:32:23,817Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:32:23,915Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:32:23,916Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T16:32:23,961Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:32:23,961Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005143961) {}
[INFO ] 2020-04-27T16:32:23,963Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:32:23,969Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005143961) {}
[INFO ] 2020-04-27T16:32:23,974Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:32:23,976Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005143961) {}
[INFO ] 2020-04-27T16:32:23,981Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:24,002Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:32:24,008Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005143961) {}
[INFO ] 2020-04-27T16:32:24,012Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005140708) {}
[INFO ] 2020-04-27T16:32:24,013Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:32:24,021Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005143961) {}
[INFO ] 2020-04-27T16:32:24,022Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:32:24,030Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005142983) {}
[INFO ] 2020-04-27T16:32:24,031Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:32:24,038Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005143961) {}
[INFO ] 2020-04-27T16:32:24,039Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:32:24,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005143961) {}
[INFO ] 2020-04-27T16:32:24,045Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:32:24,045Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005143961) {}
[INFO ] 2020-04-27T16:32:24,045Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T16:32:24,047Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T16:32:24,047Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T16:32:24,051Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T16:32:24,051Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T16:32:24,052Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T16:32:24,052Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T16:32:24,052Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T16:32:24,052Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T16:32:24,669Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e46f5d3a-3059-403d-b541-90ae0bae7e66, invocation_id=37307e7a-7e11-47f0-aa29-609d579496d7, invocation_timestamp=2020-04-27T16:32:24.473Z, origin=Only For Testing, session_id=37307e7a-7e11-47f0-aa29-609d579496d7, session_timestamp=2020-04-27T16:32:24.473Z, thread-id=266}
[WARN ] 2020-04-27T16:32:24,669Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e46f5d3a-3059-403d-b541-90ae0bae7e66, invocation_id=37307e7a-7e11-47f0-aa29-609d579496d7, invocation_timestamp=2020-04-27T16:32:24.473Z, origin=Only For Testing, session_id=37307e7a-7e11-47f0-aa29-609d579496d7, session_timestamp=2020-04-27T16:32:24.473Z, thread-id=266}
[INFO ] 2020-04-27T16:32:25,038Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e46f5d3a-3059-403d-b541-90ae0bae7e66, invocation_id=37307e7a-7e11-47f0-aa29-609d579496d7, invocation_timestamp=2020-04-27T16:32:24.473Z, origin=Only For Testing, session_id=37307e7a-7e11-47f0-aa29-609d579496d7, session_timestamp=2020-04-27T16:32:24.473Z, thread-id=266, tx_id=CA0316B7B0554111D522587BA6FEF67E2C91A9D6490B48CC138A1F99F1775CF3}
[INFO ] 2020-04-27T16:32:25,038Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e46f5d3a-3059-403d-b541-90ae0bae7e66, invocation_id=37307e7a-7e11-47f0-aa29-609d579496d7, invocation_timestamp=2020-04-27T16:32:24.473Z, origin=Only For Testing, session_id=37307e7a-7e11-47f0-aa29-609d579496d7, session_timestamp=2020-04-27T16:32:24.473Z, thread-id=266, tx_id=CA0316B7B0554111D522587BA6FEF67E2C91A9D6490B48CC138A1F99F1775CF3}
[INFO ] 2020-04-27T16:32:25,135Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=e46f5d3a-3059-403d-b541-90ae0bae7e66, invocation_id=37307e7a-7e11-47f0-aa29-609d579496d7, invocation_timestamp=2020-04-27T16:32:24.473Z, origin=Only For Testing, session_id=37307e7a-7e11-47f0-aa29-609d579496d7, session_timestamp=2020-04-27T16:32:24.473Z, thread-id=266, tx_id=CA0316B7B0554111D522587BA6FEF67E2C91A9D6490B48CC138A1F99F1775CF3}
[INFO ] 2020-04-27T16:34:23,046Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id e46f5d3a-3059-403d-b541-90ae0bae7e66 has been waiting for 117 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:35:23,042Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id e46f5d3a-3059-403d-b541-90ae0bae7e66 has been waiting for 177 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:36:23,046Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id e46f5d3a-3059-403d-b541-90ae0bae7e66 has been waiting for 237 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:37:23,047Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id e46f5d3a-3059-403d-b541-90ae0bae7e66 has been waiting for 297 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:38:23,050Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id e46f5d3a-3059-403d-b541-90ae0bae7e66 has been waiting for 357 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:39:23,050Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id e46f5d3a-3059-403d-b541-90ae0bae7e66 has been waiting for 417 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:41:40,756Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T16:41:41,062Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:41:42,884Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T16:41:42,924Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:41:42,972Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:41:42,973Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T16:41:42,974Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:41:42,974Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:41:42,974Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T16:41:42,975Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:41:42,975Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:41:42,975Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T16:41:42,983Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:41:42,983Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T16:41:42,994Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:41:42,994Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T16:41:42,994Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T16:41:43,038Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:41:43,038Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T16:41:43,038Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:41:43,038Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T16:41:43,050Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T16:41:43,050Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:41:43,060Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,060Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:41:43,070Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T16:41:43,091Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:41:43,091Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T16:41:43,101Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:41:43,101Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T16:41:43,101Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T16:41:43,112Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,112Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T16:41:43,112Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,112Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T16:41:43,112Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,112Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,112Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T16:41:43,122Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,122Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T16:41:43,122Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,122Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,122Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T16:41:43,134Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,134Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:41:43,134Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T16:41:43,144Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,156Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,156Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T16:41:43,156Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,156Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:41:43,156Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T16:41:43,166Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T16:41:43,167Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,167Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T16:41:43,167Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T16:41:43,167Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:41:43,167Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T16:41:43,167Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T16:41:43,170Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:41:43,178Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T16:41:43,178Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T16:41:43,208Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T16:41:43,477Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-164134.026/nodes/0/cordapps] {}
[INFO ] 2020-04-27T16:41:43,483Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:41:43,494Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:41:43,706Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:41:44,687Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:41:44,748Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:41:44,876Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:41:44,880Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:41:45,088Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:41:32.084Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:41:49,894Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:49,898Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-164134.026/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:49,898Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:49,939Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:50,044Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:50,083Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:52,106Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:52,777Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:52,779Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:52,783Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:52,783Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:52,848Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:52,885Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:41:52,905Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:41:52,905Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:41:53,181Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T16:41:53,191Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:41:53,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005713191) {}
[INFO ] 2020-04-27T16:41:53,196Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:41:53,355Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005713191) {}
[INFO ] 2020-04-27T16:41:53,412Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:41:53,433Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005713191) {}
[INFO ] 2020-04-27T16:41:53,462Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:41:53,492Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:41:53,500Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T16:41:53,504Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T16:41:53,979Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005713191) {}
[INFO ] 2020-04-27T16:41:54,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005713191) {}
[INFO ] 2020-04-27T16:41:54,011Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:41:54,012Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005713191) {}
[INFO ] 2020-04-27T16:41:54,012Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:41:54,023Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-164134.026/nodes/1/cordapps] {}
[INFO ] 2020-04-27T16:41:54,024Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:41:54,024Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:41:54,030Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:41:54,056Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:41:54,057Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:41:54,082Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:41:54,082Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:41:54,085Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:41:32.084Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:41:54,618Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,621Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-164134.026/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,621Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,642Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,645Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,645Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,763Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,810Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,811Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,813Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,813Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,861Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:54,866Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:41:54,868Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:41:54,868Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:41:54,960Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:41:54,961Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T16:41:54,980Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:41:54,980Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005714980) {}
[INFO ] 2020-04-27T16:41:54,982Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:41:54,989Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005714980) {}
[INFO ] 2020-04-27T16:41:54,994Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:41:54,997Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005714980) {}
[INFO ] 2020-04-27T16:41:55,002Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:41:55,025Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:41:55,033Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005714980) {}
[INFO ] 2020-04-27T16:41:55,037Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005713191) {}
[INFO ] 2020-04-27T16:41:55,038Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:41:55,047Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005714980) {}
[INFO ] 2020-04-27T16:41:55,048Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:41:55,056Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005714980) {}
[INFO ] 2020-04-27T16:41:55,056Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:41:55,056Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005714980) {}
[INFO ] 2020-04-27T16:41:55,056Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:41:55,061Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-164134.026/nodes/2/cordapps] {}
[INFO ] 2020-04-27T16:41:55,061Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T16:41:55,061Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T16:41:55,067Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-164134.026/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T16:41:55,103Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T16:41:55,104Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T16:41:55,200Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:41:55,200Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T16:41:55,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T16:41:32.084Z
      epoch=1
  } {}
[INFO ] 2020-04-27T16:41:55,633Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,635Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-164134.026/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,635Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,653Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,723Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,723Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,816Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,822Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,823Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,825Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,825Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,898Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T16:41:55,903Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T16:41:55,904Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:41:55,904Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:41:55,991Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T16:41:55,993Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T16:41:56,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T16:41:56,009Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005716009) {}
[INFO ] 2020-04-27T16:41:56,011Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:41:56,017Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005716009) {}
[INFO ] 2020-04-27T16:41:56,023Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T16:41:56,026Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005716009) {}
[INFO ] 2020-04-27T16:41:56,031Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:41:56,053Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T16:41:56,060Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005716009) {}
[INFO ] 2020-04-27T16:41:56,063Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588005713191) {}
[INFO ] 2020-04-27T16:41:56,064Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T16:41:56,072Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005716009) {}
[INFO ] 2020-04-27T16:41:56,073Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:41:56,082Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588005714980) {}
[INFO ] 2020-04-27T16:41:56,083Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T16:41:56,092Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005716009) {}
[INFO ] 2020-04-27T16:41:56,093Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T16:41:56,100Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005716009) {}
[INFO ] 2020-04-27T16:41:56,100Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T16:41:56,100Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588005716009) {}
[INFO ] 2020-04-27T16:41:56,100Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T16:41:56,102Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T16:41:56,102Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T16:41:56,106Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T16:41:56,106Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T16:41:56,106Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T16:41:56,106Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T16:41:56,106Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T16:41:56,106Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T16:41:56,788Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cae6d313-6e80-450b-b090-62aafea2ffcb, invocation_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, invocation_timestamp=2020-04-27T16:41:56.200Z, origin=Only For Testing, session_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, session_timestamp=2020-04-27T16:41:56.200Z, thread-id=266}
[WARN ] 2020-04-27T16:41:56,788Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cae6d313-6e80-450b-b090-62aafea2ffcb, invocation_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, invocation_timestamp=2020-04-27T16:41:56.200Z, origin=Only For Testing, session_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, session_timestamp=2020-04-27T16:41:56.200Z, thread-id=266}
[INFO ] 2020-04-27T16:41:57,166Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cae6d313-6e80-450b-b090-62aafea2ffcb, invocation_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, invocation_timestamp=2020-04-27T16:41:56.200Z, origin=Only For Testing, session_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, session_timestamp=2020-04-27T16:41:56.200Z, thread-id=266, tx_id=13A975874DBA078CD2F281354DC7E7B9532E6277221853873071548F1225BA7C}
[INFO ] 2020-04-27T16:41:57,166Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cae6d313-6e80-450b-b090-62aafea2ffcb, invocation_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, invocation_timestamp=2020-04-27T16:41:56.200Z, origin=Only For Testing, session_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, session_timestamp=2020-04-27T16:41:56.200Z, thread-id=266, tx_id=13A975874DBA078CD2F281354DC7E7B9532E6277221853873071548F1225BA7C}
[INFO ] 2020-04-27T16:41:57,259Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=cae6d313-6e80-450b-b090-62aafea2ffcb, invocation_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, invocation_timestamp=2020-04-27T16:41:56.200Z, origin=Only For Testing, session_id=1e04dd8a-27ee-4ea2-849d-dde6460a8cad, session_timestamp=2020-04-27T16:41:56.200Z, thread-id=266, tx_id=13A975874DBA078CD2F281354DC7E7B9532E6277221853873071548F1225BA7C}
[INFO ] 2020-04-27T16:43:55,040Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 117 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:44:55,041Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 177 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:45:55,041Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 237 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:46:55,044Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 297 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:47:55,044Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 357 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:48:55,049Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 417 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:49:55,032Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 477 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:50:55,034Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 537 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:51:55,036Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 597 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:52:55,037Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 657 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:53:55,039Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 717 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:54:55,038Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 777 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:55:55,038Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 837 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:56:55,042Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 897 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:57:55,040Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 957 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:58:55,046Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 1017 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T16:59:55,046Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 1077 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T17:00:55,047Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 1137 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T17:01:55,048Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 1197 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T17:02:55,053Z [pool-18-thread-1] statemachine.FlowMonitor. - Flow with id cae6d313-6e80-450b-b090-62aafea2ffcb has been waiting for 1257 seconds to receive messages from parties [O=Mock Company 2, L=London, C=GB]. {}
[INFO ] 2020-04-27T17:17:26,924Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T17:17:27,201Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T17:17:28,683Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-27T17:17:29,606Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T17:17:29,627Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-27T17:17:29,629Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T17:17:30,162Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:17:30,185Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T17:17:30,699Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:17:30,699Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:17:30,699Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T17:17:30,836Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:17:30,848Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T17:17:31,275Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T17:17:31,481Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T17:17:31,481Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T17:17:31,502Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T17:17:31,503Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T17:17:31,503Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T17:17:32,239Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:17:32,239Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T17:17:32,250Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:17:32,250Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T17:17:32,307Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:17:32,307Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:17:32,408Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,433Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T17:17:32,477Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T17:17:32,536Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T17:17:32,536Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T17:17:32,549Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T17:17:32,561Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T17:17:32,561Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T17:17:32,583Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,595Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T17:17:32,595Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,595Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T17:17:32,595Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,595Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,607Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T17:17:32,642Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,642Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T17:17:32,652Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,652Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,652Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T17:17:32,666Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,666Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T17:17:32,677Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,700Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,712Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:17:32,734Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:17:32,734Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,745Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T17:17:32,745Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:17:32,755Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:17:32,755Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T17:17:32,755Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:17:32,757Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T17:17:32,767Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T17:17:32,767Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T17:17:32,795Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T17:17:32,942Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-171722.065/nodes/0/cordapps] {}
[INFO ] 2020-04-27T17:17:32,946Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:17:32,955Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:17:33,037Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:17:33,694Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:17:33,729Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:17:33,787Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:33,790Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:33,927Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:17:20.391Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:17:37,832Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:37,836Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-171722.065/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:37,836Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:37,874Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:37,953Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:37,959Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:39,724Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:40,268Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:40,270Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:40,273Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:40,273Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:40,339Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:40,374Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:17:40,391Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:17:40,392Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:17:40,572Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:17:40,579Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:17:40,580Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007860580) {}
[INFO ] 2020-04-27T17:17:40,584Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:17:40,708Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007860580) {}
[INFO ] 2020-04-27T17:17:40,750Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:17:40,765Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007860580) {}
[INFO ] 2020-04-27T17:17:40,789Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:40,819Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:17:40,825Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T17:17:40,828Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T17:17:41,165Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007860580) {}
[INFO ] 2020-04-27T17:17:41,190Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007860580) {}
[INFO ] 2020-04-27T17:17:41,191Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:41,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007860580) {}
[INFO ] 2020-04-27T17:17:41,192Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:41,199Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-171722.065/nodes/1/cordapps] {}
[INFO ] 2020-04-27T17:17:41,200Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:17:41,200Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:17:41,205Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:17:41,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:17:41,228Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:17:41,253Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:41,253Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:41,257Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:17:20.391Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:17:41,717Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,719Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-171722.065/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,719Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,736Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,738Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,738Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,839Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,850Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,851Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,853Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,853Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,905Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:41,911Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:17:41,913Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:41,913Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:42,011Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:42,013Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T17:17:42,031Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:17:42,031Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007862031) {}
[INFO ] 2020-04-27T17:17:42,033Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:42,040Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007862031) {}
[INFO ] 2020-04-27T17:17:42,046Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:17:42,049Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007862031) {}
[INFO ] 2020-04-27T17:17:42,053Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:42,074Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:17:42,082Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007862031) {}
[INFO ] 2020-04-27T17:17:42,086Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007860580) {}
[INFO ] 2020-04-27T17:17:42,088Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:17:42,097Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007862031) {}
[INFO ] 2020-04-27T17:17:42,098Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:42,107Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007862031) {}
[INFO ] 2020-04-27T17:17:42,107Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:42,107Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007862031) {}
[INFO ] 2020-04-27T17:17:42,107Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:42,113Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-171722.065/nodes/2/cordapps] {}
[INFO ] 2020-04-27T17:17:42,113Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:17:42,113Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:17:42,119Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171722.065/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:17:42,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:17:42,158Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:17:42,179Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:42,179Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:42,181Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:17:20.391Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:17:42,612Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,614Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-171722.065/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,614Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,630Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,633Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,633Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,734Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,743Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,744Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,746Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,746Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,789Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:42,793Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:17:42,794Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:42,794Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:42,879Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:42,880Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T17:17:42,899Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:17:42,899Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007862899) {}
[INFO ] 2020-04-27T17:17:42,901Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:42,907Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007862899) {}
[INFO ] 2020-04-27T17:17:42,912Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:17:42,915Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007862899) {}
[INFO ] 2020-04-27T17:17:42,919Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:42,939Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:17:42,946Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007862899) {}
[INFO ] 2020-04-27T17:17:42,949Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007860580) {}
[INFO ] 2020-04-27T17:17:42,950Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:17:42,958Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007862899) {}
[INFO ] 2020-04-27T17:17:42,959Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:42,968Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007862031) {}
[INFO ] 2020-04-27T17:17:42,969Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:42,976Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007862899) {}
[INFO ] 2020-04-27T17:17:42,977Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:42,984Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007862899) {}
[INFO ] 2020-04-27T17:17:42,984Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:42,984Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007862899) {}
[INFO ] 2020-04-27T17:17:42,984Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T17:17:42,985Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:17:42,985Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:17:42,989Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:17:42,989Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:17:42,989Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:17:42,989Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:17:42,989Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:17:42,989Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:17:43,551Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=79ba4486-e207-415c-9b67-5fa684fbc245, invocation_id=020bf1e1-901d-4257-b69f-fbb13430ec50, invocation_timestamp=2020-04-27T17:17:43.048Z, origin=Only For Testing, session_id=020bf1e1-901d-4257-b69f-fbb13430ec50, session_timestamp=2020-04-27T17:17:43.048Z, thread-id=268}
[WARN ] 2020-04-27T17:17:43,551Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=79ba4486-e207-415c-9b67-5fa684fbc245, invocation_id=020bf1e1-901d-4257-b69f-fbb13430ec50, invocation_timestamp=2020-04-27T17:17:43.048Z, origin=Only For Testing, session_id=020bf1e1-901d-4257-b69f-fbb13430ec50, session_timestamp=2020-04-27T17:17:43.048Z, thread-id=268}
[INFO ] 2020-04-27T17:17:43,879Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=79ba4486-e207-415c-9b67-5fa684fbc245, invocation_id=020bf1e1-901d-4257-b69f-fbb13430ec50, invocation_timestamp=2020-04-27T17:17:43.048Z, origin=Only For Testing, session_id=020bf1e1-901d-4257-b69f-fbb13430ec50, session_timestamp=2020-04-27T17:17:43.048Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:43,879Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=79ba4486-e207-415c-9b67-5fa684fbc245, invocation_id=020bf1e1-901d-4257-b69f-fbb13430ec50, invocation_timestamp=2020-04-27T17:17:43.048Z, origin=Only For Testing, session_id=020bf1e1-901d-4257-b69f-fbb13430ec50, session_timestamp=2020-04-27T17:17:43.048Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:43,980Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=79ba4486-e207-415c-9b67-5fa684fbc245, invocation_id=020bf1e1-901d-4257-b69f-fbb13430ec50, invocation_timestamp=2020-04-27T17:17:43.048Z, origin=Only For Testing, session_id=020bf1e1-901d-4257-b69f-fbb13430ec50, session_timestamp=2020-04-27T17:17:43.048Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:44,131Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=3e6a9acd-ef10-4033-b926-fa87b388d9c8, invocation_id=5827e29e-46ba-49fc-ab13-f6e085b374d6, invocation_timestamp=2020-04-27T17:17:44.083Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5827e29e-46ba-49fc-ab13-f6e085b374d6, session_timestamp=2020-04-27T17:17:44.083Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:44,181Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=3e6a9acd-ef10-4033-b926-fa87b388d9c8, invocation_id=5827e29e-46ba-49fc-ab13-f6e085b374d6, invocation_timestamp=2020-04-27T17:17:44.083Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5827e29e-46ba-49fc-ab13-f6e085b374d6, session_timestamp=2020-04-27T17:17:44.083Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:44,185Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=3e6a9acd-ef10-4033-b926-fa87b388d9c8, invocation_id=5827e29e-46ba-49fc-ab13-f6e085b374d6, invocation_timestamp=2020-04-27T17:17:44.083Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5827e29e-46ba-49fc-ab13-f6e085b374d6, session_timestamp=2020-04-27T17:17:44.083Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:44,193Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=3e6a9acd-ef10-4033-b926-fa87b388d9c8, invocation_id=5827e29e-46ba-49fc-ab13-f6e085b374d6, invocation_timestamp=2020-04-27T17:17:44.083Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5827e29e-46ba-49fc-ab13-f6e085b374d6, session_timestamp=2020-04-27T17:17:44.083Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:44,226Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=79ba4486-e207-415c-9b67-5fa684fbc245, invocation_id=020bf1e1-901d-4257-b69f-fbb13430ec50, invocation_timestamp=2020-04-27T17:17:43.048Z, origin=Only For Testing, session_id=020bf1e1-901d-4257-b69f-fbb13430ec50, session_timestamp=2020-04-27T17:17:43.048Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:44,226Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=79ba4486-e207-415c-9b67-5fa684fbc245, invocation_id=020bf1e1-901d-4257-b69f-fbb13430ec50, invocation_timestamp=2020-04-27T17:17:43.048Z, origin=Only For Testing, session_id=020bf1e1-901d-4257-b69f-fbb13430ec50, session_timestamp=2020-04-27T17:17:43.048Z, thread-id=268, tx_id=48845B58E53841204199D407C08B2272769241461F58B2C85004881D03802DCF}
[INFO ] 2020-04-27T17:17:44,333Z [Mock network] corda.flow. - Flow raised an error: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB]. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
[INFO ] 2020-04-27T17:17:44,336Z [Mock network] statemachine.StaffedFlowHospital. - Flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, timestamp: 2020-04-27T17:17:44.248Z, entityType: Invocation, sessionId=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, timestamp: 2020-04-27T17:17:44.248Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1095126181776465446)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1095126181776465446), additionalEntropy=-2184375936409717872), SessionId(toLong=6380697913844898614)=Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6380697913844898614), additionalEntropy=268953833230757971)}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C6A8F1CA75DFB727A333D51CB0D9F3DED5A47011921374459AACAAAA4A9099E0), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow@70fe8b91, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=d0091e87-7aac-41ca-bf8f-d9ee38c249df) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
[INFO ] 2020-04-27T17:17:44,338Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:161) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow.call(GameUpdateFlow.java:133) ~[main/:?]
	at net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow.call(GameUpdateFlow.java:35) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T17:17:44,340Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:161) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow.call(GameUpdateFlow.java:133) ~[main/:?]
	at net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow.call(GameUpdateFlow.java:35) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T17:17:44,358Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] errored, dumping all transitions:

 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.252Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, timestamp: 2020-04-27T17:17:44.248Z, entityType: Invocation, sessionId=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, timestamp: 2020-04-27T17:17:44.248Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C6A8F1CA75DFB727A333D51CB0D9F3DED5A47011921374459AACAAAA4A9099E0), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@29768ae2])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@29768ae2])
    SignalFlowHasStarted(flowId=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@29768ae2]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.315Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3], sessionId=SessionId(toLong=-1095126181776465446))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.250Z
    2020-04-27T17:17:44.315Z
checkpoint.sessions.SessionId(toLong=-1095126181776465446): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1095126181776465446), additionalEntropy=-2184375936409717872)


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.322Z
  Event: InitiateFlow(destination=O=Mock Company 1, L=London, C=GB, wellKnownParty=O=Mock Company 1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3], sessionId=SessionId(toLong=6380697913844898614))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.315Z
    2020-04-27T17:17:44.322Z
checkpoint.sessions.SessionId(toLong=6380697913844898614): 
    null
    Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6380697913844898614), additionalEntropy=268953833230757971)


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.328Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.322Z
    2020-04-27T17:17:44.328Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.333Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.328Z
    2020-04-27T17:17:44.333Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false)]


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.342Z
  Event: Error(exception=java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB])
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.333Z
    2020-04-27T17:17:44.335Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-8323563687468975764, exception=java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB])], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.345Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.346Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.335Z
    2020-04-27T17:17:44.346Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
[WARN ] 2020-04-27T17:17:44,358Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] error [errorCode=1okv3sz, moreInformationAt=https://errors.corda.net/OS/4.4/1okv3sz] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:161) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow.call(GameUpdateFlow.java:133) ~[main/:?]
	at net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow.call(GameUpdateFlow.java:35) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T17:17:44,360Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
[WARN ] 2020-04-27T17:17:44,370Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] errored, dumping all transitions:

 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.252Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, timestamp: 2020-04-27T17:17:44.248Z, entityType: Invocation, sessionId=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, timestamp: 2020-04-27T17:17:44.248Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C6A8F1CA75DFB727A333D51CB0D9F3DED5A47011921374459AACAAAA4A9099E0), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@29768ae2])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@29768ae2])
    SignalFlowHasStarted(flowId=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@29768ae2]
    []
isFlowResumed: 
    false
    true


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.315Z
  Event: InitiateFlow(destination=O=Mock Company 2, L=London, C=GB, wellKnownParty=O=Mock Company 2, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3], sessionId=SessionId(toLong=-1095126181776465446))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.250Z
    2020-04-27T17:17:44.315Z
checkpoint.sessions.SessionId(toLong=-1095126181776465446): 
    null
    Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1095126181776465446), additionalEntropy=-2184375936409717872)


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.322Z
  Event: InitiateFlow(destination=O=Mock Company 1, L=London, C=GB, wellKnownParty=O=Mock Company 1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3], sessionId=SessionId(toLong=6380697913844898614))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.315Z
    2020-04-27T17:17:44.322Z
checkpoint.sessions.SessionId(toLong=6380697913844898614): 
    null
    Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6380697913844898614), additionalEntropy=268953833230757971)


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.328Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.322Z
    2020-04-27T17:17:44.328Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.333Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.328Z
    2020-04-27T17:17:44.333Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignaturesFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false)]


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.342Z
  Event: Error(exception=java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB])
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.333Z
    2020-04-27T17:17:44.335Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-8323563687468975764, exception=java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB])], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.345Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.346Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.335Z
    2020-04-27T17:17:44.346Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] ---
  Timestamp: 2020-04-27T17:17:44.367Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-8323563687468975764)], sessions=[], senderUUID=d0091e87-7aac-41ca-bf8f-d9ee38c249df)
    CreateTransaction
    RemoveCheckpoint(id=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-1095126181776465446), SessionId(toLong=6380697913844898614)])
    RemoveFlow(flowId=[48ad47a2-bc70-4dc2-a8a0-5d0e091befe3], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-8323563687468975764, exception=java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB])]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, timestamp: 2020-04-27T17:17:44.248Z, entityType: Invocation, sessionId=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, timestamp: 2020-04-27T17:17:44.248Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-1095126181776465446)=Uninitiated(destination=O=Mock Company 2, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1095126181776465446), additionalEntropy=-2184375936409717872), SessionId(toLong=6380697913844898614)=Uninitiated(destination=O=Mock Company 1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6380697913844898614), additionalEntropy=268953833230757971)}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=65CD20600D042FFA4E9DD6A3A4821B9463A9F53EB576D0CB5676E7B9A34A52C5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C6A8F1CA75DFB727A333D51CB0D9F3DED5A47011921374459AACAAAA4A9099E0), errorState=Errored(errors=[FlowError(errorId=-8323563687468975764, exception=java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB])], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow@70fe8b91, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=d0091e87-7aac-41ca-bf8f-d9ee38c249df))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T17:17:44.346Z
    2020-04-27T17:17:44.358Z
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
[WARN ] 2020-04-27T17:17:44,370Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [48ad47a2-bc70-4dc2-a8a0-5d0e091befe3] error [errorCode=1okv3sz, moreInformationAt=https://errors.corda.net/OS/4.4/1okv3sz] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=48ad47a2-bc70-4dc2-a8a0-5d0e091befe3, invocation_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, invocation_timestamp=2020-04-27T17:17:44.248Z, origin=Only For Testing, session_id=9a0a3369-02e1-48f3-b3c2-d7f69ef1bc4b, session_timestamp=2020-04-27T17:17:44.248Z, thread-id=268}
java.lang.IllegalArgumentException: The Initiator of CollectSignaturesFlow must pass in exactly the sessions required to sign the transaction, the following extra sessions were passed in: [O=Mock Company 1, L=London, C=GB]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:161) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.CollectSignaturesFlow.call(CollectSignaturesFlow.kt:67) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow.call(GameUpdateFlow.java:133) ~[main/:?]
	at net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow.call(GameUpdateFlow.java:35) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T17:17:44,477Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-171744.399/nodes/0/cordapps] {}
[INFO ] 2020-04-27T17:17:44,477Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:17:44,477Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:17:44,483Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:17:44,507Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:17:44,508Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:17:44,512Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:44,512Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:44,517Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:17:44.399Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:17:44,946Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:44,947Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-171744.399/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:44,947Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:44,961Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:44,963Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:44,963Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,041Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,048Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,049Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,050Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,051Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,092Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,123Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:17:45,131Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:17:45,131Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:17:45,217Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:17:45,221Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:17:45,221Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007865221) {}
[INFO ] 2020-04-27T17:17:45,223Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:17:45,236Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007865221) {}
[INFO ] 2020-04-27T17:17:45,245Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:17:45,248Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007865221) {}
[INFO ] 2020-04-27T17:17:45,252Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:45,275Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:17:45,277Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T17:17:45,277Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T17:17:45,283Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007865221) {}
[INFO ] 2020-04-27T17:17:45,286Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007865221) {}
[INFO ] 2020-04-27T17:17:45,286Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:45,287Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007865221) {}
[INFO ] 2020-04-27T17:17:45,287Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:45,291Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-171744.399/nodes/1/cordapps] {}
[INFO ] 2020-04-27T17:17:45,291Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:17:45,291Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:17:45,296Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:17:45,315Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:17:45,316Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:17:45,332Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:45,332Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:45,334Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:17:44.399Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:17:45,700Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,702Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-171744.399/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,702Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,720Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,722Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,723Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,811Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,819Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,820Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,821Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,821Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,866Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:45,869Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:17:45,870Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:45,870Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:45,945Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:45,946Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T17:17:45,962Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:17:45,962Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007865962) {}
[INFO ] 2020-04-27T17:17:45,963Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:45,967Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007865962) {}
[INFO ] 2020-04-27T17:17:45,972Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:17:45,974Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007865962) {}
[INFO ] 2020-04-27T17:17:45,978Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:45,994Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:17:45,999Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007865962) {}
[INFO ] 2020-04-27T17:17:46,002Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007865221) {}
[INFO ] 2020-04-27T17:17:46,002Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:17:46,009Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007865962) {}
[INFO ] 2020-04-27T17:17:46,010Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:46,017Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007865962) {}
[INFO ] 2020-04-27T17:17:46,017Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:46,018Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007865962) {}
[INFO ] 2020-04-27T17:17:46,018Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:46,022Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-171744.399/nodes/2/cordapps] {}
[INFO ] 2020-04-27T17:17:46,022Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:17:46,022Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:17:46,027Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-171744.399/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:17:46,045Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:17:46,045Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:17:46,061Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:46,061Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:46,063Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:17:44.399Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:17:46,420Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,421Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-171744.399/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,421Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,445Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,447Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,447Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,519Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,525Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,527Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,528Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,528Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,569Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:17:46,573Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:17:46,574Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:46,574Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:46,648Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:17:46,649Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T17:17:46,664Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:17:46,664Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007866664) {}
[INFO ] 2020-04-27T17:17:46,665Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:46,670Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007866664) {}
[INFO ] 2020-04-27T17:17:46,674Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:17:46,677Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007866664) {}
[INFO ] 2020-04-27T17:17:46,688Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:46,705Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:17:46,710Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007866664) {}
[INFO ] 2020-04-27T17:17:46,712Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588007865221) {}
[INFO ] 2020-04-27T17:17:46,713Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:17:46,718Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007866664) {}
[INFO ] 2020-04-27T17:17:46,719Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:46,725Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588007865962) {}
[INFO ] 2020-04-27T17:17:46,725Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:46,731Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007866664) {}
[INFO ] 2020-04-27T17:17:46,732Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:17:46,738Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007866664) {}
[INFO ] 2020-04-27T17:17:46,738Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:17:46,738Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588007866664) {}
[INFO ] 2020-04-27T17:17:46,738Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T17:17:46,739Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:17:46,739Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:17:46,739Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:17:46,739Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:17:46,739Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:17:46,739Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:17:46,739Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:17:46,739Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:17:46,800Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=75fe64c0-5ae8-4fc2-b3e1-d9c0df73a6fe, invocation_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, invocation_timestamp=2020-04-27T17:17:46.740Z, origin=Only For Testing, session_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, session_timestamp=2020-04-27T17:17:46.740Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:17:46,800Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=75fe64c0-5ae8-4fc2-b3e1-d9c0df73a6fe, invocation_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, invocation_timestamp=2020-04-27T17:17:46.740Z, origin=Only For Testing, session_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, session_timestamp=2020-04-27T17:17:46.740Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:17:46,816Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=75fe64c0-5ae8-4fc2-b3e1-d9c0df73a6fe, invocation_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, invocation_timestamp=2020-04-27T17:17:46.740Z, origin=Only For Testing, session_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, session_timestamp=2020-04-27T17:17:46.740Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:17:46,855Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=b4361ca1-d852-4505-b3b9-f81854774fd9, invocation_id=6e6d9258-327e-43b3-9f65-0e6831efd71a, invocation_timestamp=2020-04-27T17:17:46.840Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6e6d9258-327e-43b3-9f65-0e6831efd71a, session_timestamp=2020-04-27T17:17:46.840Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:17:46,866Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=b4361ca1-d852-4505-b3b9-f81854774fd9, invocation_id=6e6d9258-327e-43b3-9f65-0e6831efd71a, invocation_timestamp=2020-04-27T17:17:46.840Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6e6d9258-327e-43b3-9f65-0e6831efd71a, session_timestamp=2020-04-27T17:17:46.840Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:17:46,869Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=b4361ca1-d852-4505-b3b9-f81854774fd9, invocation_id=6e6d9258-327e-43b3-9f65-0e6831efd71a, invocation_timestamp=2020-04-27T17:17:46.840Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6e6d9258-327e-43b3-9f65-0e6831efd71a, session_timestamp=2020-04-27T17:17:46.840Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:17:46,875Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=b4361ca1-d852-4505-b3b9-f81854774fd9, invocation_id=6e6d9258-327e-43b3-9f65-0e6831efd71a, invocation_timestamp=2020-04-27T17:17:46.840Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6e6d9258-327e-43b3-9f65-0e6831efd71a, session_timestamp=2020-04-27T17:17:46.840Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:17:46,889Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=75fe64c0-5ae8-4fc2-b3e1-d9c0df73a6fe, invocation_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, invocation_timestamp=2020-04-27T17:17:46.740Z, origin=Only For Testing, session_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, session_timestamp=2020-04-27T17:17:46.740Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:17:46,889Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=75fe64c0-5ae8-4fc2-b3e1-d9c0df73a6fe, invocation_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, invocation_timestamp=2020-04-27T17:17:46.740Z, origin=Only For Testing, session_id=1016c8d8-deab-413c-aad3-f0f3a1e3d8c4, session_timestamp=2020-04-27T17:17:46.740Z, thread-id=498, tx_id=13F1A3F1DE98310414CB57B839D2031B64D6A7E922D9CA78667C0729BB6F5864}
[INFO ] 2020-04-27T17:36:49,212Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T17:36:49,549Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T17:36:51,199Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T17:36:51,258Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T17:36:51,304Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:36:51,305Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T17:36:51,312Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:36:51,312Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:36:51,313Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T17:36:51,313Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:36:51,313Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T17:36:51,335Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T17:36:51,346Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T17:36:51,346Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T17:36:51,357Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T17:36:51,357Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T17:36:51,358Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T17:36:51,417Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:36:51,417Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T17:36:51,430Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:36:51,430Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T17:36:51,441Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T17:36:51,441Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:36:51,463Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,464Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T17:36:51,487Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T17:36:51,530Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T17:36:51,530Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T17:36:51,542Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T17:36:51,554Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T17:36:51,554Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T17:36:51,566Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,566Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T17:36:51,567Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,567Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T17:36:51,567Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,567Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,567Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T17:36:51,612Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,612Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T17:36:51,623Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,623Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,623Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T17:36:51,633Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,633Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T17:36:51,645Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T17:36:51,667Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T17:36:51,668Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T17:36:51,668Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T17:36:51,668Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T17:36:51,668Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T17:36:51,668Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,668Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T17:36:51,679Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,679Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T17:36:51,679Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,679Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,679Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T17:36:51,702Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,703Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:51,713Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T17:36:53,325Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T17:36:53,325Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:36:53,325Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T17:36:53,326Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T17:36:53,327Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T17:36:53,337Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T17:36:53,337Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T17:36:53,373Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T17:36:53,545Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-173642.837/nodes/0/cordapps] {}
[INFO ] 2020-04-27T17:36:53,550Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:36:53,558Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:36:53,753Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:36:54,598Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:36:54,640Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:36:54,710Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:36:54,713Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:36:54,883Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:36:40.473Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:36:59,590Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:36:59,594Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-173642.837/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:36:59,594Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:36:59,683Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:36:59,777Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:36:59,785Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:01,810Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:02,521Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:02,523Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:02,526Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:02,527Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:02,602Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:02,642Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:37:02,661Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:37:02,661Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:37:02,924Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:37:02,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:37:02,935Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009022934) {}
[INFO ] 2020-04-27T17:37:02,940Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:37:03,116Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009022934) {}
[INFO ] 2020-04-27T17:37:03,176Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:37:03,203Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009022934) {}
[INFO ] 2020-04-27T17:37:03,302Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:03,325Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:37:03,332Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T17:37:03,336Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T17:37:03,824Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009022934) {}
[INFO ] 2020-04-27T17:37:03,851Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009022934) {}
[INFO ] 2020-04-27T17:37:03,853Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:03,853Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009022934) {}
[INFO ] 2020-04-27T17:37:03,853Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:03,862Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-173642.837/nodes/1/cordapps] {}
[INFO ] 2020-04-27T17:37:03,863Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:37:03,863Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:37:03,870Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:37:03,897Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:37:03,898Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:37:03,932Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:03,932Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:03,935Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:36:40.473Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:37:04,524Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,526Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-173642.837/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,526Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,550Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,552Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,552Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,671Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,735Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,736Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,738Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,738Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,796Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:04,802Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:37:04,805Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:04,805Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:04,915Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:04,917Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T17:37:04,938Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:37:04,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009024938) {}
[INFO ] 2020-04-27T17:37:04,940Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:04,948Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009024938) {}
[INFO ] 2020-04-27T17:37:04,955Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:37:04,958Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009024938) {}
[INFO ] 2020-04-27T17:37:04,963Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:04,987Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:37:04,994Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009024938) {}
[INFO ] 2020-04-27T17:37:04,997Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009022934) {}
[INFO ] 2020-04-27T17:37:04,998Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:37:05,008Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009024938) {}
[INFO ] 2020-04-27T17:37:05,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:05,027Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009024938) {}
[INFO ] 2020-04-27T17:37:05,027Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:05,027Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009024938) {}
[INFO ] 2020-04-27T17:37:05,027Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:05,033Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-173642.837/nodes/2/cordapps] {}
[INFO ] 2020-04-27T17:37:05,033Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:37:05,033Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:37:05,076Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173642.837/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:37:05,101Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:37:05,102Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:37:05,124Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:05,124Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:05,127Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:36:40.473Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:37:05,622Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,623Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-173642.837/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,623Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,644Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,648Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,648Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,763Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,772Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,774Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,776Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,776Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,865Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:05,869Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:37:05,870Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:05,870Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:05,963Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:05,964Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T17:37:05,981Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:37:05,981Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009025981) {}
[INFO ] 2020-04-27T17:37:05,983Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:05,989Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009025981) {}
[INFO ] 2020-04-27T17:37:05,996Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:37:05,999Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009025981) {}
[INFO ] 2020-04-27T17:37:06,004Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:06,031Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:37:06,039Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009025981) {}
[INFO ] 2020-04-27T17:37:06,043Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009022934) {}
[INFO ] 2020-04-27T17:37:06,044Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:37:06,052Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009025981) {}
[INFO ] 2020-04-27T17:37:06,053Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:06,065Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009024938) {}
[INFO ] 2020-04-27T17:37:06,066Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:06,078Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009025981) {}
[INFO ] 2020-04-27T17:37:06,079Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:06,098Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009025981) {}
[INFO ] 2020-04-27T17:37:06,098Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:06,098Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009025981) {}
[INFO ] 2020-04-27T17:37:06,098Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T17:37:06,136Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:37:06,136Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:37:06,140Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:37:06,140Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:37:06,141Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:37:06,141Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:37:06,141Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:37:06,141Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:37:06,777Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0df831ed-d9a1-4f46-a56f-f883004d705d, invocation_id=71790da3-da15-408f-a58c-1540753a0062, invocation_timestamp=2020-04-27T17:37:06.205Z, origin=Only For Testing, session_id=71790da3-da15-408f-a58c-1540753a0062, session_timestamp=2020-04-27T17:37:06.205Z, thread-id=266}
[WARN ] 2020-04-27T17:37:06,777Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0df831ed-d9a1-4f46-a56f-f883004d705d, invocation_id=71790da3-da15-408f-a58c-1540753a0062, invocation_timestamp=2020-04-27T17:37:06.205Z, origin=Only For Testing, session_id=71790da3-da15-408f-a58c-1540753a0062, session_timestamp=2020-04-27T17:37:06.205Z, thread-id=266}
[INFO ] 2020-04-27T17:37:07,143Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0df831ed-d9a1-4f46-a56f-f883004d705d, invocation_id=71790da3-da15-408f-a58c-1540753a0062, invocation_timestamp=2020-04-27T17:37:06.205Z, origin=Only For Testing, session_id=71790da3-da15-408f-a58c-1540753a0062, session_timestamp=2020-04-27T17:37:06.205Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,143Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0df831ed-d9a1-4f46-a56f-f883004d705d, invocation_id=71790da3-da15-408f-a58c-1540753a0062, invocation_timestamp=2020-04-27T17:37:06.205Z, origin=Only For Testing, session_id=71790da3-da15-408f-a58c-1540753a0062, session_timestamp=2020-04-27T17:37:06.205Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,250Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0df831ed-d9a1-4f46-a56f-f883004d705d, invocation_id=71790da3-da15-408f-a58c-1540753a0062, invocation_timestamp=2020-04-27T17:37:06.205Z, origin=Only For Testing, session_id=71790da3-da15-408f-a58c-1540753a0062, session_timestamp=2020-04-27T17:37:06.205Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,444Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=3e391b37-d07f-4b28-b58f-9272b7d86195, invocation_id=23cc3097-0708-4468-9b7a-718c59ade4d3, invocation_timestamp=2020-04-27T17:37:07.381Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23cc3097-0708-4468-9b7a-718c59ade4d3, session_timestamp=2020-04-27T17:37:07.381Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,547Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=3e391b37-d07f-4b28-b58f-9272b7d86195, invocation_id=23cc3097-0708-4468-9b7a-718c59ade4d3, invocation_timestamp=2020-04-27T17:37:07.381Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23cc3097-0708-4468-9b7a-718c59ade4d3, session_timestamp=2020-04-27T17:37:07.381Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,554Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=3e391b37-d07f-4b28-b58f-9272b7d86195, invocation_id=23cc3097-0708-4468-9b7a-718c59ade4d3, invocation_timestamp=2020-04-27T17:37:07.381Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23cc3097-0708-4468-9b7a-718c59ade4d3, session_timestamp=2020-04-27T17:37:07.381Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,564Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=3e391b37-d07f-4b28-b58f-9272b7d86195, invocation_id=23cc3097-0708-4468-9b7a-718c59ade4d3, invocation_timestamp=2020-04-27T17:37:07.381Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23cc3097-0708-4468-9b7a-718c59ade4d3, session_timestamp=2020-04-27T17:37:07.381Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,610Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0df831ed-d9a1-4f46-a56f-f883004d705d, invocation_id=71790da3-da15-408f-a58c-1540753a0062, invocation_timestamp=2020-04-27T17:37:06.205Z, origin=Only For Testing, session_id=71790da3-da15-408f-a58c-1540753a0062, session_timestamp=2020-04-27T17:37:06.205Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,610Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=0df831ed-d9a1-4f46-a56f-f883004d705d, invocation_id=71790da3-da15-408f-a58c-1540753a0062, invocation_timestamp=2020-04-27T17:37:06.205Z, origin=Only For Testing, session_id=71790da3-da15-408f-a58c-1540753a0062, session_timestamp=2020-04-27T17:37:06.205Z, thread-id=266, tx_id=F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187}
[INFO ] 2020-04-27T17:37:07,783Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=d5292c57-9ab1-4712-b18b-a2d2a869dde4, invocation_id=d82e7314-5320-48f2-8da5-58a94649a204, invocation_timestamp=2020-04-27T17:37:07.762Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d82e7314-5320-48f2-8da5-58a94649a204, session_timestamp=2020-04-27T17:37:07.762Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:07,798Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=d5292c57-9ab1-4712-b18b-a2d2a869dde4, invocation_id=d82e7314-5320-48f2-8da5-58a94649a204, invocation_timestamp=2020-04-27T17:37:07.762Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d82e7314-5320-48f2-8da5-58a94649a204, session_timestamp=2020-04-27T17:37:07.762Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:07,953Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3082c019-0474-4224-8317-494b14c9cd24, invocation_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, invocation_timestamp=2020-04-27T17:37:07.636Z, origin=Only For Testing, session_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, session_timestamp=2020-04-27T17:37:07.636Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,018Z [Mock network] corda.flow. - Received a notarisation request for Tx [09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000005, flow-id=4d9a3c1b-c0eb-4f5b-b0fb-313cfa2098a9, invocation_id=10965e04-bd85-4cbf-ae7e-9020ddd150ab, invocation_timestamp=2020-04-27T17:37:07.998Z, origin=O=Mock Company 1, L=London, C=GB, session_id=10965e04-bd85-4cbf-ae7e-9020ddd150ab, session_timestamp=2020-04-27T17:37:07.998Z, thread-id=266}
[INFO ] 2020-04-27T17:37:08,183Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: [F0F6C45EECD1D1D98DC5E2F11048CCC20971BC026C483A11C8954AE74FC7E187(0)]. TxId: 09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA {}
[INFO ] 2020-04-27T17:37:08,194Z [Mock network] corda.flow. - Transaction [09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000005, flow-id=4d9a3c1b-c0eb-4f5b-b0fb-313cfa2098a9, invocation_id=10965e04-bd85-4cbf-ae7e-9020ddd150ab, invocation_timestamp=2020-04-27T17:37:07.998Z, origin=O=Mock Company 1, L=London, C=GB, session_id=10965e04-bd85-4cbf-ae7e-9020ddd150ab, session_timestamp=2020-04-27T17:37:07.998Z, thread-id=266}
[INFO ] 2020-04-27T17:37:08,217Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3082c019-0474-4224-8317-494b14c9cd24, invocation_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, invocation_timestamp=2020-04-27T17:37:07.636Z, origin=Only For Testing, session_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, session_timestamp=2020-04-27T17:37:07.636Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,218Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3082c019-0474-4224-8317-494b14c9cd24, invocation_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, invocation_timestamp=2020-04-27T17:37:07.636Z, origin=Only For Testing, session_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, session_timestamp=2020-04-27T17:37:07.636Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,226Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3082c019-0474-4224-8317-494b14c9cd24, invocation_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, invocation_timestamp=2020-04-27T17:37:07.636Z, origin=Only For Testing, session_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, session_timestamp=2020-04-27T17:37:07.636Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,246Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=d5292c57-9ab1-4712-b18b-a2d2a869dde4, invocation_id=d82e7314-5320-48f2-8da5-58a94649a204, invocation_timestamp=2020-04-27T17:37:07.762Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d82e7314-5320-48f2-8da5-58a94649a204, session_timestamp=2020-04-27T17:37:07.762Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,258Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=d5292c57-9ab1-4712-b18b-a2d2a869dde4, invocation_id=d82e7314-5320-48f2-8da5-58a94649a204, invocation_timestamp=2020-04-27T17:37:07.762Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d82e7314-5320-48f2-8da5-58a94649a204, session_timestamp=2020-04-27T17:37:07.762Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,265Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=d5292c57-9ab1-4712-b18b-a2d2a869dde4, invocation_id=d82e7314-5320-48f2-8da5-58a94649a204, invocation_timestamp=2020-04-27T17:37:07.762Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d82e7314-5320-48f2-8da5-58a94649a204, session_timestamp=2020-04-27T17:37:07.762Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,275Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=d5292c57-9ab1-4712-b18b-a2d2a869dde4, invocation_id=d82e7314-5320-48f2-8da5-58a94649a204, invocation_timestamp=2020-04-27T17:37:07.762Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d82e7314-5320-48f2-8da5-58a94649a204, session_timestamp=2020-04-27T17:37:07.762Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,292Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3082c019-0474-4224-8317-494b14c9cd24, invocation_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, invocation_timestamp=2020-04-27T17:37:07.636Z, origin=Only For Testing, session_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, session_timestamp=2020-04-27T17:37:07.636Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,292Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3082c019-0474-4224-8317-494b14c9cd24, invocation_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, invocation_timestamp=2020-04-27T17:37:07.636Z, origin=Only For Testing, session_id=6e96c753-6cd3-42e8-b5b5-6f7b225ad2e3, session_timestamp=2020-04-27T17:37:07.636Z, thread-id=266, tx_id=09F2B8D38E3BF223C8E6F427DE022F46BD4D6B1CBAE782A16DE761F8A68D29DA}
[INFO ] 2020-04-27T17:37:08,417Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-173708.332/nodes/0/cordapps] {}
[INFO ] 2020-04-27T17:37:08,417Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:37:08,417Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:37:08,473Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:37:08,496Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:37:08,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:37:08,502Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:08,502Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:08,508Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:37:08.332Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:37:09,054Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,057Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-173708.332/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,057Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,084Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,089Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,089Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,212Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,221Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,222Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,224Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,224Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,280Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:09,304Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:37:09,312Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:37:09,312Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:37:09,444Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T17:37:09,449Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:37:09,449Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009029449) {}
[INFO ] 2020-04-27T17:37:09,451Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:37:09,469Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009029449) {}
[INFO ] 2020-04-27T17:37:09,477Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:37:09,488Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009029449) {}
[INFO ] 2020-04-27T17:37:09,536Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:09,551Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:37:09,554Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T17:37:09,554Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T17:37:09,562Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009029449) {}
[INFO ] 2020-04-27T17:37:09,564Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009029449) {}
[INFO ] 2020-04-27T17:37:09,564Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:09,565Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009029449) {}
[INFO ] 2020-04-27T17:37:09,565Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:09,571Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-173708.332/nodes/1/cordapps] {}
[INFO ] 2020-04-27T17:37:09,571Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:37:09,571Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:37:09,578Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:37:09,598Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:37:09,599Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:37:09,625Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:09,625Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:09,628Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:37:08.332Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:37:10,064Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,065Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-173708.332/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,065Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,084Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,086Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,086Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,210Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,218Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,219Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,221Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,221Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,268Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:10,272Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:37:10,273Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:10,273Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:10,356Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:10,357Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T17:37:10,374Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:37:10,374Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009030374) {}
[INFO ] 2020-04-27T17:37:10,376Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:10,381Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009030374) {}
[INFO ] 2020-04-27T17:37:10,425Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:37:10,428Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009030374) {}
[INFO ] 2020-04-27T17:37:10,431Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:10,451Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:37:10,457Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009030374) {}
[INFO ] 2020-04-27T17:37:10,460Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009029449) {}
[INFO ] 2020-04-27T17:37:10,461Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:37:10,467Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009030374) {}
[INFO ] 2020-04-27T17:37:10,468Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:10,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009030374) {}
[INFO ] 2020-04-27T17:37:10,475Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:10,475Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009030374) {}
[INFO ] 2020-04-27T17:37:10,475Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:10,481Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-173708.332/nodes/2/cordapps] {}
[INFO ] 2020-04-27T17:37:10,482Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T17:37:10,482Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T17:37:10,488Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-173708.332/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T17:37:10,662Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T17:37:10,663Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T17:37:10,680Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:10,680Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:10,682Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:37:08.332Z
      epoch=1
  } {}
[INFO ] 2020-04-27T17:37:11,010Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,011Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-173708.332/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,011Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,029Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,030Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,031Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,189Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,194Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,195Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,196Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,196Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,235Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T17:37:11,238Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T17:37:11,239Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:11,239Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:11,320Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T17:37:11,321Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T17:37:11,336Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T17:37:11,336Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009031336) {}
[INFO ] 2020-04-27T17:37:11,337Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:11,342Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009031336) {}
[INFO ] 2020-04-27T17:37:11,346Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T17:37:11,387Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009031336) {}
[INFO ] 2020-04-27T17:37:11,391Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:11,407Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T17:37:11,411Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009031336) {}
[INFO ] 2020-04-27T17:37:11,413Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588009029449) {}
[INFO ] 2020-04-27T17:37:11,414Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T17:37:11,420Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009031336) {}
[INFO ] 2020-04-27T17:37:11,421Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:11,427Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588009030374) {}
[INFO ] 2020-04-27T17:37:11,428Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:11,434Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009031336) {}
[INFO ] 2020-04-27T17:37:11,435Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T17:37:11,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009031336) {}
[INFO ] 2020-04-27T17:37:11,441Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T17:37:11,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588009031336) {}
[INFO ] 2020-04-27T17:37:11,441Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T17:37:11,442Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:37:11,442Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:37:11,442Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:37:11,442Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:37:11,442Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:37:11,442Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T17:37:11,442Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T17:37:11,442Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T17:37:11,562Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=eef414e5-0be7-43c8-ae1f-e9cdf1230cab, invocation_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, invocation_timestamp=2020-04-27T17:37:11.443Z, origin=Only For Testing, session_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, session_timestamp=2020-04-27T17:37:11.443Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T17:37:11,562Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=eef414e5-0be7-43c8-ae1f-e9cdf1230cab, invocation_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, invocation_timestamp=2020-04-27T17:37:11.443Z, origin=Only For Testing, session_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, session_timestamp=2020-04-27T17:37:11.443Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T17:37:11,587Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=eef414e5-0be7-43c8-ae1f-e9cdf1230cab, invocation_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, invocation_timestamp=2020-04-27T17:37:11.443Z, origin=Only For Testing, session_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, session_timestamp=2020-04-27T17:37:11.443Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T17:37:11,635Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=03652411-a1e6-4fc6-83af-3cef42a18e4c, invocation_id=765615d6-0845-4a2e-921f-b562f2505695, invocation_timestamp=2020-04-27T17:37:11.618Z, origin=O=Mock Company 1, L=London, C=GB, session_id=765615d6-0845-4a2e-921f-b562f2505695, session_timestamp=2020-04-27T17:37:11.618Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T17:37:11,647Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=03652411-a1e6-4fc6-83af-3cef42a18e4c, invocation_id=765615d6-0845-4a2e-921f-b562f2505695, invocation_timestamp=2020-04-27T17:37:11.618Z, origin=O=Mock Company 1, L=London, C=GB, session_id=765615d6-0845-4a2e-921f-b562f2505695, session_timestamp=2020-04-27T17:37:11.618Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T17:37:11,649Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=03652411-a1e6-4fc6-83af-3cef42a18e4c, invocation_id=765615d6-0845-4a2e-921f-b562f2505695, invocation_timestamp=2020-04-27T17:37:11.618Z, origin=O=Mock Company 1, L=London, C=GB, session_id=765615d6-0845-4a2e-921f-b562f2505695, session_timestamp=2020-04-27T17:37:11.618Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T17:37:11,657Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=03652411-a1e6-4fc6-83af-3cef42a18e4c, invocation_id=765615d6-0845-4a2e-921f-b562f2505695, invocation_timestamp=2020-04-27T17:37:11.618Z, origin=O=Mock Company 1, L=London, C=GB, session_id=765615d6-0845-4a2e-921f-b562f2505695, session_timestamp=2020-04-27T17:37:11.618Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T17:37:11,684Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=eef414e5-0be7-43c8-ae1f-e9cdf1230cab, invocation_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, invocation_timestamp=2020-04-27T17:37:11.443Z, origin=Only For Testing, session_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, session_timestamp=2020-04-27T17:37:11.443Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T17:37:11,685Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=eef414e5-0be7-43c8-ae1f-e9cdf1230cab, invocation_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, invocation_timestamp=2020-04-27T17:37:11.443Z, origin=Only For Testing, session_id=6f5b6ecb-8dfa-4e39-8e15-07b494e79e9f, session_timestamp=2020-04-27T17:37:11.443Z, thread-id=496, tx_id=F400AF4BDA632D3A2D8907F9625862CD99A82F1702BF0D895494CA511B54B31A}
[INFO ] 2020-04-27T18:00:07,481Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T18:00:07,812Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T18:00:09,512Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T18:00:09,569Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T18:00:09,612Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:00:09,614Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T18:00:09,615Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:00:09,615Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:00:09,615Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T18:00:09,615Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:00:09,615Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T18:00:09,626Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T18:00:09,637Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T18:00:09,637Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T18:00:09,647Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T18:00:09,647Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T18:00:09,648Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T18:00:09,700Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:00:09,700Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T18:00:09,700Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:00:09,700Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T18:00:09,711Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:00:09,711Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:00:09,743Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,743Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T18:00:09,754Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T18:00:09,796Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T18:00:09,796Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T18:00:09,806Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,818Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T18:00:09,852Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,853Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T18:00:09,853Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,853Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,853Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T18:00:09,864Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,864Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T18:00:09,875Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T18:00:09,898Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T18:00:09,898Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T18:00:09,898Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T18:00:09,898Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T18:00:09,898Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T18:00:09,908Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,908Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T18:00:09,908Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,908Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T18:00:09,908Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,909Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,919Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T18:00:09,943Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,943Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:00:09,953Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,953Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,954Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T18:00:09,966Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:00:09,966Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:00:09,966Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T18:00:09,966Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:00:09,970Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T18:00:09,988Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T18:00:09,988Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T18:00:10,024Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T18:00:10,237Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180000.955/nodes/0/cordapps] {}
[INFO ] 2020-04-27T18:00:10,243Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:00:10,251Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:00:10,393Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:00:11,363Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:00:11,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:00:11,496Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:11,500Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:11,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:59:58.721Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:00:17,176Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:17,180Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180000.955/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:17,180Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:17,229Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:17,335Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:17,344Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:19,499Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:20,178Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:20,181Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:20,184Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:20,184Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:20,266Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:20,314Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:00:20,336Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:00:20,336Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:00:20,577Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:00:20,614Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:00:20,614Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010420614) {}
[INFO ] 2020-04-27T18:00:20,619Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:00:20,797Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010420614) {}
[INFO ] 2020-04-27T18:00:20,863Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:00:20,886Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010420614) {}
[INFO ] 2020-04-27T18:00:20,916Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:20,945Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:00:20,953Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T18:00:20,956Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T18:00:21,476Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010420614) {}
[INFO ] 2020-04-27T18:00:21,506Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010420614) {}
[INFO ] 2020-04-27T18:00:21,507Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:21,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010420614) {}
[INFO ] 2020-04-27T18:00:21,508Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:21,518Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180000.955/nodes/1/cordapps] {}
[INFO ] 2020-04-27T18:00:21,519Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:00:21,519Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:00:21,527Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:00:21,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:00:21,556Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:00:21,581Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:21,582Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:21,586Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:59:58.721Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:00:22,200Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,202Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180000.955/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,202Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,224Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,227Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,227Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,356Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,425Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,427Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,429Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,429Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,502Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:22,509Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:00:22,512Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:22,512Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:22,640Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:22,641Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T18:00:22,666Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:00:22,666Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010422666) {}
[INFO ] 2020-04-27T18:00:22,668Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:22,676Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010422666) {}
[INFO ] 2020-04-27T18:00:22,683Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:00:22,687Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010422666) {}
[INFO ] 2020-04-27T18:00:22,692Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:22,718Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:00:22,727Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010422666) {}
[INFO ] 2020-04-27T18:00:22,732Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010420614) {}
[INFO ] 2020-04-27T18:00:22,733Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:00:22,745Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010422666) {}
[INFO ] 2020-04-27T18:00:22,747Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:22,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010422666) {}
[INFO ] 2020-04-27T18:00:22,757Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:22,757Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010422666) {}
[INFO ] 2020-04-27T18:00:22,757Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:22,763Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180000.955/nodes/2/cordapps] {}
[INFO ] 2020-04-27T18:00:22,763Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:00:22,763Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:00:22,770Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180000.955/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:00:22,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:00:22,800Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:00:22,823Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:22,823Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:22,826Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T17:59:58.721Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:00:23,288Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,290Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180000.955/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,290Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,307Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,376Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,376Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,503Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,513Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,514Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,517Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,517Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,599Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:23,603Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:00:23,604Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:23,604Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:23,704Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:23,705Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T18:00:23,724Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:00:23,724Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010423724) {}
[INFO ] 2020-04-27T18:00:23,726Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:23,733Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010423724) {}
[INFO ] 2020-04-27T18:00:23,740Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:00:23,744Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010423724) {}
[INFO ] 2020-04-27T18:00:23,749Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:23,774Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:00:23,780Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010423724) {}
[INFO ] 2020-04-27T18:00:23,783Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010420614) {}
[INFO ] 2020-04-27T18:00:23,784Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:00:23,793Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010423724) {}
[INFO ] 2020-04-27T18:00:23,795Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:23,804Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010422666) {}
[INFO ] 2020-04-27T18:00:23,805Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:23,814Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010423724) {}
[INFO ] 2020-04-27T18:00:23,815Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:23,823Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010423724) {}
[INFO ] 2020-04-27T18:00:23,823Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:23,823Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010423724) {}
[INFO ] 2020-04-27T18:00:23,823Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T18:00:23,826Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:00:23,826Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:00:23,829Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:00:23,829Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:00:23,830Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:00:23,830Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:00:23,830Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:00:23,830Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:00:24,493Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=de5bda2c-8355-42b0-8afa-cdd308710089, invocation_id=23655555-6c57-421a-9058-fa6e8daec9f1, invocation_timestamp=2020-04-27T18:00:24.296Z, origin=Only For Testing, session_id=23655555-6c57-421a-9058-fa6e8daec9f1, session_timestamp=2020-04-27T18:00:24.296Z, thread-id=266}
[WARN ] 2020-04-27T18:00:24,493Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=de5bda2c-8355-42b0-8afa-cdd308710089, invocation_id=23655555-6c57-421a-9058-fa6e8daec9f1, invocation_timestamp=2020-04-27T18:00:24.296Z, origin=Only For Testing, session_id=23655555-6c57-421a-9058-fa6e8daec9f1, session_timestamp=2020-04-27T18:00:24.296Z, thread-id=266}
[INFO ] 2020-04-27T18:00:24,883Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=de5bda2c-8355-42b0-8afa-cdd308710089, invocation_id=23655555-6c57-421a-9058-fa6e8daec9f1, invocation_timestamp=2020-04-27T18:00:24.296Z, origin=Only For Testing, session_id=23655555-6c57-421a-9058-fa6e8daec9f1, session_timestamp=2020-04-27T18:00:24.296Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:24,883Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=de5bda2c-8355-42b0-8afa-cdd308710089, invocation_id=23655555-6c57-421a-9058-fa6e8daec9f1, invocation_timestamp=2020-04-27T18:00:24.296Z, origin=Only For Testing, session_id=23655555-6c57-421a-9058-fa6e8daec9f1, session_timestamp=2020-04-27T18:00:24.296Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:24,987Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=de5bda2c-8355-42b0-8afa-cdd308710089, invocation_id=23655555-6c57-421a-9058-fa6e8daec9f1, invocation_timestamp=2020-04-27T18:00:24.296Z, origin=Only For Testing, session_id=23655555-6c57-421a-9058-fa6e8daec9f1, session_timestamp=2020-04-27T18:00:24.296Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:25,230Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=1627a56f-b0ba-4595-abc0-69158c472307, invocation_id=9648e756-1c3e-4d58-b0ea-b16eccc6d72b, invocation_timestamp=2020-04-27T18:00:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9648e756-1c3e-4d58-b0ea-b16eccc6d72b, session_timestamp=2020-04-27T18:00:25.111Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:25,280Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=1627a56f-b0ba-4595-abc0-69158c472307, invocation_id=9648e756-1c3e-4d58-b0ea-b16eccc6d72b, invocation_timestamp=2020-04-27T18:00:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9648e756-1c3e-4d58-b0ea-b16eccc6d72b, session_timestamp=2020-04-27T18:00:25.111Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:25,287Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=1627a56f-b0ba-4595-abc0-69158c472307, invocation_id=9648e756-1c3e-4d58-b0ea-b16eccc6d72b, invocation_timestamp=2020-04-27T18:00:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9648e756-1c3e-4d58-b0ea-b16eccc6d72b, session_timestamp=2020-04-27T18:00:25.111Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:25,297Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=1627a56f-b0ba-4595-abc0-69158c472307, invocation_id=9648e756-1c3e-4d58-b0ea-b16eccc6d72b, invocation_timestamp=2020-04-27T18:00:25.111Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9648e756-1c3e-4d58-b0ea-b16eccc6d72b, session_timestamp=2020-04-27T18:00:25.111Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:25,341Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=de5bda2c-8355-42b0-8afa-cdd308710089, invocation_id=23655555-6c57-421a-9058-fa6e8daec9f1, invocation_timestamp=2020-04-27T18:00:24.296Z, origin=Only For Testing, session_id=23655555-6c57-421a-9058-fa6e8daec9f1, session_timestamp=2020-04-27T18:00:24.296Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:25,341Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=de5bda2c-8355-42b0-8afa-cdd308710089, invocation_id=23655555-6c57-421a-9058-fa6e8daec9f1, invocation_timestamp=2020-04-27T18:00:24.296Z, origin=Only For Testing, session_id=23655555-6c57-421a-9058-fa6e8daec9f1, session_timestamp=2020-04-27T18:00:24.296Z, thread-id=266, tx_id=3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02}
[INFO ] 2020-04-27T18:00:25,513Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=8b407a2c-32f2-4832-827e-facdc68054a4, invocation_id=28afd40c-815f-48a7-a69a-d1fca8754e46, invocation_timestamp=2020-04-27T18:00:25.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28afd40c-815f-48a7-a69a-d1fca8754e46, session_timestamp=2020-04-27T18:00:25.492Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:25,527Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=8b407a2c-32f2-4832-827e-facdc68054a4, invocation_id=28afd40c-815f-48a7-a69a-d1fca8754e46, invocation_timestamp=2020-04-27T18:00:25.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28afd40c-815f-48a7-a69a-d1fca8754e46, session_timestamp=2020-04-27T18:00:25.492Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:25,676Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cb68216-ff6a-4339-86e5-f49568b0e5f6, invocation_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, invocation_timestamp=2020-04-27T18:00:25.366Z, origin=Only For Testing, session_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, session_timestamp=2020-04-27T18:00:25.366Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:25,743Z [Mock network] corda.flow. - Received a notarisation request for Tx [5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000005, flow-id=b4b865e5-6111-4d5b-b082-31f294ec49a5, invocation_id=e42800a7-8fb4-49c1-9431-3312c049de5b, invocation_timestamp=2020-04-27T18:00:25.727Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e42800a7-8fb4-49c1-9431-3312c049de5b, session_timestamp=2020-04-27T18:00:25.727Z, thread-id=266}
[INFO ] 2020-04-27T18:00:25,915Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: [3046CC6D06CBBB3B54B51704E649CA83BFB7A4AC5F3EDC3C8DCEC5B9C3E6FD02(0)]. TxId: 5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291 {}
[INFO ] 2020-04-27T18:00:25,926Z [Mock network] corda.flow. - Transaction [5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000005, flow-id=b4b865e5-6111-4d5b-b082-31f294ec49a5, invocation_id=e42800a7-8fb4-49c1-9431-3312c049de5b, invocation_timestamp=2020-04-27T18:00:25.727Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e42800a7-8fb4-49c1-9431-3312c049de5b, session_timestamp=2020-04-27T18:00:25.727Z, thread-id=266}
[INFO ] 2020-04-27T18:00:25,947Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cb68216-ff6a-4339-86e5-f49568b0e5f6, invocation_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, invocation_timestamp=2020-04-27T18:00:25.366Z, origin=Only For Testing, session_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, session_timestamp=2020-04-27T18:00:25.366Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:25,948Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cb68216-ff6a-4339-86e5-f49568b0e5f6, invocation_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, invocation_timestamp=2020-04-27T18:00:25.366Z, origin=Only For Testing, session_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, session_timestamp=2020-04-27T18:00:25.366Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:25,956Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cb68216-ff6a-4339-86e5-f49568b0e5f6, invocation_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, invocation_timestamp=2020-04-27T18:00:25.366Z, origin=Only For Testing, session_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, session_timestamp=2020-04-27T18:00:25.366Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:25,977Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=8b407a2c-32f2-4832-827e-facdc68054a4, invocation_id=28afd40c-815f-48a7-a69a-d1fca8754e46, invocation_timestamp=2020-04-27T18:00:25.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28afd40c-815f-48a7-a69a-d1fca8754e46, session_timestamp=2020-04-27T18:00:25.492Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:25,989Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=8b407a2c-32f2-4832-827e-facdc68054a4, invocation_id=28afd40c-815f-48a7-a69a-d1fca8754e46, invocation_timestamp=2020-04-27T18:00:25.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28afd40c-815f-48a7-a69a-d1fca8754e46, session_timestamp=2020-04-27T18:00:25.492Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:25,997Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=8b407a2c-32f2-4832-827e-facdc68054a4, invocation_id=28afd40c-815f-48a7-a69a-d1fca8754e46, invocation_timestamp=2020-04-27T18:00:25.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28afd40c-815f-48a7-a69a-d1fca8754e46, session_timestamp=2020-04-27T18:00:25.492Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:26,006Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=8b407a2c-32f2-4832-827e-facdc68054a4, invocation_id=28afd40c-815f-48a7-a69a-d1fca8754e46, invocation_timestamp=2020-04-27T18:00:25.492Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28afd40c-815f-48a7-a69a-d1fca8754e46, session_timestamp=2020-04-27T18:00:25.492Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:26,022Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cb68216-ff6a-4339-86e5-f49568b0e5f6, invocation_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, invocation_timestamp=2020-04-27T18:00:25.366Z, origin=Only For Testing, session_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, session_timestamp=2020-04-27T18:00:25.366Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:26,022Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=8cb68216-ff6a-4339-86e5-f49568b0e5f6, invocation_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, invocation_timestamp=2020-04-27T18:00:25.366Z, origin=Only For Testing, session_id=58bd081f-1c90-4b68-b3f4-87c80056d3fa, session_timestamp=2020-04-27T18:00:25.366Z, thread-id=266, tx_id=5928CF86667E17D630B9961E32454A0DC11E516F701793F54FC4DEF524EE3291}
[INFO ] 2020-04-27T18:00:26,133Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180026.062/nodes/0/cordapps] {}
[INFO ] 2020-04-27T18:00:26,133Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:00:26,133Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:00:26,143Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:00:26,166Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:00:26,167Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:00:26,171Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:26,171Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:26,176Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:00:26.062Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:00:26,759Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,761Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180026.062/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,761Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,785Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,787Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,788Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,912Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,922Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,924Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,925Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,925Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:26,986Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,009Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:00:27,016Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:00:27,016Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:00:27,151Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:00:27,163Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:00:27,163Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010427163) {}
[INFO ] 2020-04-27T18:00:27,165Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:00:27,179Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010427163) {}
[INFO ] 2020-04-27T18:00:27,188Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:00:27,232Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010427163) {}
[INFO ] 2020-04-27T18:00:27,237Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:27,244Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:00:27,246Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T18:00:27,246Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T18:00:27,252Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010427163) {}
[INFO ] 2020-04-27T18:00:27,254Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010427163) {}
[INFO ] 2020-04-27T18:00:27,254Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:27,255Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010427163) {}
[INFO ] 2020-04-27T18:00:27,255Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:27,259Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180026.062/nodes/1/cordapps] {}
[INFO ] 2020-04-27T18:00:27,260Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:00:27,260Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:00:27,266Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:00:27,287Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:00:27,287Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:00:27,313Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:27,313Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:27,315Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:00:26.062Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:00:27,742Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,743Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180026.062/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,743Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,761Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,763Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,763Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,891Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,901Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,902Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,904Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,904Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,984Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:27,989Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:00:27,991Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:27,991Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:28,092Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:28,093Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T18:00:28,116Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:00:28,116Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010428116) {}
[INFO ] 2020-04-27T18:00:28,118Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:28,125Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010428116) {}
[INFO ] 2020-04-27T18:00:28,171Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:00:28,174Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010428116) {}
[INFO ] 2020-04-27T18:00:28,177Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:28,198Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:00:28,203Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010428116) {}
[INFO ] 2020-04-27T18:00:28,205Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010427163) {}
[INFO ] 2020-04-27T18:00:28,206Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:00:28,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010428116) {}
[INFO ] 2020-04-27T18:00:28,214Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:28,221Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010428116) {}
[INFO ] 2020-04-27T18:00:28,221Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:28,221Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010428116) {}
[INFO ] 2020-04-27T18:00:28,221Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:28,235Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180026.062/nodes/2/cordapps] {}
[INFO ] 2020-04-27T18:00:28,236Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:00:28,236Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:00:28,284Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180026.062/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:00:28,307Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:00:28,308Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:00:28,327Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:28,327Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:28,329Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:00:26.062Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:00:28,713Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,714Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180026.062/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,714Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,731Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,734Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,734Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,920Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,927Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,928Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,930Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,930Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,974Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:00:28,977Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:00:28,978Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:28,978Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:29,071Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:00:29,072Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T18:00:29,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:00:29,089Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010429089) {}
[INFO ] 2020-04-27T18:00:29,090Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:29,095Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010429089) {}
[INFO ] 2020-04-27T18:00:29,100Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:00:29,102Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010429089) {}
[INFO ] 2020-04-27T18:00:29,106Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:29,127Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:00:29,132Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010429089) {}
[INFO ] 2020-04-27T18:00:29,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010427163) {}
[INFO ] 2020-04-27T18:00:29,135Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:00:29,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010429089) {}
[INFO ] 2020-04-27T18:00:29,143Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:29,149Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010428116) {}
[INFO ] 2020-04-27T18:00:29,149Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:29,156Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010429089) {}
[INFO ] 2020-04-27T18:00:29,157Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:00:29,163Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010429089) {}
[INFO ] 2020-04-27T18:00:29,163Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:00:29,163Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010429089) {}
[INFO ] 2020-04-27T18:00:29,163Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T18:00:29,163Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:00:29,163Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:00:29,163Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:00:29,163Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:00:29,164Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:00:29,164Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:00:29,164Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:00:29,164Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:00:29,245Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=517a4bbe-3550-4d44-b51c-26e0efc3b73a, invocation_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, invocation_timestamp=2020-04-27T18:00:29.165Z, origin=Only For Testing, session_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, session_timestamp=2020-04-27T18:00:29.165Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:00:29,245Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=517a4bbe-3550-4d44-b51c-26e0efc3b73a, invocation_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, invocation_timestamp=2020-04-27T18:00:29.165Z, origin=Only For Testing, session_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, session_timestamp=2020-04-27T18:00:29.165Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:00:29,261Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=517a4bbe-3550-4d44-b51c-26e0efc3b73a, invocation_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, invocation_timestamp=2020-04-27T18:00:29.165Z, origin=Only For Testing, session_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, session_timestamp=2020-04-27T18:00:29.165Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:00:29,312Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=e7dbe765-6c59-48b1-a0f6-58c57599d4b0, invocation_id=3822be50-c0ee-4d85-be21-f0c61d221a20, invocation_timestamp=2020-04-27T18:00:29.287Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3822be50-c0ee-4d85-be21-f0c61d221a20, session_timestamp=2020-04-27T18:00:29.287Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:00:29,324Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=e7dbe765-6c59-48b1-a0f6-58c57599d4b0, invocation_id=3822be50-c0ee-4d85-be21-f0c61d221a20, invocation_timestamp=2020-04-27T18:00:29.287Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3822be50-c0ee-4d85-be21-f0c61d221a20, session_timestamp=2020-04-27T18:00:29.287Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:00:29,326Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=e7dbe765-6c59-48b1-a0f6-58c57599d4b0, invocation_id=3822be50-c0ee-4d85-be21-f0c61d221a20, invocation_timestamp=2020-04-27T18:00:29.287Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3822be50-c0ee-4d85-be21-f0c61d221a20, session_timestamp=2020-04-27T18:00:29.287Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:00:29,334Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=e7dbe765-6c59-48b1-a0f6-58c57599d4b0, invocation_id=3822be50-c0ee-4d85-be21-f0c61d221a20, invocation_timestamp=2020-04-27T18:00:29.287Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3822be50-c0ee-4d85-be21-f0c61d221a20, session_timestamp=2020-04-27T18:00:29.287Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:00:29,351Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=517a4bbe-3550-4d44-b51c-26e0efc3b73a, invocation_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, invocation_timestamp=2020-04-27T18:00:29.165Z, origin=Only For Testing, session_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, session_timestamp=2020-04-27T18:00:29.165Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:00:29,351Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=517a4bbe-3550-4d44-b51c-26e0efc3b73a, invocation_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, invocation_timestamp=2020-04-27T18:00:29.165Z, origin=Only For Testing, session_id=cb3694f5-aa0e-46dc-96f5-0a4ebf2ef73f, session_timestamp=2020-04-27T18:00:29.165Z, thread-id=496, tx_id=56DCF427AE403862D1076951DA65135707C798471DA77774C70598871296F705}
[INFO ] 2020-04-27T18:05:18,395Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T18:05:18,750Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T18:05:20,483Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T18:05:20,532Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T18:05:20,571Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:05:20,571Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T18:05:20,581Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:05:20,581Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:05:20,581Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T18:05:20,581Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:05:20,581Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T18:05:20,593Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T18:05:20,604Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T18:05:20,604Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T18:05:20,604Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T18:05:20,605Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T18:05:20,606Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T18:05:20,670Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:05:20,670Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T18:05:20,670Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:05:20,670Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T18:05:20,680Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T18:05:20,680Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:05:20,702Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,712Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T18:05:20,722Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T18:05:20,770Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T18:05:20,771Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T18:05:20,784Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T18:05:20,794Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T18:05:20,795Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T18:05:20,795Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,795Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T18:05:20,795Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,795Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T18:05:20,795Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,795Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,805Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T18:05:20,827Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,828Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T18:05:20,839Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,839Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,840Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T18:05:20,850Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,850Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T18:05:20,861Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T18:05:20,871Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T18:05:20,871Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T18:05:20,871Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,883Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,917Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T18:05:20,928Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T18:05:20,928Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:05:20,928Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T18:05:20,928Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T18:05:20,930Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T18:05:20,949Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T18:05:20,949Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T18:05:20,982Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T18:05:21,199Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180511.834/nodes/0/cordapps] {}
[INFO ] 2020-04-27T18:05:21,205Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:05:21,215Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:05:21,354Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:05:22,275Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:05:22,317Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:05:22,421Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:22,427Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:22,586Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:05:09.553Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:05:27,980Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:27,984Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180511.834/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:27,984Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:28,032Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:28,187Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:28,195Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:30,499Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:31,259Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:31,261Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:31,265Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:31,265Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:31,350Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:31,394Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:05:31,416Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:05:31,416Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:05:31,714Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:05:31,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:05:31,725Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010731725) {}
[INFO ] 2020-04-27T18:05:31,731Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:05:31,913Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010731725) {}
[INFO ] 2020-04-27T18:05:31,977Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:05:31,999Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010731725) {}
[INFO ] 2020-04-27T18:05:32,078Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:32,102Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:05:32,112Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T18:05:32,116Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T18:05:32,614Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010731725) {}
[INFO ] 2020-04-27T18:05:32,646Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010731725) {}
[INFO ] 2020-04-27T18:05:32,647Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:32,648Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010731725) {}
[INFO ] 2020-04-27T18:05:32,648Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:32,659Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180511.834/nodes/1/cordapps] {}
[INFO ] 2020-04-27T18:05:32,659Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:05:32,659Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:05:32,666Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:05:32,692Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:05:32,693Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:05:32,729Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:32,729Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:32,733Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:05:09.553Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:05:33,373Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,375Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180511.834/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,375Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,398Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,400Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,400Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,540Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,614Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,615Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,617Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,617Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,674Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:33,680Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:05:33,683Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:33,683Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:33,787Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:33,788Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T18:05:33,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:05:33,809Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010733809) {}
[INFO ] 2020-04-27T18:05:33,812Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:33,819Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010733809) {}
[INFO ] 2020-04-27T18:05:33,825Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:05:33,829Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010733809) {}
[INFO ] 2020-04-27T18:05:33,833Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:33,856Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:05:33,865Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010733809) {}
[INFO ] 2020-04-27T18:05:33,869Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010731725) {}
[INFO ] 2020-04-27T18:05:33,871Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:05:33,882Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010733809) {}
[INFO ] 2020-04-27T18:05:33,883Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:33,894Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010733809) {}
[INFO ] 2020-04-27T18:05:33,894Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:33,895Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010733809) {}
[INFO ] 2020-04-27T18:05:33,895Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:33,910Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180511.834/nodes/2/cordapps] {}
[INFO ] 2020-04-27T18:05:33,910Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:05:33,911Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:05:33,953Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180511.834/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:05:33,977Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:05:33,977Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:05:33,998Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:33,998Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:34,000Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:05:09.553Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:05:34,541Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,543Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180511.834/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,543Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,562Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,566Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,566Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,687Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,700Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,701Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,704Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,704Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,824Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:34,829Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:05:34,830Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:34,830Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:34,935Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:34,936Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T18:05:34,955Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:05:34,955Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010734955) {}
[INFO ] 2020-04-27T18:05:34,957Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:34,964Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010734955) {}
[INFO ] 2020-04-27T18:05:34,970Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:05:34,974Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010734955) {}
[INFO ] 2020-04-27T18:05:34,978Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:35,003Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:05:35,014Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010734955) {}
[INFO ] 2020-04-27T18:05:35,017Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010731725) {}
[INFO ] 2020-04-27T18:05:35,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:05:35,028Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010734955) {}
[INFO ] 2020-04-27T18:05:35,029Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:35,040Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010733809) {}
[INFO ] 2020-04-27T18:05:35,041Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:35,051Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010734955) {}
[INFO ] 2020-04-27T18:05:35,051Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:35,059Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010734955) {}
[INFO ] 2020-04-27T18:05:35,059Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:35,060Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010734955) {}
[INFO ] 2020-04-27T18:05:35,060Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T18:05:35,062Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:05:35,062Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:05:35,108Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:05:35,108Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:05:35,108Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:05:35,108Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:05:35,108Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:05:35,108Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:05:35,773Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc2dfc7b-af89-4b95-a8cf-dddda287563f, invocation_id=efbb9b87-dc51-4194-9453-938d247e9354, invocation_timestamp=2020-04-27T18:05:35.570Z, origin=Only For Testing, session_id=efbb9b87-dc51-4194-9453-938d247e9354, session_timestamp=2020-04-27T18:05:35.570Z, thread-id=266}
[WARN ] 2020-04-27T18:05:35,773Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc2dfc7b-af89-4b95-a8cf-dddda287563f, invocation_id=efbb9b87-dc51-4194-9453-938d247e9354, invocation_timestamp=2020-04-27T18:05:35.570Z, origin=Only For Testing, session_id=efbb9b87-dc51-4194-9453-938d247e9354, session_timestamp=2020-04-27T18:05:35.570Z, thread-id=266}
[INFO ] 2020-04-27T18:05:36,200Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc2dfc7b-af89-4b95-a8cf-dddda287563f, invocation_id=efbb9b87-dc51-4194-9453-938d247e9354, invocation_timestamp=2020-04-27T18:05:35.570Z, origin=Only For Testing, session_id=efbb9b87-dc51-4194-9453-938d247e9354, session_timestamp=2020-04-27T18:05:35.570Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,200Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc2dfc7b-af89-4b95-a8cf-dddda287563f, invocation_id=efbb9b87-dc51-4194-9453-938d247e9354, invocation_timestamp=2020-04-27T18:05:35.570Z, origin=Only For Testing, session_id=efbb9b87-dc51-4194-9453-938d247e9354, session_timestamp=2020-04-27T18:05:35.570Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,310Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc2dfc7b-af89-4b95-a8cf-dddda287563f, invocation_id=efbb9b87-dc51-4194-9453-938d247e9354, invocation_timestamp=2020-04-27T18:05:35.570Z, origin=Only For Testing, session_id=efbb9b87-dc51-4194-9453-938d247e9354, session_timestamp=2020-04-27T18:05:35.570Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,533Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=272ce61b-f703-40fd-95c3-78ba74f16f73, invocation_id=dedadd38-d42c-4687-8dd5-cd7b652f98e2, invocation_timestamp=2020-04-27T18:05:36.438Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dedadd38-d42c-4687-8dd5-cd7b652f98e2, session_timestamp=2020-04-27T18:05:36.438Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,591Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=272ce61b-f703-40fd-95c3-78ba74f16f73, invocation_id=dedadd38-d42c-4687-8dd5-cd7b652f98e2, invocation_timestamp=2020-04-27T18:05:36.438Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dedadd38-d42c-4687-8dd5-cd7b652f98e2, session_timestamp=2020-04-27T18:05:36.438Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,598Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=272ce61b-f703-40fd-95c3-78ba74f16f73, invocation_id=dedadd38-d42c-4687-8dd5-cd7b652f98e2, invocation_timestamp=2020-04-27T18:05:36.438Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dedadd38-d42c-4687-8dd5-cd7b652f98e2, session_timestamp=2020-04-27T18:05:36.438Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,610Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=272ce61b-f703-40fd-95c3-78ba74f16f73, invocation_id=dedadd38-d42c-4687-8dd5-cd7b652f98e2, invocation_timestamp=2020-04-27T18:05:36.438Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dedadd38-d42c-4687-8dd5-cd7b652f98e2, session_timestamp=2020-04-27T18:05:36.438Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,666Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc2dfc7b-af89-4b95-a8cf-dddda287563f, invocation_id=efbb9b87-dc51-4194-9453-938d247e9354, invocation_timestamp=2020-04-27T18:05:35.570Z, origin=Only For Testing, session_id=efbb9b87-dc51-4194-9453-938d247e9354, session_timestamp=2020-04-27T18:05:35.570Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,666Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc2dfc7b-af89-4b95-a8cf-dddda287563f, invocation_id=efbb9b87-dc51-4194-9453-938d247e9354, invocation_timestamp=2020-04-27T18:05:35.570Z, origin=Only For Testing, session_id=efbb9b87-dc51-4194-9453-938d247e9354, session_timestamp=2020-04-27T18:05:35.570Z, thread-id=266, tx_id=D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8}
[INFO ] 2020-04-27T18:05:36,840Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=107eead1-8101-4303-9772-aaaeb858aaad, invocation_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, invocation_timestamp=2020-04-27T18:05:36.819Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, session_timestamp=2020-04-27T18:05:36.819Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:36,855Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=107eead1-8101-4303-9772-aaaeb858aaad, invocation_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, invocation_timestamp=2020-04-27T18:05:36.819Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, session_timestamp=2020-04-27T18:05:36.819Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,025Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=ed9b137f-66fc-4f2b-8ca8-4f2b6d3b03e9, invocation_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, invocation_timestamp=2020-04-27T18:05:36.692Z, origin=Only For Testing, session_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, session_timestamp=2020-04-27T18:05:36.692Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,085Z [Mock network] corda.flow. - Received a notarisation request for Tx [49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000005, flow-id=e7c71a32-8fa3-45b8-b2a3-f62b07c43734, invocation_id=90d08938-bf34-43ab-b815-7331409f5860, invocation_timestamp=2020-04-27T18:05:37.070Z, origin=O=Mock Company 1, L=London, C=GB, session_id=90d08938-bf34-43ab-b815-7331409f5860, session_timestamp=2020-04-27T18:05:37.070Z, thread-id=266}
[INFO ] 2020-04-27T18:05:37,279Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: [D4F94DB1235F54F35A05614A3E19F3CB1DCAE0EE812FF9E51977CFBCD828CFB8(0)]. TxId: 49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566 {}
[INFO ] 2020-04-27T18:05:37,291Z [Mock network] corda.flow. - Transaction [49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000005, flow-id=e7c71a32-8fa3-45b8-b2a3-f62b07c43734, invocation_id=90d08938-bf34-43ab-b815-7331409f5860, invocation_timestamp=2020-04-27T18:05:37.070Z, origin=O=Mock Company 1, L=London, C=GB, session_id=90d08938-bf34-43ab-b815-7331409f5860, session_timestamp=2020-04-27T18:05:37.070Z, thread-id=266}
[INFO ] 2020-04-27T18:05:37,314Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=ed9b137f-66fc-4f2b-8ca8-4f2b6d3b03e9, invocation_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, invocation_timestamp=2020-04-27T18:05:36.692Z, origin=Only For Testing, session_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, session_timestamp=2020-04-27T18:05:36.692Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,316Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=ed9b137f-66fc-4f2b-8ca8-4f2b6d3b03e9, invocation_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, invocation_timestamp=2020-04-27T18:05:36.692Z, origin=Only For Testing, session_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, session_timestamp=2020-04-27T18:05:36.692Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,325Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=ed9b137f-66fc-4f2b-8ca8-4f2b6d3b03e9, invocation_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, invocation_timestamp=2020-04-27T18:05:36.692Z, origin=Only For Testing, session_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, session_timestamp=2020-04-27T18:05:36.692Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,346Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=107eead1-8101-4303-9772-aaaeb858aaad, invocation_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, invocation_timestamp=2020-04-27T18:05:36.819Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, session_timestamp=2020-04-27T18:05:36.819Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,359Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=107eead1-8101-4303-9772-aaaeb858aaad, invocation_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, invocation_timestamp=2020-04-27T18:05:36.819Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, session_timestamp=2020-04-27T18:05:36.819Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,368Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=107eead1-8101-4303-9772-aaaeb858aaad, invocation_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, invocation_timestamp=2020-04-27T18:05:36.819Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, session_timestamp=2020-04-27T18:05:36.819Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,378Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=107eead1-8101-4303-9772-aaaeb858aaad, invocation_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, invocation_timestamp=2020-04-27T18:05:36.819Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f632a4e4-f7d8-4c55-b696-2a4d0c3b8ff2, session_timestamp=2020-04-27T18:05:36.819Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,399Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=ed9b137f-66fc-4f2b-8ca8-4f2b6d3b03e9, invocation_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, invocation_timestamp=2020-04-27T18:05:36.692Z, origin=Only For Testing, session_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, session_timestamp=2020-04-27T18:05:36.692Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,399Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=ed9b137f-66fc-4f2b-8ca8-4f2b6d3b03e9, invocation_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, invocation_timestamp=2020-04-27T18:05:36.692Z, origin=Only For Testing, session_id=180ac51d-0a13-40b6-9aa9-ffcb79411ab0, session_timestamp=2020-04-27T18:05:36.692Z, thread-id=266, tx_id=49FCA42286669EA17F660CCFDE3522F88765DF2FE64D6722D19963D11941B566}
[INFO ] 2020-04-27T18:05:37,521Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180537.439/nodes/0/cordapps] {}
[INFO ] 2020-04-27T18:05:37,522Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:05:37,522Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:05:37,577Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:05:37,599Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:05:37,600Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:05:37,605Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:37,605Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:37,610Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:05:37.439Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:05:38,150Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,152Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180537.439/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,152Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,169Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,171Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,171Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,306Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,317Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,319Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,320Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,321Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,386Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:38,415Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:05:38,423Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:05:38,423Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:05:38,592Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T18:05:38,597Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:05:38,597Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010738597) {}
[INFO ] 2020-04-27T18:05:38,599Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:05:38,622Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010738597) {}
[INFO ] 2020-04-27T18:05:38,631Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:05:38,679Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010738597) {}
[INFO ] 2020-04-27T18:05:38,685Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:38,694Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:05:38,696Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T18:05:38,696Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T18:05:38,702Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010738597) {}
[INFO ] 2020-04-27T18:05:38,707Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010738597) {}
[INFO ] 2020-04-27T18:05:38,707Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:38,708Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010738597) {}
[INFO ] 2020-04-27T18:05:38,708Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:38,714Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180537.439/nodes/1/cordapps] {}
[INFO ] 2020-04-27T18:05:38,714Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:05:38,715Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:05:38,722Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:05:38,742Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:05:38,743Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:05:38,772Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:38,773Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:38,775Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:05:37.439Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:05:39,197Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,198Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180537.439/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,198Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,217Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,219Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,219Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,336Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,346Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,347Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,349Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,349Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,422Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:39,427Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:05:39,428Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:39,428Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:39,521Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:39,523Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T18:05:39,540Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:05:39,540Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010739540) {}
[INFO ] 2020-04-27T18:05:39,541Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:39,546Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010739540) {}
[INFO ] 2020-04-27T18:05:39,587Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:05:39,590Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010739540) {}
[INFO ] 2020-04-27T18:05:39,593Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:39,612Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:05:39,617Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010739540) {}
[INFO ] 2020-04-27T18:05:39,620Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010738597) {}
[INFO ] 2020-04-27T18:05:39,621Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:05:39,629Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010739540) {}
[INFO ] 2020-04-27T18:05:39,630Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:39,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010739540) {}
[INFO ] 2020-04-27T18:05:39,637Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:39,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010739540) {}
[INFO ] 2020-04-27T18:05:39,637Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:39,643Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-180537.439/nodes/2/cordapps] {}
[INFO ] 2020-04-27T18:05:39,643Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T18:05:39,643Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T18:05:39,766Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-180537.439/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T18:05:39,786Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T18:05:39,787Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T18:05:39,805Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:39,805Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:39,808Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T18:05:37.439Z
      epoch=1
  } {}
[INFO ] 2020-04-27T18:05:40,212Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,214Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-180537.439/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,214Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,232Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,234Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,234Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,426Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,433Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,433Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,435Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,435Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,484Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T18:05:40,490Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T18:05:40,491Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:40,491Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:40,584Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T18:05:40,585Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T18:05:40,600Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T18:05:40,601Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010740601) {}
[INFO ] 2020-04-27T18:05:40,602Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:40,608Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010740601) {}
[INFO ] 2020-04-27T18:05:40,613Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T18:05:40,661Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010740601) {}
[INFO ] 2020-04-27T18:05:40,666Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:40,687Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T18:05:40,696Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010740601) {}
[INFO ] 2020-04-27T18:05:40,699Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588010738597) {}
[INFO ] 2020-04-27T18:05:40,701Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T18:05:40,709Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010740601) {}
[INFO ] 2020-04-27T18:05:40,710Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:40,717Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588010739540) {}
[INFO ] 2020-04-27T18:05:40,717Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:40,726Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010740601) {}
[INFO ] 2020-04-27T18:05:40,727Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T18:05:40,733Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010740601) {}
[INFO ] 2020-04-27T18:05:40,733Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T18:05:40,733Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588010740601) {}
[INFO ] 2020-04-27T18:05:40,733Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T18:05:40,734Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:05:40,734Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:05:40,734Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:05:40,734Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:05:40,734Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:05:40,734Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T18:05:40,734Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T18:05:40,734Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T18:05:40,941Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e5887d7d-bae7-4954-b03f-3a9ca9cfe0f9, invocation_id=809e2792-e06d-4534-80d4-23e16e511a23, invocation_timestamp=2020-04-27T18:05:40.735Z, origin=Only For Testing, session_id=809e2792-e06d-4534-80d4-23e16e511a23, session_timestamp=2020-04-27T18:05:40.735Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T18:05:40,941Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e5887d7d-bae7-4954-b03f-3a9ca9cfe0f9, invocation_id=809e2792-e06d-4534-80d4-23e16e511a23, invocation_timestamp=2020-04-27T18:05:40.735Z, origin=Only For Testing, session_id=809e2792-e06d-4534-80d4-23e16e511a23, session_timestamp=2020-04-27T18:05:40.735Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T18:05:40,961Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e5887d7d-bae7-4954-b03f-3a9ca9cfe0f9, invocation_id=809e2792-e06d-4534-80d4-23e16e511a23, invocation_timestamp=2020-04-27T18:05:40.735Z, origin=Only For Testing, session_id=809e2792-e06d-4534-80d4-23e16e511a23, session_timestamp=2020-04-27T18:05:40.735Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T18:05:41,007Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=8ed7c08e-55f5-4e0c-a776-7983849b57bb, invocation_id=e5123ad1-090b-4237-8be0-78f887db9d72, invocation_timestamp=2020-04-27T18:05:40.989Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5123ad1-090b-4237-8be0-78f887db9d72, session_timestamp=2020-04-27T18:05:40.989Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T18:05:41,022Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=8ed7c08e-55f5-4e0c-a776-7983849b57bb, invocation_id=e5123ad1-090b-4237-8be0-78f887db9d72, invocation_timestamp=2020-04-27T18:05:40.989Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5123ad1-090b-4237-8be0-78f887db9d72, session_timestamp=2020-04-27T18:05:40.989Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T18:05:41,025Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=8ed7c08e-55f5-4e0c-a776-7983849b57bb, invocation_id=e5123ad1-090b-4237-8be0-78f887db9d72, invocation_timestamp=2020-04-27T18:05:40.989Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5123ad1-090b-4237-8be0-78f887db9d72, session_timestamp=2020-04-27T18:05:40.989Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T18:05:41,035Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=8ed7c08e-55f5-4e0c-a776-7983849b57bb, invocation_id=e5123ad1-090b-4237-8be0-78f887db9d72, invocation_timestamp=2020-04-27T18:05:40.989Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e5123ad1-090b-4237-8be0-78f887db9d72, session_timestamp=2020-04-27T18:05:40.989Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T18:05:41,065Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e5887d7d-bae7-4954-b03f-3a9ca9cfe0f9, invocation_id=809e2792-e06d-4534-80d4-23e16e511a23, invocation_timestamp=2020-04-27T18:05:40.735Z, origin=Only For Testing, session_id=809e2792-e06d-4534-80d4-23e16e511a23, session_timestamp=2020-04-27T18:05:40.735Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T18:05:41,065Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=e5887d7d-bae7-4954-b03f-3a9ca9cfe0f9, invocation_id=809e2792-e06d-4534-80d4-23e16e511a23, invocation_timestamp=2020-04-27T18:05:40.735Z, origin=Only For Testing, session_id=809e2792-e06d-4534-80d4-23e16e511a23, session_timestamp=2020-04-27T18:05:40.735Z, thread-id=495, tx_id=27A5246A2FE841DE4EA8DF23259195DF4AFBAAE27BAB464B6EFC74EE66B4F6E0}
[INFO ] 2020-04-27T19:56:32,797Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T19:56:33,161Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:56:34,929Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T19:56:34,964Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:56:35,048Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:56:35,049Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T19:56:35,050Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:56:35,050Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:56:35,050Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T19:56:35,050Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:56:35,050Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:56:35,126Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T19:56:35,149Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:56:35,149Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T19:56:35,149Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:56:35,149Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T19:56:35,149Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:56:35,283Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:56:35,283Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T19:56:35,294Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:56:35,294Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T19:56:35,328Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:56:35,328Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:56:35,361Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,371Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:56:35,392Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T19:56:35,423Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:56:35,423Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T19:56:35,446Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:56:35,457Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T19:56:35,457Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:56:35,469Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,469Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T19:56:35,469Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,469Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T19:56:35,469Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,469Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,469Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T19:56:35,494Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,495Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T19:56:35,517Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,517Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,517Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T19:56:35,528Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,528Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:56:35,528Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T19:56:35,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:56:35,551Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T19:56:35,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:56:35,551Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T19:56:35,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:56:35,551Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T19:56:35,562Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T19:56:35,562Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,562Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,562Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T19:56:35,573Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,573Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:56:35,573Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,584Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:56:35,585Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:56:35,585Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:35,585Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T19:56:37,015Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:56:37,015Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:56:37,015Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T19:56:37,015Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:56:37,018Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:56:37,026Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T19:56:37,026Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:56:37,043Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T19:56:37,246Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195626.310/nodes/0/cordapps] {}
[INFO ] 2020-04-27T19:56:37,251Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:56:37,260Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:56:37,499Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:56:38,492Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:56:38,536Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:56:38,629Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:38,633Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:38,793Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:56:23.999Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:56:44,387Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:44,393Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195626.310/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:44,393Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:44,487Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:44,603Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:44,612Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:47,079Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:47,801Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:47,803Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:47,807Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:47,807Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:47,884Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:47,926Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:56:47,953Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:56:47,953Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:56:48,198Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:56:48,208Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:56:48,208Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017408208) {}
[INFO ] 2020-04-27T19:56:48,214Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:56:48,440Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017408208) {}
[INFO ] 2020-04-27T19:56:48,498Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:56:48,521Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017408208) {}
[INFO ] 2020-04-27T19:56:48,554Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:48,585Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:56:48,594Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T19:56:48,598Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T19:56:49,072Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017408208) {}
[INFO ] 2020-04-27T19:56:49,103Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017408208) {}
[INFO ] 2020-04-27T19:56:49,104Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:49,105Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017408208) {}
[INFO ] 2020-04-27T19:56:49,105Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:49,112Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195626.310/nodes/1/cordapps] {}
[INFO ] 2020-04-27T19:56:49,112Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:56:49,112Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:56:49,200Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:56:49,226Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:56:49,227Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:56:49,254Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:49,254Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:49,257Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:56:23.999Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:56:49,906Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:49,908Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195626.310/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:49,908Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:49,927Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:49,929Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:49,929Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:50,046Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:50,126Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:50,127Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:50,129Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:50,129Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:50,203Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:50,209Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:56:50,212Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:50,212Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:50,337Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:50,339Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:56:50,400Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:56:50,400Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017410400) {}
[INFO ] 2020-04-27T19:56:50,402Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:50,410Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017410400) {}
[INFO ] 2020-04-27T19:56:50,417Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:56:50,421Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017410400) {}
[INFO ] 2020-04-27T19:56:50,426Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:50,455Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:56:50,466Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017410400) {}
[INFO ] 2020-04-27T19:56:50,471Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017408208) {}
[INFO ] 2020-04-27T19:56:50,472Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:56:50,482Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017410400) {}
[INFO ] 2020-04-27T19:56:50,484Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:50,498Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017410400) {}
[INFO ] 2020-04-27T19:56:50,498Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:50,498Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017410400) {}
[INFO ] 2020-04-27T19:56:50,498Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:50,504Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195626.310/nodes/2/cordapps] {}
[INFO ] 2020-04-27T19:56:50,504Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:56:50,504Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:56:50,513Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195626.310/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:56:50,543Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:56:50,544Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:56:50,568Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:50,568Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:50,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:56:23.999Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:56:51,153Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,155Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195626.310/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,155Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,177Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,249Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,249Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,347Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,357Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,358Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,360Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,360Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,406Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:51,410Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:56:51,411Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:51,411Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:51,525Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:51,527Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:56:51,594Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:56:51,594Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017411594) {}
[INFO ] 2020-04-27T19:56:51,596Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:51,606Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017411594) {}
[INFO ] 2020-04-27T19:56:51,614Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:56:51,619Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017411594) {}
[INFO ] 2020-04-27T19:56:51,624Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:51,656Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:56:51,665Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017411594) {}
[INFO ] 2020-04-27T19:56:51,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017408208) {}
[INFO ] 2020-04-27T19:56:51,670Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:56:51,681Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017411594) {}
[INFO ] 2020-04-27T19:56:51,683Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:51,695Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017410400) {}
[INFO ] 2020-04-27T19:56:51,697Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:51,708Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017411594) {}
[INFO ] 2020-04-27T19:56:51,710Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:51,720Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017411594) {}
[INFO ] 2020-04-27T19:56:51,720Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:51,720Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017411594) {}
[INFO ] 2020-04-27T19:56:51,720Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T19:56:51,723Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:56:51,723Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:56:51,729Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:56:51,729Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:56:51,729Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:56:51,729Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:56:51,729Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:56:51,729Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:52,298Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195652.216/nodes/0/cordapps] {}
[INFO ] 2020-04-27T19:56:52,299Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:56:52,299Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:56:52,307Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:56:52,329Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:56:52,330Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:56:52,334Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:52,334Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:52,341Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:56:52.216Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:56:52,909Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:52,911Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195652.216/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:52,911Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:52,930Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:52,932Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:52,933Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,046Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,061Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,062Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,064Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,064Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,121Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,148Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:56:53,157Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:56:53,158Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:56:53,308Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:56:53,313Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:56:53,313Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017413313) {}
[INFO ] 2020-04-27T19:56:53,354Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:56:53,368Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017413313) {}
[INFO ] 2020-04-27T19:56:53,376Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:56:53,378Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017413313) {}
[INFO ] 2020-04-27T19:56:53,382Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:53,403Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:56:53,406Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T19:56:53,406Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T19:56:53,412Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017413313) {}
[INFO ] 2020-04-27T19:56:53,415Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017413313) {}
[INFO ] 2020-04-27T19:56:53,415Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:53,416Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017413313) {}
[INFO ] 2020-04-27T19:56:53,416Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:53,420Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195652.216/nodes/1/cordapps] {}
[INFO ] 2020-04-27T19:56:53,420Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:56:53,420Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:56:53,426Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:56:53,445Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:56:53,447Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:56:53,465Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:53,465Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:53,469Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:56:52.216Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:56:53,913Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,915Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195652.216/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,915Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,933Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,936Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:53,936Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,071Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,082Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,083Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,086Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,086Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,151Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,157Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:56:54,158Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:54,158Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:54,251Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:54,252Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:56:54,268Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:56:54,268Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017414268) {}
[INFO ] 2020-04-27T19:56:54,270Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:54,276Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017414268) {}
[INFO ] 2020-04-27T19:56:54,324Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:56:54,327Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017414268) {}
[INFO ] 2020-04-27T19:56:54,331Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:54,352Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:56:54,359Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017414268) {}
[INFO ] 2020-04-27T19:56:54,362Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017413313) {}
[INFO ] 2020-04-27T19:56:54,363Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:56:54,370Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017414268) {}
[INFO ] 2020-04-27T19:56:54,372Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:54,379Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017414268) {}
[INFO ] 2020-04-27T19:56:54,379Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:54,380Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017414268) {}
[INFO ] 2020-04-27T19:56:54,380Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:54,385Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195652.216/nodes/2/cordapps] {}
[INFO ] 2020-04-27T19:56:54,385Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:56:54,385Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:56:54,392Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195652.216/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:56:54,415Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:56:54,416Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:56:54,435Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:54,435Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:56:54,439Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:56:52.216Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:56:54,843Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,845Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195652.216/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,845Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,863Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,866Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:54,866Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:55,026Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:55,032Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:55,033Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:55,035Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:55,035Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:55,080Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:56:55,084Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:56:55,085Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:55,085Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:55,174Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:56:55,175Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:56:55,192Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:56:55,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017415192) {}
[INFO ] 2020-04-27T19:56:55,193Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:55,198Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017415192) {}
[INFO ] 2020-04-27T19:56:55,203Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:56:55,242Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017415192) {}
[INFO ] 2020-04-27T19:56:55,245Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:55,263Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:56:55,270Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017415192) {}
[INFO ] 2020-04-27T19:56:55,273Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017413313) {}
[INFO ] 2020-04-27T19:56:55,274Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:56:55,282Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017415192) {}
[INFO ] 2020-04-27T19:56:55,283Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:55,290Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017414268) {}
[INFO ] 2020-04-27T19:56:55,291Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:55,299Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017415192) {}
[INFO ] 2020-04-27T19:56:55,300Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:56:55,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017415192) {}
[INFO ] 2020-04-27T19:56:55,307Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:56:55,307Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017415192) {}
[INFO ] 2020-04-27T19:56:55,307Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T19:56:55,307Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:56:55,307Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:56:55,308Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:56:55,308Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:56:55,308Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:56:55,308Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:56:55,308Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:56:55,308Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:57:52,722Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T19:57:53,048Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:57:54,945Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T19:57:55,017Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:57:55,070Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:57:55,071Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T19:57:55,071Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:57:55,071Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:57:55,071Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T19:57:55,072Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:57:55,073Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:57:55,092Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T19:57:55,102Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:57:55,102Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T19:57:55,114Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:57:55,114Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T19:57:55,114Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:57:55,171Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:57:55,172Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T19:57:55,184Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:57:55,184Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T19:57:55,197Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:57:55,197Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:57:55,210Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,231Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:57:55,244Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T19:57:55,266Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:57:55,266Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T19:57:55,279Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:57:55,279Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T19:57:55,279Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:57:55,290Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T19:57:55,291Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,294Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T19:57:55,294Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,294Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,294Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T19:57:55,313Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,313Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T19:57:55,313Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,313Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,313Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T19:57:55,324Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:57:55,324Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T19:57:55,355Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:57:55,355Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T19:57:55,355Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:57:55,366Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T19:57:55,366Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:57:55,366Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,366Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T19:57:55,366Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,376Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T19:57:55,376Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,376Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,376Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T19:57:55,386Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,387Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:57:55,387Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:55,397Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T19:57:56,950Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:57:56,950Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:57:56,950Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T19:57:56,950Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:57:56,953Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:57:56,962Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T19:57:56,962Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:57:56,983Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T19:57:57,184Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195746.959/nodes/0/cordapps] {}
[INFO ] 2020-04-27T19:57:57,190Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:57:57,199Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:57:57,336Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:57:58,274Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:57:58,313Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:57:58,396Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:57:58,401Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:57:58,612Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:57:44.970Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:58:03,199Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:03,202Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195746.959/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:03,202Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:03,240Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:03,325Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:03,333Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:05,411Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:06,057Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:06,059Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:06,062Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:06,062Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:06,133Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:06,168Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:58:06,187Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:58:06,187Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:58:06,396Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:58:06,405Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:58:06,405Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017486405) {}
[INFO ] 2020-04-27T19:58:06,411Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:58:06,604Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017486405) {}
[INFO ] 2020-04-27T19:58:06,655Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:58:06,674Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017486405) {}
[INFO ] 2020-04-27T19:58:06,700Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:06,726Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:58:06,734Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T19:58:06,737Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T19:58:07,136Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017486405) {}
[INFO ] 2020-04-27T19:58:07,163Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017486405) {}
[INFO ] 2020-04-27T19:58:07,165Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:07,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017486405) {}
[INFO ] 2020-04-27T19:58:07,165Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:07,174Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195746.959/nodes/1/cordapps] {}
[INFO ] 2020-04-27T19:58:07,174Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:58:07,174Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:58:07,423Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:58:07,446Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:58:07,447Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:58:07,470Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:07,470Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:07,473Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:57:44.970Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:58:07,985Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:07,988Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195746.959/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:07,988Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,008Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,011Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,011Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,128Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,194Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,195Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,198Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,198Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,257Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:08,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:58:08,265Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:08,265Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:08,382Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:08,384Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:58:08,436Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:58:08,436Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017488436) {}
[INFO ] 2020-04-27T19:58:08,439Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:08,447Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017488436) {}
[INFO ] 2020-04-27T19:58:08,455Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:58:08,458Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017488436) {}
[INFO ] 2020-04-27T19:58:08,464Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:08,488Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:58:08,497Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017488436) {}
[INFO ] 2020-04-27T19:58:08,501Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017486405) {}
[INFO ] 2020-04-27T19:58:08,502Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:58:08,512Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017488436) {}
[INFO ] 2020-04-27T19:58:08,513Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:08,522Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017488436) {}
[INFO ] 2020-04-27T19:58:08,522Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:08,523Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017488436) {}
[INFO ] 2020-04-27T19:58:08,523Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:08,528Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195746.959/nodes/2/cordapps] {}
[INFO ] 2020-04-27T19:58:08,528Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:58:08,528Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:58:08,535Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195746.959/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:58:08,558Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:58:08,559Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:58:08,578Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:08,578Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:08,580Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:57:44.970Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:58:09,071Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,073Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195746.959/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,073Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,095Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,180Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,180Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,281Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,289Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,290Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,292Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,292Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,339Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:09,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:58:09,345Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:09,345Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:09,448Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:09,449Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:58:09,493Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:58:09,493Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017489493) {}
[INFO ] 2020-04-27T19:58:09,494Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:09,501Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017489493) {}
[INFO ] 2020-04-27T19:58:09,506Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:58:09,509Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017489493) {}
[INFO ] 2020-04-27T19:58:09,513Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:09,534Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:58:09,542Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017489493) {}
[INFO ] 2020-04-27T19:58:09,545Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017486405) {}
[INFO ] 2020-04-27T19:58:09,547Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:58:09,554Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017489493) {}
[INFO ] 2020-04-27T19:58:09,555Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:09,564Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017488436) {}
[INFO ] 2020-04-27T19:58:09,565Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:09,572Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017489493) {}
[INFO ] 2020-04-27T19:58:09,573Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:09,579Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017489493) {}
[INFO ] 2020-04-27T19:58:09,579Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:09,580Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017489493) {}
[INFO ] 2020-04-27T19:58:09,580Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T19:58:09,582Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:58:09,582Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:58:09,585Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:58:09,585Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:58:09,585Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:58:09,585Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:58:09,585Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:58:09,585Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:10,040Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195809.656/nodes/0/cordapps] {}
[INFO ] 2020-04-27T19:58:10,040Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:58:10,040Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:58:10,049Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:58:10,070Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:58:10,071Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:58:10,075Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:10,075Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:10,080Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:58:09.655Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:58:10,588Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,590Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195809.656/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,590Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,606Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,608Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,608Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,718Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,731Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,733Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,735Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,735Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,799Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:10,828Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:58:10,835Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:58:10,835Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:58:10,974Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:58:10,983Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:58:10,983Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017490983) {}
[INFO ] 2020-04-27T19:58:11,016Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:58:11,029Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017490983) {}
[INFO ] 2020-04-27T19:58:11,038Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:58:11,040Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017490983) {}
[INFO ] 2020-04-27T19:58:11,044Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:11,068Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:58:11,070Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T19:58:11,070Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T19:58:11,076Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017490983) {}
[INFO ] 2020-04-27T19:58:11,078Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017490983) {}
[INFO ] 2020-04-27T19:58:11,079Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:11,079Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017490983) {}
[INFO ] 2020-04-27T19:58:11,079Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:11,083Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195809.656/nodes/1/cordapps] {}
[INFO ] 2020-04-27T19:58:11,083Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:58:11,083Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:58:11,088Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:58:11,108Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:58:11,108Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:58:11,126Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:11,126Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:11,128Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:58:09.655Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:58:11,545Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,547Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195809.656/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,547Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,565Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,567Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,567Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,671Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,681Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,682Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,684Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,684Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,734Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:11,738Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:58:11,739Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:11,739Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:11,819Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:11,825Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:58:11,841Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:58:11,841Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017491841) {}
[INFO ] 2020-04-27T19:58:11,842Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:11,849Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017491841) {}
[INFO ] 2020-04-27T19:58:11,886Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:58:11,888Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017491841) {}
[INFO ] 2020-04-27T19:58:11,893Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:11,912Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:58:11,918Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017491841) {}
[INFO ] 2020-04-27T19:58:11,921Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017490983) {}
[INFO ] 2020-04-27T19:58:11,922Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:58:11,930Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017491841) {}
[INFO ] 2020-04-27T19:58:11,930Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:11,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017491841) {}
[INFO ] 2020-04-27T19:58:11,938Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:11,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017491841) {}
[INFO ] 2020-04-27T19:58:11,938Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:11,943Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195809.656/nodes/2/cordapps] {}
[INFO ] 2020-04-27T19:58:11,943Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:58:11,944Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:58:11,949Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195809.656/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:58:11,969Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:58:11,970Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:58:11,986Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:11,986Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:11,989Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:58:09.655Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:58:12,394Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,396Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195809.656/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,396Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,411Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,413Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,413Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,540Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,547Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,548Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,550Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,550Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,598Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:58:12,603Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:58:12,604Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:12,604Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:12,701Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:58:12,702Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:58:12,726Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:58:12,726Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017492726) {}
[INFO ] 2020-04-27T19:58:12,727Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:12,732Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017492726) {}
[INFO ] 2020-04-27T19:58:12,737Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:58:12,772Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017492726) {}
[INFO ] 2020-04-27T19:58:12,776Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:12,792Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:58:12,797Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017492726) {}
[INFO ] 2020-04-27T19:58:12,799Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017490983) {}
[INFO ] 2020-04-27T19:58:12,800Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:58:12,807Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017492726) {}
[INFO ] 2020-04-27T19:58:12,808Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:12,814Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017491841) {}
[INFO ] 2020-04-27T19:58:12,815Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:12,821Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017492726) {}
[INFO ] 2020-04-27T19:58:12,822Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:58:12,828Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017492726) {}
[INFO ] 2020-04-27T19:58:12,828Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:58:12,828Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017492726) {}
[INFO ] 2020-04-27T19:58:12,828Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T19:58:12,828Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:58:12,828Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:58:12,828Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:58:12,828Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:58:12,828Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:58:12,828Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:58:12,828Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:58:12,828Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:58:57,284Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T19:58:57,983Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:59:00,237Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T19:59:00,275Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:59:00,324Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:59:00,326Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T19:59:00,326Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:59:00,327Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:59:00,327Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T19:59:00,327Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:59:00,327Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:59:00,338Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T19:59:00,338Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:59:00,338Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T19:59:00,348Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:59:00,348Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T19:59:00,349Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T19:59:00,382Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:59:00,382Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T19:59:00,397Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:59:00,397Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T19:59:00,397Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T19:59:00,397Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:59:00,420Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,455Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:59:00,466Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T19:59:00,488Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:59:00,488Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T19:59:00,488Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,500Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T19:59:00,511Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,511Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T19:59:00,523Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,523Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,523Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T19:59:00,523Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,523Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:59:00,533Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T19:59:00,545Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:59:00,545Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T19:59:00,545Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:59:00,545Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T19:59:00,545Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T19:59:00,556Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,556Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T19:59:00,557Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,557Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T19:59:00,557Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,557Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,557Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:00,567Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T19:59:02,026Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T19:59:02,026Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:59:02,026Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T19:59:02,026Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T19:59:02,029Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:59:02,037Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T19:59:02,037Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T19:59:02,061Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T19:59:02,218Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195851.145/nodes/0/cordapps] {}
[INFO ] 2020-04-27T19:59:02,223Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:59:02,231Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:59:02,339Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:59:03,235Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:59:03,282Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:59:03,362Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:03,366Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:03,535Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:58:49.124Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:59:08,094Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:08,099Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195851.145/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:08,099Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:08,152Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:08,255Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:08,263Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:10,938Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:11,811Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:11,813Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:11,819Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:11,819Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:11,916Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:11,966Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:59:11,995Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:59:11,995Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:59:12,317Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:59:12,327Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:59:12,328Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017552328) {}
[INFO ] 2020-04-27T19:59:12,334Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:59:12,591Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017552328) {}
[INFO ] 2020-04-27T19:59:12,669Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:59:12,695Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017552328) {}
[INFO ] 2020-04-27T19:59:12,731Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:12,768Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:59:12,777Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T19:59:12,781Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T19:59:13,311Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017552328) {}
[INFO ] 2020-04-27T19:59:13,347Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017552328) {}
[INFO ] 2020-04-27T19:59:13,349Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:13,350Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017552328) {}
[INFO ] 2020-04-27T19:59:13,350Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:13,425Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195851.145/nodes/1/cordapps] {}
[INFO ] 2020-04-27T19:59:13,425Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:59:13,425Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:59:13,433Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:59:13,463Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:59:13,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:59:13,493Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:13,493Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:13,497Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:58:49.124Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:59:14,254Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,256Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195851.145/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,256Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,276Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,279Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,279Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,395Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,438Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,439Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,441Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,441Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,487Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:14,502Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:59:14,543Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:14,543Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:14,638Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:14,640Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:59:14,659Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:59:14,659Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017554659) {}
[INFO ] 2020-04-27T19:59:14,660Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:14,666Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017554659) {}
[INFO ] 2020-04-27T19:59:14,671Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:59:14,674Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017554659) {}
[INFO ] 2020-04-27T19:59:14,678Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:14,701Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:59:14,710Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017554659) {}
[INFO ] 2020-04-27T19:59:14,713Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017552328) {}
[INFO ] 2020-04-27T19:59:14,715Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:59:14,725Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017554659) {}
[INFO ] 2020-04-27T19:59:14,726Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:14,734Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017554659) {}
[INFO ] 2020-04-27T19:59:14,734Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:14,735Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017554659) {}
[INFO ] 2020-04-27T19:59:14,735Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:14,740Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195851.145/nodes/2/cordapps] {}
[INFO ] 2020-04-27T19:59:14,740Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:59:14,740Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:59:14,747Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195851.145/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:59:14,769Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:59:14,770Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:59:14,789Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:14,789Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:14,791Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:58:49.124Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:59:15,337Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,347Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195851.145/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,347Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,378Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,510Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,510Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,651Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,660Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,661Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,664Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,664Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,723Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:15,727Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:59:15,728Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:15,728Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:15,829Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:15,831Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:59:15,881Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:59:15,881Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017555881) {}
[INFO ] 2020-04-27T19:59:15,883Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:15,889Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017555881) {}
[INFO ] 2020-04-27T19:59:15,894Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:59:15,897Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017555881) {}
[INFO ] 2020-04-27T19:59:15,901Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:15,929Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:59:15,937Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017555881) {}
[INFO ] 2020-04-27T19:59:15,940Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017552328) {}
[INFO ] 2020-04-27T19:59:15,941Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:59:15,950Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017555881) {}
[INFO ] 2020-04-27T19:59:15,951Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:15,961Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017554659) {}
[INFO ] 2020-04-27T19:59:15,962Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:15,971Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017555881) {}
[INFO ] 2020-04-27T19:59:15,973Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:15,982Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017555881) {}
[INFO ] 2020-04-27T19:59:15,982Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:15,983Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017555881) {}
[INFO ] 2020-04-27T19:59:15,983Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T19:59:15,986Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:59:15,986Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:59:15,990Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:59:15,990Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:59:15,991Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:59:15,991Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:59:15,991Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:59:15,991Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:59:16,663Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
[WARN ] 2020-04-27T19:59:16,663Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
[INFO ] 2020-04-27T19:59:17,013Z [Mock network] corda.flow. - Flow raised an error: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
[INFO ] 2020-04-27T19:59:17,019Z [Mock network] statemachine.StaffedFlowHospital. - Flow [89d77e58-9b83-480e-a99b-d7a229949887] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=3fab3d01-d674-4b40-9635-68ac3f510bca, timestamp: 2020-04-27T19:59:16.437Z, entityType: Invocation, sessionId=3fab3d01-d674-4b40-9635-68ac3f510bca, timestamp: 2020-04-27T19:59:16.437Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=2EF49885E15C7D7763AA167DA7680FAF5F0983D481E876787ABBB9F6DFDB3BB5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=2973A39C2B0BFF3B4C3F68A6A2D1C03C9444942D5382315E47EF637626A4D47E), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@349e91b, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=14a67a9d-9537-4ba5-b5e7-b88fa9d47e15) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
[INFO ] 2020-04-27T19:59:17,022Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T19:59:17,025Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T19:59:17,042Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [89d77e58-9b83-480e-a99b-d7a229949887] errored, dumping all transitions:

 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:16.623Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[89d77e58-9b83-480e-a99b-d7a229949887], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=3fab3d01-d674-4b40-9635-68ac3f510bca, timestamp: 2020-04-27T19:59:16.437Z, entityType: Invocation, sessionId=3fab3d01-d674-4b40-9635-68ac3f510bca, timestamp: 2020-04-27T19:59:16.437Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=2EF49885E15C7D7763AA167DA7680FAF5F0983D481E876787ABBB9F6DFDB3BB5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=2973A39C2B0BFF3B4C3F68A6A2D1C03C9444942D5382315E47EF637626A4D47E), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@418fba2e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@418fba2e])
    SignalFlowHasStarted(flowId=[89d77e58-9b83-480e-a99b-d7a229949887])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@418fba2e]
    []


 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:17.027Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T19:59:16.569Z
    2020-04-27T19:59:17.018Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2786432725535854678, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:17.031Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:17.034Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T19:59:17.018Z
    2020-04-27T19:59:17.034Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
[WARN ] 2020-04-27T19:59:17,042Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [89d77e58-9b83-480e-a99b-d7a229949887] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T19:59:17,045Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
[WARN ] 2020-04-27T19:59:17,084Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [89d77e58-9b83-480e-a99b-d7a229949887] errored, dumping all transitions:

 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:16.623Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[89d77e58-9b83-480e-a99b-d7a229949887], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=3fab3d01-d674-4b40-9635-68ac3f510bca, timestamp: 2020-04-27T19:59:16.437Z, entityType: Invocation, sessionId=3fab3d01-d674-4b40-9635-68ac3f510bca, timestamp: 2020-04-27T19:59:16.437Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=2EF49885E15C7D7763AA167DA7680FAF5F0983D481E876787ABBB9F6DFDB3BB5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=2973A39C2B0BFF3B4C3F68A6A2D1C03C9444942D5382315E47EF637626A4D47E), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@418fba2e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@418fba2e])
    SignalFlowHasStarted(flowId=[89d77e58-9b83-480e-a99b-d7a229949887])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@418fba2e]
    []


 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:17.027Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T19:59:16.569Z
    2020-04-27T19:59:17.018Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2786432725535854678, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:17.031Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:17.034Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T19:59:17.018Z
    2020-04-27T19:59:17.034Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [89d77e58-9b83-480e-a99b-d7a229949887] ---
  Timestamp: 2020-04-27T19:59:17.079Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=2786432725535854678)], sessions=[], senderUUID=14a67a9d-9537-4ba5-b5e7-b88fa9d47e15)
    CreateTransaction
    RemoveCheckpoint(id=[89d77e58-9b83-480e-a99b-d7a229949887])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=89d77e58-9b83-480e-a99b-d7a229949887)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[89d77e58-9b83-480e-a99b-d7a229949887], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2786432725535854678, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=3fab3d01-d674-4b40-9635-68ac3f510bca, timestamp: 2020-04-27T19:59:16.437Z, entityType: Invocation, sessionId=3fab3d01-d674-4b40-9635-68ac3f510bca, timestamp: 2020-04-27T19:59:16.437Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=2EF49885E15C7D7763AA167DA7680FAF5F0983D481E876787ABBB9F6DFDB3BB5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=2973A39C2B0BFF3B4C3F68A6A2D1C03C9444942D5382315E47EF637626A4D47E), errorState=Errored(errors=[FlowError(errorId=2786432725535854678, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@349e91b, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=14a67a9d-9537-4ba5-b5e7-b88fa9d47e15))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T19:59:17.034Z
    2020-04-27T19:59:17.042Z
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
[WARN ] 2020-04-27T19:59:17,084Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [89d77e58-9b83-480e-a99b-d7a229949887] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=89d77e58-9b83-480e-a99b-d7a229949887, invocation_id=3fab3d01-d674-4b40-9635-68ac3f510bca, invocation_timestamp=2020-04-27T19:59:16.437Z, origin=Only For Testing, session_id=3fab3d01-d674-4b40-9635-68ac3f510bca, session_timestamp=2020-04-27T19:59:16.437Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T19:59:17,278Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195917.213/nodes/0/cordapps] {}
[INFO ] 2020-04-27T19:59:17,279Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:59:17,279Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:59:17,287Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:59:17,320Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:59:17,322Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:59:17,328Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:17,328Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:17,335Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:59:17.213Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:59:17,875Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,877Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195917.213/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,877Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,893Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,895Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,896Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,984Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,994Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,996Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,998Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:17,998Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,060Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,082Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:59:18,090Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:59:18,090Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:59:18,229Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T19:59:18,233Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:59:18,233Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017558233) {}
[INFO ] 2020-04-27T19:59:18,235Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:59:18,249Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017558233) {}
[INFO ] 2020-04-27T19:59:18,258Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:59:18,260Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017558233) {}
[INFO ] 2020-04-27T19:59:18,264Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:18,285Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:59:18,288Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T19:59:18,288Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T19:59:18,294Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017558233) {}
[INFO ] 2020-04-27T19:59:18,297Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017558233) {}
[INFO ] 2020-04-27T19:59:18,297Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:18,297Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017558233) {}
[INFO ] 2020-04-27T19:59:18,297Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:18,303Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195917.213/nodes/1/cordapps] {}
[INFO ] 2020-04-27T19:59:18,303Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:59:18,303Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:59:18,311Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:59:18,332Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:59:18,332Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:59:18,356Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:18,356Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:18,358Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:59:17.213Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:59:18,812Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,883Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195917.213/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,883Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,897Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,899Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,899Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,977Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,984Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,985Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,987Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:18,987Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,032Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:59:19,037Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:19,037Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:19,123Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:19,124Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:59:19,142Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:59:19,142Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017559142) {}
[INFO ] 2020-04-27T19:59:19,144Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:19,149Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017559142) {}
[INFO ] 2020-04-27T19:59:19,190Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:59:19,192Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017559142) {}
[INFO ] 2020-04-27T19:59:19,196Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:19,217Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:59:19,224Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017559142) {}
[INFO ] 2020-04-27T19:59:19,227Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017558233) {}
[INFO ] 2020-04-27T19:59:19,228Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:59:19,235Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017559142) {}
[INFO ] 2020-04-27T19:59:19,237Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:19,244Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017559142) {}
[INFO ] 2020-04-27T19:59:19,244Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:19,244Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017559142) {}
[INFO ] 2020-04-27T19:59:19,244Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:19,249Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-195917.213/nodes/2/cordapps] {}
[INFO ] 2020-04-27T19:59:19,249Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T19:59:19,249Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T19:59:19,255Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-195917.213/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T19:59:19,275Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T19:59:19,276Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T19:59:19,294Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:19,294Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:19,297Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T19:59:17.213Z
      epoch=1
  } {}
[INFO ] 2020-04-27T19:59:19,742Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,743Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-195917.213/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,743Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,758Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,759Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,759Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,895Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,903Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,904Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,906Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,906Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,948Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T19:59:19,951Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T19:59:19,952Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:19,952Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:20,046Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T19:59:20,047Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T19:59:20,062Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T19:59:20,062Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017560062) {}
[INFO ] 2020-04-27T19:59:20,064Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:20,069Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017560062) {}
[INFO ] 2020-04-27T19:59:20,074Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T19:59:20,113Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017560062) {}
[INFO ] 2020-04-27T19:59:20,118Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:20,136Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T19:59:20,142Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017560062) {}
[INFO ] 2020-04-27T19:59:20,145Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017558233) {}
[INFO ] 2020-04-27T19:59:20,146Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T19:59:20,153Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017560062) {}
[INFO ] 2020-04-27T19:59:20,154Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:20,161Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017559142) {}
[INFO ] 2020-04-27T19:59:20,162Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:20,168Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017560062) {}
[INFO ] 2020-04-27T19:59:20,169Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T19:59:20,175Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017560062) {}
[INFO ] 2020-04-27T19:59:20,175Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T19:59:20,175Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017560062) {}
[INFO ] 2020-04-27T19:59:20,175Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T19:59:20,175Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:59:20,175Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:59:20,175Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:59:20,175Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:59:20,175Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:59:20,175Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T19:59:20,175Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T19:59:20,175Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T19:59:20,240Z [Mock network] corda.flow. - Flow raised an error: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
[INFO ] 2020-04-27T19:59:20,240Z [Mock network] statemachine.StaffedFlowHospital. - Flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, timestamp: 2020-04-27T19:59:20.177Z, entityType: Invocation, sessionId=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, timestamp: 2020-04-27T19:59:20.177Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=2EF49885E15C7D7763AA167DA7680FAF5F0983D481E876787ABBB9F6DFDB3BB5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=DDC1DAAB9B0F68BDCBEDCF7CD65D584202B585531032D90B2F3AFB2C649E4CB7), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@502bc693, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=09c6f25b-0eb6-4b3d-b251-017c9e645648) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
[INFO ] 2020-04-27T19:59:20,240Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T19:59:20,240Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T19:59:20,243Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] errored, dumping all transitions:

 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.181Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3324dc42-d8c6-4ae0-958b-7dcd72322eba], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, timestamp: 2020-04-27T19:59:20.177Z, entityType: Invocation, sessionId=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, timestamp: 2020-04-27T19:59:20.177Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=2EF49885E15C7D7763AA167DA7680FAF5F0983D481E876787ABBB9F6DFDB3BB5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=DDC1DAAB9B0F68BDCBEDCF7CD65D584202B585531032D90B2F3AFB2C649E4CB7), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c3fc58a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c3fc58a])
    SignalFlowHasStarted(flowId=[3324dc42-d8c6-4ae0-958b-7dcd72322eba])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c3fc58a]
    []


 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.240Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T19:59:20.178Z
    2020-04-27T19:59:20.240Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1325844682413850376, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.241Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.241Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T19:59:20.240Z
    2020-04-27T19:59:20.241Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
[WARN ] 2020-04-27T19:59:20,243Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T19:59:20,243Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
[WARN ] 2020-04-27T19:59:20,249Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] errored, dumping all transitions:

 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.181Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3324dc42-d8c6-4ae0-958b-7dcd72322eba], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, timestamp: 2020-04-27T19:59:20.177Z, entityType: Invocation, sessionId=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, timestamp: 2020-04-27T19:59:20.177Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=2EF49885E15C7D7763AA167DA7680FAF5F0983D481E876787ABBB9F6DFDB3BB5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=DDC1DAAB9B0F68BDCBEDCF7CD65D584202B585531032D90B2F3AFB2C649E4CB7), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c3fc58a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c3fc58a])
    SignalFlowHasStarted(flowId=[3324dc42-d8c6-4ae0-958b-7dcd72322eba])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3c3fc58a]
    []


 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.240Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T19:59:20.178Z
    2020-04-27T19:59:20.240Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1325844682413850376, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.241Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.241Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T19:59:20.240Z
    2020-04-27T19:59:20.241Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] ---
  Timestamp: 2020-04-27T19:59:20.248Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-1325844682413850376)], sessions=[], senderUUID=09c6f25b-0eb6-4b3d-b251-017c9e645648)
    CreateTransaction
    RemoveCheckpoint(id=[3324dc42-d8c6-4ae0-958b-7dcd72322eba])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=3324dc42-d8c6-4ae0-958b-7dcd72322eba)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[3324dc42-d8c6-4ae0-958b-7dcd72322eba], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-1325844682413850376, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, timestamp: 2020-04-27T19:59:20.177Z, entityType: Invocation, sessionId=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, timestamp: 2020-04-27T19:59:20.177Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=2EF49885E15C7D7763AA167DA7680FAF5F0983D481E876787ABBB9F6DFDB3BB5), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=DDC1DAAB9B0F68BDCBEDCF7CD65D584202B585531032D90B2F3AFB2C649E4CB7), errorState=Errored(errors=[FlowError(errorId=-1325844682413850376, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@502bc693, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=09c6f25b-0eb6-4b3d-b251-017c9e645648))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T19:59:20.241Z
    2020-04-27T19:59:20.243Z
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
[WARN ] 2020-04-27T19:59:20,249Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3324dc42-d8c6-4ae0-958b-7dcd72322eba] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=3324dc42-d8c6-4ae0-958b-7dcd72322eba, invocation_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, invocation_timestamp=2020-04-27T19:59:20.177Z, origin=Only For Testing, session_id=635cc2f9-ae52-4fe2-80e9-704ac236e2e8, session_timestamp=2020-04-27T19:59:20.177Z, thread-id=496}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:02:35,311Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T20:02:35,580Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:02:37,135Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T20:02:37,188Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:02:37,233Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:02:37,234Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T20:02:37,235Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:02:37,235Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:02:37,235Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T20:02:37,237Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:02:37,237Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:02:37,237Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T20:02:37,247Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:02:37,247Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T20:02:37,258Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:02:37,258Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T20:02:37,259Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:02:37,290Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:02:37,290Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T20:02:37,290Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:02:37,290Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T20:02:37,300Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:02:37,300Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:02:37,312Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,323Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:02:37,335Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T20:02:37,359Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:02:37,359Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T20:02:37,359Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:02:37,359Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T20:02:37,359Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:02:37,370Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,370Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T20:02:37,370Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,370Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T20:02:37,371Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,371Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,371Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T20:02:37,381Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,381Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T20:02:37,393Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,393Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,393Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T20:02:37,393Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,403Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:02:37,414Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T20:02:37,426Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:02:37,426Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T20:02:37,426Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:02:37,426Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T20:02:37,426Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:02:37,426Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,426Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T20:02:37,436Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,436Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T20:02:37,436Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,437Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,437Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T20:02:37,458Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,458Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:02:37,458Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,458Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:37,459Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T20:02:38,809Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:02:38,809Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:02:38,809Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T20:02:38,809Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:02:38,811Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:02:38,822Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T20:02:38,822Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:02:38,840Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T20:02:39,015Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-200229.473/nodes/0/cordapps] {}
[INFO ] 2020-04-27T20:02:39,021Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:02:39,029Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:02:39,159Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:02:40,032Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:02:40,076Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:02:40,141Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:40,144Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:40,345Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:02:27.533Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:02:44,547Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:44,551Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-200229.473/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:44,551Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:44,632Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:44,723Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:44,732Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:46,775Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:47,373Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:47,375Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:47,379Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:47,379Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:47,449Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:47,523Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:02:47,541Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:02:47,541Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:02:47,747Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:02:47,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:02:47,756Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017767756) {}
[INFO ] 2020-04-27T20:02:47,761Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:02:47,917Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017767756) {}
[INFO ] 2020-04-27T20:02:48,004Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:02:48,023Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017767756) {}
[INFO ] 2020-04-27T20:02:48,053Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:48,078Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:02:48,086Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T20:02:48,089Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T20:02:48,493Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017767756) {}
[INFO ] 2020-04-27T20:02:48,518Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017767756) {}
[INFO ] 2020-04-27T20:02:48,520Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:48,520Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017767756) {}
[INFO ] 2020-04-27T20:02:48,520Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:48,530Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-200229.473/nodes/1/cordapps] {}
[INFO ] 2020-04-27T20:02:48,530Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:02:48,530Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:02:48,537Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:02:48,569Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:02:48,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:02:48,645Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:48,645Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:48,648Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:02:27.533Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:02:49,175Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,177Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-200229.473/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,177Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,199Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,201Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,201Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,314Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,372Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,374Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,376Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,376Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,429Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:49,435Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:02:49,438Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:49,438Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:49,535Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:49,536Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:02:49,555Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:02:49,555Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017769555) {}
[INFO ] 2020-04-27T20:02:49,557Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:49,564Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017769555) {}
[INFO ] 2020-04-27T20:02:49,569Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:02:49,573Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017769555) {}
[INFO ] 2020-04-27T20:02:49,586Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:49,636Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:02:49,644Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017769555) {}
[INFO ] 2020-04-27T20:02:49,648Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017767756) {}
[INFO ] 2020-04-27T20:02:49,649Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:02:49,659Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017769555) {}
[INFO ] 2020-04-27T20:02:49,660Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:49,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017769555) {}
[INFO ] 2020-04-27T20:02:49,669Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:49,669Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017769555) {}
[INFO ] 2020-04-27T20:02:49,669Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:49,674Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-200229.473/nodes/2/cordapps] {}
[INFO ] 2020-04-27T20:02:49,674Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:02:49,674Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:02:49,681Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200229.473/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:02:49,704Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:02:49,705Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:02:49,726Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:49,726Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:49,728Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:02:27.533Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:02:50,204Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,206Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-200229.473/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,206Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,224Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,227Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,227Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,340Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,348Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,348Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,350Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,350Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,439Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:50,443Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:02:50,444Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:50,444Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:50,532Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:50,533Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:02:50,548Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:02:50,548Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017770548) {}
[INFO ] 2020-04-27T20:02:50,550Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:50,556Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017770548) {}
[INFO ] 2020-04-27T20:02:50,561Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:02:50,564Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017770548) {}
[INFO ] 2020-04-27T20:02:50,569Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:50,598Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:02:50,605Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017770548) {}
[INFO ] 2020-04-27T20:02:50,607Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017767756) {}
[INFO ] 2020-04-27T20:02:50,609Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:02:50,619Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017770548) {}
[INFO ] 2020-04-27T20:02:50,620Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:50,706Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017769555) {}
[INFO ] 2020-04-27T20:02:50,707Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:50,715Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017770548) {}
[INFO ] 2020-04-27T20:02:50,716Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:50,723Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017770548) {}
[INFO ] 2020-04-27T20:02:50,723Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:50,724Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017770548) {}
[INFO ] 2020-04-27T20:02:50,724Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T20:02:50,725Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:02:50,725Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:02:50,728Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:02:50,728Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:02:50,729Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:02:50,729Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:02:50,729Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:02:50,729Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:02:51,353Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
[WARN ] 2020-04-27T20:02:51,353Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
[INFO ] 2020-04-27T20:02:51,710Z [Mock network] corda.flow. - Flow raised an error: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
[INFO ] 2020-04-27T20:02:51,717Z [Mock network] statemachine.StaffedFlowHospital. - Flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=acddd419-d38e-47b1-b165-7eefb489733e, timestamp: 2020-04-27T20:02:50.781Z, entityType: Invocation, sessionId=acddd419-d38e-47b1-b165-7eefb489733e, timestamp: 2020-04-27T20:02:50.781Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=D68A1B68F9C064F6F871169F6E3C4F087B928ADAB2D712E4E46B730F3E1B16C2), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=89FAB0B7C7E6C68EBD02934DB4638509BBDD511F3F90E8884421B89C82E75F43), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@6ba4e1f0, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=417afd74-0203-4592-bdc5-64b1c4a5a2e0) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
[INFO ] 2020-04-27T20:02:51,719Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:02:51,723Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T20:02:51,740Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] errored, dumping all transitions:

 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.315Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[24a90ac0-1517-4f4d-94f2-dc3d17deb8c5], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=acddd419-d38e-47b1-b165-7eefb489733e, timestamp: 2020-04-27T20:02:50.781Z, entityType: Invocation, sessionId=acddd419-d38e-47b1-b165-7eefb489733e, timestamp: 2020-04-27T20:02:50.781Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=D68A1B68F9C064F6F871169F6E3C4F087B928ADAB2D712E4E46B730F3E1B16C2), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=89FAB0B7C7E6C68EBD02934DB4638509BBDD511F3F90E8884421B89C82E75F43), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@508c8e05])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@508c8e05])
    SignalFlowHasStarted(flowId=[24a90ac0-1517-4f4d-94f2-dc3d17deb8c5])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@508c8e05]
    []


 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.725Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T20:02:51.268Z
    2020-04-27T20:02:51.715Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8543653502345752334, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.729Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.732Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:02:51.715Z
    2020-04-27T20:02:51.732Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
[WARN ] 2020-04-27T20:02:51,740Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T20:02:51,743Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
[WARN ] 2020-04-27T20:02:51,786Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] errored, dumping all transitions:

 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.315Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[24a90ac0-1517-4f4d-94f2-dc3d17deb8c5], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=acddd419-d38e-47b1-b165-7eefb489733e, timestamp: 2020-04-27T20:02:50.781Z, entityType: Invocation, sessionId=acddd419-d38e-47b1-b165-7eefb489733e, timestamp: 2020-04-27T20:02:50.781Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=D68A1B68F9C064F6F871169F6E3C4F087B928ADAB2D712E4E46B730F3E1B16C2), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=89FAB0B7C7E6C68EBD02934DB4638509BBDD511F3F90E8884421B89C82E75F43), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@508c8e05])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@508c8e05])
    SignalFlowHasStarted(flowId=[24a90ac0-1517-4f4d-94f2-dc3d17deb8c5])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@508c8e05]
    []


 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.725Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T20:02:51.268Z
    2020-04-27T20:02:51.715Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=8543653502345752334, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.729Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.732Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:02:51.715Z
    2020-04-27T20:02:51.732Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] ---
  Timestamp: 2020-04-27T20:02:51.780Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=8543653502345752334)], sessions=[], senderUUID=417afd74-0203-4592-bdc5-64b1c4a5a2e0)
    CreateTransaction
    RemoveCheckpoint(id=[24a90ac0-1517-4f4d-94f2-dc3d17deb8c5])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[24a90ac0-1517-4f4d-94f2-dc3d17deb8c5], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=8543653502345752334, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=acddd419-d38e-47b1-b165-7eefb489733e, timestamp: 2020-04-27T20:02:50.781Z, entityType: Invocation, sessionId=acddd419-d38e-47b1-b165-7eefb489733e, timestamp: 2020-04-27T20:02:50.781Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=D68A1B68F9C064F6F871169F6E3C4F087B928ADAB2D712E4E46B730F3E1B16C2), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=89FAB0B7C7E6C68EBD02934DB4638509BBDD511F3F90E8884421B89C82E75F43), errorState=Errored(errors=[FlowError(errorId=8543653502345752334, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@6ba4e1f0, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=417afd74-0203-4592-bdc5-64b1c4a5a2e0))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:02:51.732Z
    2020-04-27T20:02:51.740Z
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
[WARN ] 2020-04-27T20:02:51,786Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [24a90ac0-1517-4f4d-94f2-dc3d17deb8c5] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=24a90ac0-1517-4f4d-94f2-dc3d17deb8c5, invocation_id=acddd419-d38e-47b1-b165-7eefb489733e, invocation_timestamp=2020-04-27T20:02:50.781Z, origin=Only For Testing, session_id=acddd419-d38e-47b1-b165-7eefb489733e, session_timestamp=2020-04-27T20:02:50.781Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:02:52,102Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-200252.036/nodes/0/cordapps] {}
[INFO ] 2020-04-27T20:02:52,103Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:02:52,103Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:02:52,111Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:02:52,133Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:02:52,134Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:02:52,138Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:52,138Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:52,144Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:02:52.036Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:02:52,631Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,632Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-200252.036/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,632Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,656Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,658Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,658Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,751Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,760Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,761Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,763Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,763Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,812Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:52,833Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:02:52,840Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:02:52,840Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:02:52,965Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:02:52,969Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:02:52,969Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017772969) {}
[INFO ] 2020-04-27T20:02:52,971Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:02:52,984Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017772969) {}
[INFO ] 2020-04-27T20:02:52,993Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:02:53,034Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017772969) {}
[INFO ] 2020-04-27T20:02:53,040Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:53,047Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:02:53,050Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T20:02:53,050Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T20:02:53,055Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017772969) {}
[INFO ] 2020-04-27T20:02:53,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017772969) {}
[INFO ] 2020-04-27T20:02:53,058Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:53,058Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017772969) {}
[INFO ] 2020-04-27T20:02:53,058Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:53,063Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-200252.036/nodes/1/cordapps] {}
[INFO ] 2020-04-27T20:02:53,063Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:02:53,063Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:02:53,069Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:02:53,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:02:53,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:02:53,103Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:53,103Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:53,105Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:02:52.036Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:02:53,496Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,499Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-200252.036/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,499Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,528Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,531Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,531Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,634Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,644Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,645Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,647Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,647Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,711Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:53,716Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:02:53,716Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:53,717Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:53,798Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:53,799Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:02:53,815Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:02:53,815Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017773815) {}
[INFO ] 2020-04-27T20:02:53,823Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:53,828Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017773815) {}
[INFO ] 2020-04-27T20:02:53,864Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:02:53,866Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017773815) {}
[INFO ] 2020-04-27T20:02:53,870Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:53,888Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:02:53,893Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017773815) {}
[INFO ] 2020-04-27T20:02:53,896Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017772969) {}
[INFO ] 2020-04-27T20:02:53,897Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:02:53,902Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017773815) {}
[INFO ] 2020-04-27T20:02:53,903Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:53,909Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017773815) {}
[INFO ] 2020-04-27T20:02:53,910Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:53,910Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017773815) {}
[INFO ] 2020-04-27T20:02:53,910Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:53,914Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-200252.036/nodes/2/cordapps] {}
[INFO ] 2020-04-27T20:02:53,914Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:02:53,914Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:02:53,920Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-200252.036/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:02:53,939Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:02:53,939Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:02:53,954Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:53,954Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:53,956Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:02:52.036Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:02:54,332Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,334Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-200252.036/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,334Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,348Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,350Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,350Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,507Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,513Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,514Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,516Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,516Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,554Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:02:54,557Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:02:54,558Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:54,558Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:54,635Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:02:54,635Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:02:54,650Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:02:54,650Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017774650) {}
[INFO ] 2020-04-27T20:02:54,652Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:54,657Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017774650) {}
[INFO ] 2020-04-27T20:02:54,661Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:02:54,663Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017774650) {}
[INFO ] 2020-04-27T20:02:54,667Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:54,688Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:02:54,694Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017774650) {}
[INFO ] 2020-04-27T20:02:54,697Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588017772969) {}
[INFO ] 2020-04-27T20:02:54,706Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:02:54,714Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017774650) {}
[INFO ] 2020-04-27T20:02:54,715Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:54,723Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588017773815) {}
[INFO ] 2020-04-27T20:02:54,724Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:54,731Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017774650) {}
[INFO ] 2020-04-27T20:02:54,731Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:02:54,738Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017774650) {}
[INFO ] 2020-04-27T20:02:54,738Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:02:54,738Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588017774650) {}
[INFO ] 2020-04-27T20:02:54,738Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T20:02:54,738Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:02:54,738Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:02:54,738Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:02:54,738Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:02:54,738Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:02:54,738Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:02:54,738Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:02:54,738Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:02:54,832Z [Mock network] corda.flow. - Flow raised an error: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
[INFO ] 2020-04-27T20:02:54,833Z [Mock network] statemachine.StaffedFlowHospital. - Flow [82742406-6154-467a-9fd9-f11ab6891c77] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e97719ab-af1f-4680-bea5-103d77b22abb, timestamp: 2020-04-27T20:02:54.776Z, entityType: Invocation, sessionId=e97719ab-af1f-4680-bea5-103d77b22abb, timestamp: 2020-04-27T20:02:54.776Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=D68A1B68F9C064F6F871169F6E3C4F087B928ADAB2D712E4E46B730F3E1B16C2), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C83E1A3596F1306535B2A4509F3E2C73B515074C63CB9554421C5939EF6544C9), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@6622d2a1, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=34cf4b03-014f-44aa-ac37-876ba47b4293) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
[INFO ] 2020-04-27T20:02:54,833Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:02:54,833Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T20:02:54,835Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [82742406-6154-467a-9fd9-f11ab6891c77] errored, dumping all transitions:

 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.779Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[82742406-6154-467a-9fd9-f11ab6891c77], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e97719ab-af1f-4680-bea5-103d77b22abb, timestamp: 2020-04-27T20:02:54.776Z, entityType: Invocation, sessionId=e97719ab-af1f-4680-bea5-103d77b22abb, timestamp: 2020-04-27T20:02:54.776Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=D68A1B68F9C064F6F871169F6E3C4F087B928ADAB2D712E4E46B730F3E1B16C2), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C83E1A3596F1306535B2A4509F3E2C73B515074C63CB9554421C5939EF6544C9), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7b665df0])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7b665df0])
    SignalFlowHasStarted(flowId=[82742406-6154-467a-9fd9-f11ab6891c77])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7b665df0]
    []


 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.833Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T20:02:54.778Z
    2020-04-27T20:02:54.832Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7261804797873798995, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.833Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.833Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:02:54.832Z
    2020-04-27T20:02:54.833Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
[WARN ] 2020-04-27T20:02:54,835Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [82742406-6154-467a-9fd9-f11ab6891c77] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T20:02:54,835Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
[WARN ] 2020-04-27T20:02:54,843Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [82742406-6154-467a-9fd9-f11ab6891c77] errored, dumping all transitions:

 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.779Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[82742406-6154-467a-9fd9-f11ab6891c77], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e97719ab-af1f-4680-bea5-103d77b22abb, timestamp: 2020-04-27T20:02:54.776Z, entityType: Invocation, sessionId=e97719ab-af1f-4680-bea5-103d77b22abb, timestamp: 2020-04-27T20:02:54.776Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=D68A1B68F9C064F6F871169F6E3C4F087B928ADAB2D712E4E46B730F3E1B16C2), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C83E1A3596F1306535B2A4509F3E2C73B515074C63CB9554421C5939EF6544C9), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7b665df0])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7b665df0])
    SignalFlowHasStarted(flowId=[82742406-6154-467a-9fd9-f11ab6891c77])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@7b665df0]
    []


 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.833Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T20:02:54.778Z
    2020-04-27T20:02:54.832Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=7261804797873798995, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.833Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.833Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:02:54.832Z
    2020-04-27T20:02:54.833Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [82742406-6154-467a-9fd9-f11ab6891c77] ---
  Timestamp: 2020-04-27T20:02:54.841Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=7261804797873798995)], sessions=[], senderUUID=34cf4b03-014f-44aa-ac37-876ba47b4293)
    CreateTransaction
    RemoveCheckpoint(id=[82742406-6154-467a-9fd9-f11ab6891c77])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=82742406-6154-467a-9fd9-f11ab6891c77)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[82742406-6154-467a-9fd9-f11ab6891c77], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=7261804797873798995, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=e97719ab-af1f-4680-bea5-103d77b22abb, timestamp: 2020-04-27T20:02:54.776Z, entityType: Invocation, sessionId=e97719ab-af1f-4680-bea5-103d77b22abb, timestamp: 2020-04-27T20:02:54.776Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=D68A1B68F9C064F6F871169F6E3C4F087B928ADAB2D712E4E46B730F3E1B16C2), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C83E1A3596F1306535B2A4509F3E2C73B515074C63CB9554421C5939EF6544C9), errorState=Errored(errors=[FlowError(errorId=7261804797873798995, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@6622d2a1, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=34cf4b03-014f-44aa-ac37-876ba47b4293))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:02:54.833Z
    2020-04-27T20:02:54.835Z
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
[WARN ] 2020-04-27T20:02:54,843Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [82742406-6154-467a-9fd9-f11ab6891c77] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=82742406-6154-467a-9fd9-f11ab6891c77, invocation_id=e97719ab-af1f-4680-bea5-103d77b22abb, invocation_timestamp=2020-04-27T20:02:54.776Z, origin=Only For Testing, session_id=e97719ab-af1f-4680-bea5-103d77b22abb, session_timestamp=2020-04-27T20:02:54.776Z, thread-id=495}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:107) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:17:48,851Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T20:17:49,157Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:17:50,604Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T20:17:50,627Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:17:50,666Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:17:50,667Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T20:17:50,668Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:17:50,668Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:17:50,668Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T20:17:50,675Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:17:50,675Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:17:50,675Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T20:17:50,686Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:17:50,686Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T20:17:50,686Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:17:50,686Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T20:17:50,687Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:17:50,764Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:17:50,765Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T20:17:50,775Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:17:50,775Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T20:17:50,796Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:17:50,796Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:17:50,817Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,829Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:17:50,840Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T20:17:50,918Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:17:50,918Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T20:17:50,928Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:17:50,928Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T20:17:50,928Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:17:50,939Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,940Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T20:17:50,940Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,940Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T20:17:50,940Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,940Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:50,940Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T20:17:50,960Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:50,960Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T20:17:50,960Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:50,960Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,960Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T20:17:50,971Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,971Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:17:50,971Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T20:17:50,982Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:17:50,982Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T20:17:50,982Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:17:50,982Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T20:17:50,982Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:17:50,992Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,992Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T20:17:50,992Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,992Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T20:17:50,992Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:50,992Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:50,992Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:17:51,004Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:51,005Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T20:17:51,015Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:17:51,015Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:17:51,025Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T20:17:51,025Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:17:51,028Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:17:51,036Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T20:17:51,036Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:17:51,060Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T20:17:51,315Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-201742.563/nodes/0/cordapps] {}
[INFO ] 2020-04-27T20:17:51,322Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:17:51,360Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:17:51,467Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:17:52,344Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:17:52,389Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:17:52,463Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:17:52,467Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:17:52,643Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:17:40.353Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:17:58,057Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:17:58,061Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-201742.563/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:17:58,061Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:17:58,105Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:17:58,224Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:17:58,231Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:00,705Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:01,498Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:01,501Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:01,507Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:01,507Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:01,597Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:01,643Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:18:01,666Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:18:01,666Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:18:01,927Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:18:01,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:18:01,937Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018681937) {}
[INFO ] 2020-04-27T20:18:01,942Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:18:02,152Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018681937) {}
[INFO ] 2020-04-27T20:18:02,213Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:18:02,235Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018681937) {}
[INFO ] 2020-04-27T20:18:02,263Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:02,290Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:18:02,298Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T20:18:02,302Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T20:18:02,843Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018681937) {}
[INFO ] 2020-04-27T20:18:02,872Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018681937) {}
[INFO ] 2020-04-27T20:18:02,874Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:02,874Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018681937) {}
[INFO ] 2020-04-27T20:18:02,874Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:02,884Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-201742.563/nodes/1/cordapps] {}
[INFO ] 2020-04-27T20:18:02,884Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:18:02,885Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:18:02,904Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:18:03,042Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:18:03,042Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:18:03,068Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:03,068Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:03,071Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:17:40.353Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:18:03,698Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,700Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-201742.563/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,700Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,720Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,722Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,722Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,839Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,891Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,893Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,895Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,895Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,949Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:03,954Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:18:03,957Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:03,957Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:04,074Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:04,076Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:18:04,140Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:18:04,140Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018684140) {}
[INFO ] 2020-04-27T20:18:04,143Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:04,150Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018684140) {}
[INFO ] 2020-04-27T20:18:04,156Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:18:04,159Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018684140) {}
[INFO ] 2020-04-27T20:18:04,164Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:04,194Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:18:04,207Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018684140) {}
[INFO ] 2020-04-27T20:18:04,212Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018681937) {}
[INFO ] 2020-04-27T20:18:04,213Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:18:04,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018684140) {}
[INFO ] 2020-04-27T20:18:04,228Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:04,239Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018684140) {}
[INFO ] 2020-04-27T20:18:04,239Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:04,240Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018684140) {}
[INFO ] 2020-04-27T20:18:04,240Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:04,245Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-201742.563/nodes/2/cordapps] {}
[INFO ] 2020-04-27T20:18:04,246Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:18:04,246Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:18:04,253Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201742.563/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:18:04,281Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:18:04,282Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:18:04,305Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:04,305Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:04,308Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:17:40.353Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:18:04,827Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:04,829Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-201742.563/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:04,829Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:04,848Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:04,931Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:04,932Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:05,029Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:05,038Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:05,040Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:05,043Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:05,043Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:05,098Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:05,103Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:18:05,104Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:05,104Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:05,220Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:05,221Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:18:05,277Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:18:05,277Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018685277) {}
[INFO ] 2020-04-27T20:18:05,279Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:05,285Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018685277) {}
[INFO ] 2020-04-27T20:18:05,291Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:18:05,294Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018685277) {}
[INFO ] 2020-04-27T20:18:05,299Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:05,323Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:18:05,330Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018685277) {}
[INFO ] 2020-04-27T20:18:05,333Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018681937) {}
[INFO ] 2020-04-27T20:18:05,334Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:18:05,343Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018685277) {}
[INFO ] 2020-04-27T20:18:05,344Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:05,354Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018684140) {}
[INFO ] 2020-04-27T20:18:05,355Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:05,365Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018685277) {}
[INFO ] 2020-04-27T20:18:05,366Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:05,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018685277) {}
[INFO ] 2020-04-27T20:18:05,375Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:05,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018685277) {}
[INFO ] 2020-04-27T20:18:05,375Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T20:18:05,377Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:18:05,377Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:18:05,382Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:18:05,382Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:18:05,383Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:18:05,383Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:18:05,383Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:18:05,383Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:18:06,094Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
[WARN ] 2020-04-27T20:18:06,094Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
[INFO ] 2020-04-27T20:18:06,470Z [Mock network] corda.flow. - Flow raised an error: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
[INFO ] 2020-04-27T20:18:06,475Z [Mock network] statemachine.StaffedFlowHospital. - Flow [baa0edd0-7031-451f-96dd-ba226fb5102f] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d0de420f-9d94-4677-8e2d-32062338d5a1, timestamp: 2020-04-27T20:18:05.441Z, entityType: Invocation, sessionId=d0de420f-9d94-4677-8e2d-32062338d5a1, timestamp: 2020-04-27T20:18:05.441Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=4A2276007ED81117EB1E7B82160820212A89B0E6D6927DC64B2B554600ECA18F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C78D08C0E79783BE7C6FC8C83C5269A6F3AD7923483815780CF9534F3DA2AA6F), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@213b891e, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=2c07a603-d79c-4023-b97a-69a9a4de365d) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
[INFO ] 2020-04-27T20:18:06,478Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:110) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:18:06,482Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:110) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T20:18:06,497Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [baa0edd0-7031-451f-96dd-ba226fb5102f] errored, dumping all transitions:

 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.048Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[baa0edd0-7031-451f-96dd-ba226fb5102f], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d0de420f-9d94-4677-8e2d-32062338d5a1, timestamp: 2020-04-27T20:18:05.441Z, entityType: Invocation, sessionId=d0de420f-9d94-4677-8e2d-32062338d5a1, timestamp: 2020-04-27T20:18:05.441Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=4A2276007ED81117EB1E7B82160820212A89B0E6D6927DC64B2B554600ECA18F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C78D08C0E79783BE7C6FC8C83C5269A6F3AD7923483815780CF9534F3DA2AA6F), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3bf11f41])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3bf11f41])
    SignalFlowHasStarted(flowId=[baa0edd0-7031-451f-96dd-ba226fb5102f])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3bf11f41]
    []


 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.483Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T20:18:05.991Z
    2020-04-27T20:18:06.474Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2262748674608297359, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.487Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.490Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:18:06.474Z
    2020-04-27T20:18:06.490Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
[WARN ] 2020-04-27T20:18:06,497Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [baa0edd0-7031-451f-96dd-ba226fb5102f] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:110) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T20:18:06,500Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
[WARN ] 2020-04-27T20:18:06,547Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [baa0edd0-7031-451f-96dd-ba226fb5102f] errored, dumping all transitions:

 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.048Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[baa0edd0-7031-451f-96dd-ba226fb5102f], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d0de420f-9d94-4677-8e2d-32062338d5a1, timestamp: 2020-04-27T20:18:05.441Z, entityType: Invocation, sessionId=d0de420f-9d94-4677-8e2d-32062338d5a1, timestamp: 2020-04-27T20:18:05.441Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=4A2276007ED81117EB1E7B82160820212A89B0E6D6927DC64B2B554600ECA18F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C78D08C0E79783BE7C6FC8C83C5269A6F3AD7923483815780CF9534F3DA2AA6F), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3bf11f41])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3bf11f41])
    SignalFlowHasStarted(flowId=[baa0edd0-7031-451f-96dd-ba226fb5102f])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@3bf11f41]
    []


 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.483Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T20:18:05.991Z
    2020-04-27T20:18:06.474Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=2262748674608297359, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.487Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.490Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:18:06.474Z
    2020-04-27T20:18:06.490Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [baa0edd0-7031-451f-96dd-ba226fb5102f] ---
  Timestamp: 2020-04-27T20:18:06.541Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=2262748674608297359)], sessions=[], senderUUID=2c07a603-d79c-4023-b97a-69a9a4de365d)
    CreateTransaction
    RemoveCheckpoint(id=[baa0edd0-7031-451f-96dd-ba226fb5102f])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=baa0edd0-7031-451f-96dd-ba226fb5102f)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[baa0edd0-7031-451f-96dd-ba226fb5102f], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=2262748674608297359, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=d0de420f-9d94-4677-8e2d-32062338d5a1, timestamp: 2020-04-27T20:18:05.441Z, entityType: Invocation, sessionId=d0de420f-9d94-4677-8e2d-32062338d5a1, timestamp: 2020-04-27T20:18:05.441Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=4A2276007ED81117EB1E7B82160820212A89B0E6D6927DC64B2B554600ECA18F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=C78D08C0E79783BE7C6FC8C83C5269A6F3AD7923483815780CF9534F3DA2AA6F), errorState=Errored(errors=[FlowError(errorId=2262748674608297359, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@213b891e, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=2c07a603-d79c-4023-b97a-69a9a4de365d))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:18:06.490Z
    2020-04-27T20:18:06.497Z
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
[WARN ] 2020-04-27T20:18:06,547Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [baa0edd0-7031-451f-96dd-ba226fb5102f] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=baa0edd0-7031-451f-96dd-ba226fb5102f, invocation_id=d0de420f-9d94-4677-8e2d-32062338d5a1, invocation_timestamp=2020-04-27T20:18:05.441Z, origin=Only For Testing, session_id=d0de420f-9d94-4677-8e2d-32062338d5a1, session_timestamp=2020-04-27T20:18:05.441Z, thread-id=266}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:110) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:18:06,710Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-201806.620/nodes/0/cordapps] {}
[INFO ] 2020-04-27T20:18:06,710Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:18:06,710Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:18:06,723Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:18:06,754Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:18:06,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:18:06,761Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:06,761Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:06,770Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:18:06.620Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:18:07,417Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,427Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-201806.620/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,427Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,446Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,449Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,449Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,576Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,587Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,589Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,593Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,593Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,655Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:07,685Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:18:07,694Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:18:07,694Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:18:07,854Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:18:07,859Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:18:07,859Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018687859) {}
[INFO ] 2020-04-27T20:18:07,862Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:18:07,882Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018687859) {}
[INFO ] 2020-04-27T20:18:07,892Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:18:07,942Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018687859) {}
[INFO ] 2020-04-27T20:18:07,946Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:07,958Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:18:07,960Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T20:18:07,960Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T20:18:07,966Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018687859) {}
[INFO ] 2020-04-27T20:18:07,969Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018687859) {}
[INFO ] 2020-04-27T20:18:07,969Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:07,969Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018687859) {}
[INFO ] 2020-04-27T20:18:07,969Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:07,977Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-201806.620/nodes/1/cordapps] {}
[INFO ] 2020-04-27T20:18:07,977Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:18:07,977Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:18:07,985Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:18:08,007Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:18:08,008Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:18:08,032Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:08,032Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:08,035Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:18:06.620Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:18:08,550Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,627Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-201806.620/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,627Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,643Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,645Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,645Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,739Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,746Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,747Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,749Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,749Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,795Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:08,799Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:18:08,800Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:08,801Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:08,898Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:08,899Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:18:08,919Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:18:08,919Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018688919) {}
[INFO ] 2020-04-27T20:18:08,921Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:08,926Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018688919) {}
[INFO ] 2020-04-27T20:18:08,969Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:18:08,972Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018688919) {}
[INFO ] 2020-04-27T20:18:08,978Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:08,998Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:18:09,006Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018688919) {}
[INFO ] 2020-04-27T20:18:09,009Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018687859) {}
[INFO ] 2020-04-27T20:18:09,010Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:18:09,017Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018688919) {}
[INFO ] 2020-04-27T20:18:09,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:09,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018688919) {}
[INFO ] 2020-04-27T20:18:09,026Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:09,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018688919) {}
[INFO ] 2020-04-27T20:18:09,027Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:09,031Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-201806.620/nodes/2/cordapps] {}
[INFO ] 2020-04-27T20:18:09,031Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:18:09,031Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:18:09,038Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-201806.620/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:18:09,059Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:18:09,060Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:18:09,080Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:09,080Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:09,083Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:18:06.620Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:18:09,485Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,487Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-201806.620/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,487Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,506Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,508Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,508Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,662Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,668Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,669Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,670Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,670Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,709Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:18:09,712Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:18:09,713Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:09,713Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:09,795Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:18:09,796Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:18:09,813Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:18:09,813Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018689813) {}
[INFO ] 2020-04-27T20:18:09,814Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:09,820Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018689813) {}
[INFO ] 2020-04-27T20:18:09,825Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:18:09,827Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018689813) {}
[INFO ] 2020-04-27T20:18:09,840Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:09,896Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:18:09,902Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018689813) {}
[INFO ] 2020-04-27T20:18:09,905Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018687859) {}
[INFO ] 2020-04-27T20:18:09,906Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:18:09,913Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018689813) {}
[INFO ] 2020-04-27T20:18:09,914Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:09,921Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018688919) {}
[INFO ] 2020-04-27T20:18:09,921Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:09,927Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018689813) {}
[INFO ] 2020-04-27T20:18:09,928Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:18:09,933Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018689813) {}
[INFO ] 2020-04-27T20:18:09,934Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:18:09,934Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018689813) {}
[INFO ] 2020-04-27T20:18:09,934Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T20:18:09,934Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:18:09,934Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:18:09,934Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:18:09,934Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:18:09,934Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:18:09,934Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:18:09,934Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:18:09,934Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:18:10,002Z [Mock network] corda.flow. - Flow raised an error: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
[INFO ] 2020-04-27T20:18:10,003Z [Mock network] statemachine.StaffedFlowHospital. - Flow [5f37ba87-7873-43d4-9525-40a1facf8302] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bfc569fb-3322-4748-a22f-c227c46ccf5e, timestamp: 2020-04-27T20:18:09.936Z, entityType: Invocation, sessionId=bfc569fb-3322-4748-a22f-c227c46ccf5e, timestamp: 2020-04-27T20:18:09.936Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=4A2276007ED81117EB1E7B82160820212A89B0E6D6927DC64B2B554600ECA18F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=25A2F7C8AE09870D7C11AD0813C2FE7A7B33155FCF5A5B4554A1EF5BF5C8F281), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@65daea9, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=a7953620-dd0d-42bf-886b-8482d7ef5907) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
[INFO ] 2020-04-27T20:18:10,003Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:110) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:18:10,003Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:110) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T20:18:10,006Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5f37ba87-7873-43d4-9525-40a1facf8302] errored, dumping all transitions:

 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:09.940Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5f37ba87-7873-43d4-9525-40a1facf8302], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bfc569fb-3322-4748-a22f-c227c46ccf5e, timestamp: 2020-04-27T20:18:09.936Z, entityType: Invocation, sessionId=bfc569fb-3322-4748-a22f-c227c46ccf5e, timestamp: 2020-04-27T20:18:09.936Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=4A2276007ED81117EB1E7B82160820212A89B0E6D6927DC64B2B554600ECA18F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=25A2F7C8AE09870D7C11AD0813C2FE7A7B33155FCF5A5B4554A1EF5BF5C8F281), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1933be8f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1933be8f])
    SignalFlowHasStarted(flowId=[5f37ba87-7873-43d4-9525-40a1facf8302])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1933be8f]
    []


 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:10.003Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T20:18:09.938Z
    2020-04-27T20:18:10.002Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=5220058079533409894, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:10.003Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:10.003Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:18:10.002Z
    2020-04-27T20:18:10.003Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
[WARN ] 2020-04-27T20:18:10,006Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5f37ba87-7873-43d4-9525-40a1facf8302] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:110) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-27T20:18:10,006Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
[WARN ] 2020-04-27T20:18:10,012Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5f37ba87-7873-43d4-9525-40a1facf8302] errored, dumping all transitions:

 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:09.940Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[5f37ba87-7873-43d4-9525-40a1facf8302], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bfc569fb-3322-4748-a22f-c227c46ccf5e, timestamp: 2020-04-27T20:18:09.936Z, entityType: Invocation, sessionId=bfc569fb-3322-4748-a22f-c227c46ccf5e, timestamp: 2020-04-27T20:18:09.936Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=4A2276007ED81117EB1E7B82160820212A89B0E6D6927DC64B2B554600ECA18F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=25A2F7C8AE09870D7C11AD0813C2FE7A7B33155FCF5A5B4554A1EF5BF5C8F281), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1933be8f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1933be8f])
    SignalFlowHasStarted(flowId=[5f37ba87-7873-43d4-9525-40a1facf8302])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1933be8f]
    []


 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:10.003Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-04-27T20:18:09.938Z
    2020-04-27T20:18:10.002Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=5220058079533409894, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)


 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:10.003Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:10.003Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:18:10.002Z
    2020-04-27T20:18:10.003Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [5f37ba87-7873-43d4-9525-40a1facf8302] ---
  Timestamp: 2020-04-27T20:18:10.011Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=5220058079533409894)], sessions=[], senderUUID=a7953620-dd0d-42bf-886b-8482d7ef5907)
    CreateTransaction
    RemoveCheckpoint(id=[5f37ba87-7873-43d4-9525-40a1facf8302])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=5f37ba87-7873-43d4-9525-40a1facf8302)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[5f37ba87-7873-43d4-9525-40a1facf8302], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=5220058079533409894, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=bfc569fb-3322-4748-a22f-c227c46ccf5e, timestamp: 2020-04-27T20:18:09.936Z, entityType: Invocation, sessionId=bfc569fb-3322-4748-a22f-c227c46ccf5e, timestamp: 2020-04-27T20:18:09.936Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=4A2276007ED81117EB1E7B82160820212A89B0E6D6927DC64B2B554600ECA18F), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=25A2F7C8AE09870D7C11AD0813C2FE7A7B33155FCF5A5B4554A1EF5BF5C8F281), errorState=Errored(errors=[FlowError(errorId=5220058079533409894, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow@65daea9, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=a7953620-dd0d-42bf-886b-8482d7ef5907))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-04-27T20:18:10.003Z
    2020-04-27T20:18:10.006Z
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
[WARN ] 2020-04-27T20:18:10,012Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [5f37ba87-7873-43d4-9525-40a1facf8302] error [errorCode=1urljj8, moreInformationAt=https://errors.corda.net/OS/4.4/1urljj8] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=5f37ba87-7873-43d4-9525-40a1facf8302, invocation_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, invocation_timestamp=2020-04-27T20:18:09.936Z, origin=Only For Testing, session_id=bfc569fb-3322-4748-a22f-c227c46ccf5e, session_timestamp=2020-04-27T20:18:09.936Z, thread-id=495}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:110) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-27T20:21:30,141Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-27T20:21:30,486Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:21:32,344Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-27T20:21:32,379Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:21:32,430Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:21:32,431Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-27T20:21:32,432Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:21:32,432Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:21:32,432Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-27T20:21:32,432Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:21:32,432Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:21:32,432Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-27T20:21:32,443Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:21:32,443Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T20:21:32,443Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:21:32,443Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-27T20:21:32,443Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-27T20:21:32,479Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:21:32,479Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-27T20:21:32,489Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:21:32,489Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-27T20:21:32,489Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-27T20:21:32,489Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:21:32,500Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,514Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:21:32,524Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-27T20:21:32,563Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:21:32,563Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-27T20:21:32,563Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:21:32,575Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-27T20:21:32,576Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-27T20:21:32,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,576Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-27T20:21:32,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,576Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-27T20:21:32,576Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,576Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,576Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-27T20:21:32,602Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,602Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-27T20:21:32,602Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,602Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,602Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-27T20:21:32,627Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,627Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:21:32,647Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-27T20:21:32,657Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:21:32,657Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-27T20:21:32,657Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:21:32,670Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-27T20:21:32,670Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-27T20:21:32,670Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,670Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-27T20:21:32,695Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,695Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-27T20:21:32,695Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,695Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,695Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:21:32,718Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,719Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:21:32,719Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,719Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-27T20:21:32,719Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-27T20:21:32,719Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:32,719Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-27T20:21:34,239Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-27T20:21:34,239Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:21:34,239Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-27T20:21:34,240Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-27T20:21:34,243Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:21:34,250Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-27T20:21:34,250Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-27T20:21:34,293Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-27T20:21:34,478Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-202123.135/nodes/0/cordapps] {}
[INFO ] 2020-04-27T20:21:34,484Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:21:34,494Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:21:34,701Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:21:35,629Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:21:35,674Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:21:35,747Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:35,751Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:35,916Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:21:20.715Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:21:40,330Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:40,334Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-202123.135/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:40,335Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:40,431Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:40,542Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:40,549Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:42,625Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:43,279Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:43,282Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:43,286Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:43,286Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:43,376Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:43,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:21:43,484Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:21:43,484Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:21:43,693Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:21:43,702Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:21:43,702Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018903702) {}
[INFO ] 2020-04-27T20:21:43,707Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:21:43,861Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018903702) {}
[INFO ] 2020-04-27T20:21:43,913Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:21:43,968Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018903702) {}
[INFO ] 2020-04-27T20:21:43,995Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:44,041Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:21:44,049Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T20:21:44,052Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T20:21:44,487Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018903702) {}
[INFO ] 2020-04-27T20:21:44,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018903702) {}
[INFO ] 2020-04-27T20:21:44,518Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:44,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018903702) {}
[INFO ] 2020-04-27T20:21:44,519Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:44,529Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-202123.135/nodes/1/cordapps] {}
[INFO ] 2020-04-27T20:21:44,529Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:21:44,530Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:21:44,539Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:21:44,565Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:21:44,575Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:21:44,664Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:44,664Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:44,667Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:21:20.715Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:21:45,237Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,240Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-202123.135/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,240Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,261Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,264Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,264Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,400Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,479Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,481Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,483Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,483Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,535Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:45,541Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:21:45,543Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:45,543Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:45,646Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:45,648Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:21:45,670Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:21:45,670Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018905670) {}
[INFO ] 2020-04-27T20:21:45,673Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:45,680Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018905670) {}
[INFO ] 2020-04-27T20:21:45,688Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:21:45,692Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018905670) {}
[INFO ] 2020-04-27T20:21:45,697Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:45,996Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:21:46,006Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018905670) {}
[INFO ] 2020-04-27T20:21:46,010Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018903702) {}
[INFO ] 2020-04-27T20:21:46,011Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:21:46,020Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018905670) {}
[INFO ] 2020-04-27T20:21:46,022Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:46,032Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018905670) {}
[INFO ] 2020-04-27T20:21:46,032Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:46,032Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018905670) {}
[INFO ] 2020-04-27T20:21:46,032Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:46,038Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-202123.135/nodes/2/cordapps] {}
[INFO ] 2020-04-27T20:21:46,038Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:21:46,038Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:21:46,045Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202123.135/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:21:46,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:21:46,069Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:21:46,091Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:46,091Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:46,093Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:21:20.715Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:21:46,602Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,604Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-202123.135/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,604Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,625Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,629Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,629Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,763Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,772Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,773Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,775Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,775Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,858Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:46,862Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:21:46,863Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:46,864Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:46,955Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:46,956Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:21:46,974Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:21:46,974Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018906974) {}
[INFO ] 2020-04-27T20:21:46,975Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:46,982Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018906974) {}
[INFO ] 2020-04-27T20:21:46,988Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:21:46,991Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018906974) {}
[INFO ] 2020-04-27T20:21:46,995Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:47,019Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:21:47,026Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018906974) {}
[INFO ] 2020-04-27T20:21:47,031Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018903702) {}
[INFO ] 2020-04-27T20:21:47,033Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:21:47,047Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018906974) {}
[INFO ] 2020-04-27T20:21:47,048Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:47,099Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018905670) {}
[INFO ] 2020-04-27T20:21:47,100Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:47,108Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018906974) {}
[INFO ] 2020-04-27T20:21:47,109Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:47,119Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018906974) {}
[INFO ] 2020-04-27T20:21:47,120Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:47,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018906974) {}
[INFO ] 2020-04-27T20:21:47,120Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T20:21:47,122Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:21:47,122Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:21:47,126Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:21:47,126Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:21:47,126Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:21:47,126Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:21:47,126Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:21:47,126Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:21:47,783Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9a42a455-23c6-4356-b0ad-f2df61ad99e9, invocation_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, invocation_timestamp=2020-04-27T20:21:47.579Z, origin=Only For Testing, session_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, session_timestamp=2020-04-27T20:21:47.579Z, thread-id=268}
[WARN ] 2020-04-27T20:21:47,783Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9a42a455-23c6-4356-b0ad-f2df61ad99e9, invocation_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, invocation_timestamp=2020-04-27T20:21:47.579Z, origin=Only For Testing, session_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, session_timestamp=2020-04-27T20:21:47.579Z, thread-id=268}
[INFO ] 2020-04-27T20:21:48,186Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9a42a455-23c6-4356-b0ad-f2df61ad99e9, invocation_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, invocation_timestamp=2020-04-27T20:21:47.579Z, origin=Only For Testing, session_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, session_timestamp=2020-04-27T20:21:47.579Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,186Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9a42a455-23c6-4356-b0ad-f2df61ad99e9, invocation_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, invocation_timestamp=2020-04-27T20:21:47.579Z, origin=Only For Testing, session_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, session_timestamp=2020-04-27T20:21:47.579Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,299Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9a42a455-23c6-4356-b0ad-f2df61ad99e9, invocation_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, invocation_timestamp=2020-04-27T20:21:47.579Z, origin=Only For Testing, session_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, session_timestamp=2020-04-27T20:21:47.579Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,519Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=ebd48f2b-a932-4b9a-8fb0-9ca3dc5dfb5b, invocation_id=62e011da-82dc-49c1-8df1-c8cdeb51f743, invocation_timestamp=2020-04-27T20:21:48.423Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62e011da-82dc-49c1-8df1-c8cdeb51f743, session_timestamp=2020-04-27T20:21:48.423Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,627Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=ebd48f2b-a932-4b9a-8fb0-9ca3dc5dfb5b, invocation_id=62e011da-82dc-49c1-8df1-c8cdeb51f743, invocation_timestamp=2020-04-27T20:21:48.423Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62e011da-82dc-49c1-8df1-c8cdeb51f743, session_timestamp=2020-04-27T20:21:48.423Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,634Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=ebd48f2b-a932-4b9a-8fb0-9ca3dc5dfb5b, invocation_id=62e011da-82dc-49c1-8df1-c8cdeb51f743, invocation_timestamp=2020-04-27T20:21:48.423Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62e011da-82dc-49c1-8df1-c8cdeb51f743, session_timestamp=2020-04-27T20:21:48.423Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,643Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=ebd48f2b-a932-4b9a-8fb0-9ca3dc5dfb5b, invocation_id=62e011da-82dc-49c1-8df1-c8cdeb51f743, invocation_timestamp=2020-04-27T20:21:48.423Z, origin=O=Mock Company 1, L=London, C=GB, session_id=62e011da-82dc-49c1-8df1-c8cdeb51f743, session_timestamp=2020-04-27T20:21:48.423Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,682Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9a42a455-23c6-4356-b0ad-f2df61ad99e9, invocation_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, invocation_timestamp=2020-04-27T20:21:47.579Z, origin=Only For Testing, session_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, session_timestamp=2020-04-27T20:21:47.579Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,682Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=9a42a455-23c6-4356-b0ad-f2df61ad99e9, invocation_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, invocation_timestamp=2020-04-27T20:21:47.579Z, origin=Only For Testing, session_id=c2c974f0-9793-4d80-8fe5-82b103e94ab0, session_timestamp=2020-04-27T20:21:47.579Z, thread-id=268, tx_id=8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0}
[INFO ] 2020-04-27T20:21:48,873Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=f7b3b308-f8e5-4b06-a93a-3aedee029d64, invocation_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, invocation_timestamp=2020-04-27T20:21:48.853Z, origin=O=Mock Company 1, L=London, C=GB, session_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, session_timestamp=2020-04-27T20:21:48.853Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:48,886Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=f7b3b308-f8e5-4b06-a93a-3aedee029d64, invocation_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, invocation_timestamp=2020-04-27T20:21:48.853Z, origin=O=Mock Company 1, L=London, C=GB, session_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, session_timestamp=2020-04-27T20:21:48.853Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,062Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary Service, L=Zurich, C=CH. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=43662dd5-0ae3-4cc1-82c9-bb351f24502d, invocation_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, invocation_timestamp=2020-04-27T20:21:48.703Z, origin=Only For Testing, session_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, session_timestamp=2020-04-27T20:21:48.703Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,125Z [Mock network] corda.flow. - Received a notarisation request for Tx [F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000005, flow-id=cabff413-cef6-4597-9eb6-6eba39626d58, invocation_id=68b7dca9-27b5-44be-8b2e-8080561e99a0, invocation_timestamp=2020-04-27T20:21:49.110Z, origin=O=Mock Company 1, L=London, C=GB, session_id=68b7dca9-27b5-44be-8b2e-8080561e99a0, session_timestamp=2020-04-27T20:21:49.110Z, thread-id=268}
[INFO ] 2020-04-27T20:21:49,290Z [Notary request queue processor] transactions.PersistentUniquenessProvider. - Successfully committed all input states: [8BDCC15FB2FCA731820BB9C66C7A19F6FFE48E4C77E38856059AB1313D9025A0(0)]. TxId: F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415 {}
[INFO ] 2020-04-27T20:21:49,299Z [Mock network] corda.flow. - Transaction [F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000005, flow-id=cabff413-cef6-4597-9eb6-6eba39626d58, invocation_id=68b7dca9-27b5-44be-8b2e-8080561e99a0, invocation_timestamp=2020-04-27T20:21:49.110Z, origin=O=Mock Company 1, L=London, C=GB, session_id=68b7dca9-27b5-44be-8b2e-8080561e99a0, session_timestamp=2020-04-27T20:21:49.110Z, thread-id=268}
[INFO ] 2020-04-27T20:21:49,321Z [Mock network] corda.flow. - Notary responded (O=Notary Service, L=Zurich, C=CH). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=43662dd5-0ae3-4cc1-82c9-bb351f24502d, invocation_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, invocation_timestamp=2020-04-27T20:21:48.703Z, origin=Only For Testing, session_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, session_timestamp=2020-04-27T20:21:48.703Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,322Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=43662dd5-0ae3-4cc1-82c9-bb351f24502d, invocation_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, invocation_timestamp=2020-04-27T20:21:48.703Z, origin=Only For Testing, session_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, session_timestamp=2020-04-27T20:21:48.703Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,330Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=43662dd5-0ae3-4cc1-82c9-bb351f24502d, invocation_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, invocation_timestamp=2020-04-27T20:21:48.703Z, origin=Only For Testing, session_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, session_timestamp=2020-04-27T20:21:48.703Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,350Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=f7b3b308-f8e5-4b06-a93a-3aedee029d64, invocation_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, invocation_timestamp=2020-04-27T20:21:48.853Z, origin=O=Mock Company 1, L=London, C=GB, session_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, session_timestamp=2020-04-27T20:21:48.853Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,363Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=f7b3b308-f8e5-4b06-a93a-3aedee029d64, invocation_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, invocation_timestamp=2020-04-27T20:21:48.853Z, origin=O=Mock Company 1, L=London, C=GB, session_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, session_timestamp=2020-04-27T20:21:48.853Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,370Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=f7b3b308-f8e5-4b06-a93a-3aedee029d64, invocation_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, invocation_timestamp=2020-04-27T20:21:48.853Z, origin=O=Mock Company 1, L=London, C=GB, session_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, session_timestamp=2020-04-27T20:21:48.853Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,377Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=f7b3b308-f8e5-4b06-a93a-3aedee029d64, invocation_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, invocation_timestamp=2020-04-27T20:21:48.853Z, origin=O=Mock Company 1, L=London, C=GB, session_id=db20297e-b1b1-4292-a59e-1e15fc4530b7, session_timestamp=2020-04-27T20:21:48.853Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,395Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=43662dd5-0ae3-4cc1-82c9-bb351f24502d, invocation_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, invocation_timestamp=2020-04-27T20:21:48.703Z, origin=Only For Testing, session_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, session_timestamp=2020-04-27T20:21:48.703Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,395Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=43662dd5-0ae3-4cc1-82c9-bb351f24502d, invocation_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, invocation_timestamp=2020-04-27T20:21:48.703Z, origin=Only For Testing, session_id=aa671d27-5125-4d3d-9cb4-81b4e88f7788, session_timestamp=2020-04-27T20:21:48.703Z, thread-id=268, tx_id=F4590E46BCC736427A359F6E694EE9DF21797977C86564EB9E56FF9AA8699415}
[INFO ] 2020-04-27T20:21:49,505Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-202149.436/nodes/0/cordapps] {}
[INFO ] 2020-04-27T20:21:49,505Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:21:49,505Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:21:49,548Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:21:49,570Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:21:49,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:21:49,576Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:49,576Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:49,581Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:21:49.435Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:21:50,046Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,047Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-202149.436/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,047Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,065Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,067Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,067Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,164Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,171Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,172Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,174Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,174Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,218Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,239Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:21:50,246Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:21:50,246Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:21:50,372Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-27T20:21:50,376Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:21:50,376Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018910376) {}
[INFO ] 2020-04-27T20:21:50,377Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:21:50,389Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018910376) {}
[INFO ] 2020-04-27T20:21:50,397Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:21:50,400Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018910376) {}
[INFO ] 2020-04-27T20:21:50,404Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:50,434Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:21:50,436Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-27T20:21:50,436Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-27T20:21:50,444Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018910376) {}
[INFO ] 2020-04-27T20:21:50,447Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018910376) {}
[INFO ] 2020-04-27T20:21:50,447Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:50,447Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018910376) {}
[INFO ] 2020-04-27T20:21:50,447Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:50,452Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-202149.436/nodes/1/cordapps] {}
[INFO ] 2020-04-27T20:21:50,452Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:21:50,452Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:21:50,488Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:21:50,508Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:21:50,509Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:21:50,528Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:50,528Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:50,530Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:21:49.435Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:21:50,911Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,913Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-202149.436/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,913Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,930Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,932Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:50,932Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,049Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,056Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,057Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,059Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,059Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,102Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,106Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:21:51,107Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:51,107Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:51,181Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:51,182Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:21:51,198Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:21:51,198Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018911198) {}
[INFO ] 2020-04-27T20:21:51,200Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:51,204Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018911198) {}
[INFO ] 2020-04-27T20:21:51,244Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:21:51,247Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018911198) {}
[INFO ] 2020-04-27T20:21:51,250Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:51,268Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:21:51,275Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018911198) {}
[INFO ] 2020-04-27T20:21:51,277Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018910376) {}
[INFO ] 2020-04-27T20:21:51,278Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:21:51,285Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018911198) {}
[INFO ] 2020-04-27T20:21:51,286Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:51,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018911198) {}
[INFO ] 2020-04-27T20:21:51,294Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:51,294Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018911198) {}
[INFO ] 2020-04-27T20:21:51,294Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:51,299Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200427-202149.436/nodes/2/cordapps] {}
[INFO ] 2020-04-27T20:21:51,299Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-27T20:21:51,299Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-27T20:21:51,305Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200427-202149.436/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-27T20:21:51,324Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-27T20:21:51,325Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-27T20:21:51,344Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:51,344Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:51,346Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-27T20:21:49.435Z
      epoch=1
  } {}
[INFO ] 2020-04-27T20:21:51,717Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,719Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200427-202149.436/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,719Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,734Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,735Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,735Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,874Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,879Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,880Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,881Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,882Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,921Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-27T20:21:51,925Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-27T20:21:51,925Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:51,925Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:52,014Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-27T20:21:52,015Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-27T20:21:52,033Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-27T20:21:52,033Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018912033) {}
[INFO ] 2020-04-27T20:21:52,034Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:52,040Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018912033) {}
[INFO ] 2020-04-27T20:21:52,045Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-27T20:21:52,083Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018912033) {}
[INFO ] 2020-04-27T20:21:52,087Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:52,105Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=9523390C6895C1D0CF3D1C0078DFF57E662F610FD92DC16FC04BB3391B4C55C7 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-27T20:21:52,110Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018912033) {}
[INFO ] 2020-04-27T20:21:52,112Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588018910376) {}
[INFO ] 2020-04-27T20:21:52,113Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-27T20:21:52,120Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018912033) {}
[INFO ] 2020-04-27T20:21:52,120Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:52,127Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588018911198) {}
[INFO ] 2020-04-27T20:21:52,127Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:52,133Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018912033) {}
[INFO ] 2020-04-27T20:21:52,134Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-27T20:21:52,140Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018912033) {}
[INFO ] 2020-04-27T20:21:52,140Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-27T20:21:52,141Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588018912033) {}
[INFO ] 2020-04-27T20:21:52,141Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-27T20:21:52,141Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:21:52,141Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:21:52,141Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:21:52,141Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:21:52,141Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:21:52,141Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-27T20:21:52,141Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-27T20:21:52,141Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-27T20:21:52,233Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5f31bb36-6ef2-4c5d-8e10-672fde5c8b9e, invocation_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, invocation_timestamp=2020-04-27T20:21:52.143Z, origin=Only For Testing, session_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, session_timestamp=2020-04-27T20:21:52.143Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
[INFO ] 2020-04-27T20:21:52,233Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5f31bb36-6ef2-4c5d-8e10-672fde5c8b9e, invocation_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, invocation_timestamp=2020-04-27T20:21:52.143Z, origin=Only For Testing, session_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, session_timestamp=2020-04-27T20:21:52.143Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
[INFO ] 2020-04-27T20:21:52,250Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5f31bb36-6ef2-4c5d-8e10-672fde5c8b9e, invocation_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, invocation_timestamp=2020-04-27T20:21:52.143Z, origin=Only For Testing, session_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, session_timestamp=2020-04-27T20:21:52.143Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
[INFO ] 2020-04-27T20:21:52,290Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=1b739429-2a5f-4083-a618-e3e2fbc82080, invocation_id=6bcdb701-7696-447f-857c-083e2b851307, invocation_timestamp=2020-04-27T20:21:52.274Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6bcdb701-7696-447f-857c-083e2b851307, session_timestamp=2020-04-27T20:21:52.274Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
[INFO ] 2020-04-27T20:21:52,303Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=1b739429-2a5f-4083-a618-e3e2fbc82080, invocation_id=6bcdb701-7696-447f-857c-083e2b851307, invocation_timestamp=2020-04-27T20:21:52.274Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6bcdb701-7696-447f-857c-083e2b851307, session_timestamp=2020-04-27T20:21:52.274Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
[INFO ] 2020-04-27T20:21:52,306Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=1b739429-2a5f-4083-a618-e3e2fbc82080, invocation_id=6bcdb701-7696-447f-857c-083e2b851307, invocation_timestamp=2020-04-27T20:21:52.274Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6bcdb701-7696-447f-857c-083e2b851307, session_timestamp=2020-04-27T20:21:52.274Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
[INFO ] 2020-04-27T20:21:52,314Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=1b739429-2a5f-4083-a618-e3e2fbc82080, invocation_id=6bcdb701-7696-447f-857c-083e2b851307, invocation_timestamp=2020-04-27T20:21:52.274Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6bcdb701-7696-447f-857c-083e2b851307, session_timestamp=2020-04-27T20:21:52.274Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
[INFO ] 2020-04-27T20:21:52,330Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5f31bb36-6ef2-4c5d-8e10-672fde5c8b9e, invocation_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, invocation_timestamp=2020-04-27T20:21:52.143Z, origin=Only For Testing, session_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, session_timestamp=2020-04-27T20:21:52.143Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
[INFO ] 2020-04-27T20:21:52,330Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=5f31bb36-6ef2-4c5d-8e10-672fde5c8b9e, invocation_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, invocation_timestamp=2020-04-27T20:21:52.143Z, origin=Only For Testing, session_id=5da08f91-45a2-4ee2-95a6-72b220b3a464, session_timestamp=2020-04-27T20:21:52.143Z, thread-id=497, tx_id=C5954F13FBEE7EC8DAA229FBC685AA17FDB6BF656108287DB43B25A5296C52AF}
