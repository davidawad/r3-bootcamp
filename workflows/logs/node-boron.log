[INFO ] 2020-04-29T16:35:19,114Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-29T16:35:19,440Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-29T16:35:21,082Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-29T16:35:21,912Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-29T16:35:21,926Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-29T16:35:21,927Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-29T16:35:22,413Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T16:35:22,426Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-29T16:35:22,863Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T16:35:22,874Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T16:35:22,874Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-29T16:35:23,021Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T16:35:23,021Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-29T16:35:23,477Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-29T16:35:23,720Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-29T16:35:23,730Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-29T16:35:23,743Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-29T16:35:23,744Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-29T16:35:23,744Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-29T16:35:24,473Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T16:35:24,473Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-29T16:35:24,555Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T16:35:24,555Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-29T16:35:24,568Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T16:35:24,568Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-29T16:35:24,600Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T16:35:24,600Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T16:35:24,690Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:24,726Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-29T16:35:24,780Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-29T16:35:24,825Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-29T16:35:24,825Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-29T16:35:24,845Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-29T16:35:24,857Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-29T16:35:24,857Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-29T16:35:24,881Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:24,882Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-29T16:35:24,894Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:24,894Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-29T16:35:24,894Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:24,894Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:24,915Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-29T16:35:24,948Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:24,948Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-29T16:35:24,978Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:24,978Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:24,978Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-29T16:35:24,996Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:24,996Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-29T16:35:25,007Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-29T16:35:25,029Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-29T16:35:25,040Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-29T16:35:25,040Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-29T16:35:25,040Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-29T16:35:25,040Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-29T16:35:25,040Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:25,040Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-29T16:35:25,051Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:25,051Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-29T16:35:25,051Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:25,051Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:25,051Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T16:35:25,084Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:25,085Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T16:35:25,085Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:25,085Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T16:35:25,085Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T16:35:25,085Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:25,085Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-29T16:35:25,095Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T16:35:25,108Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T16:35:25,108Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-29T16:35:25,108Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T16:35:25,110Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-29T16:35:25,130Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-29T16:35:25,130Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-29T16:35:25,163Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-29T16:35:25,367Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200429-163512.669/nodes/0/cordapps] {}
[INFO ] 2020-04-29T16:35:25,373Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-29T16:35:25,382Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-29T16:35:25,500Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-29T16:35:26,392Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-29T16:35:26,438Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-29T16:35:26,504Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T16:35:26,508Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T16:35:27,158Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-29T16:35:10.434Z
      epoch=1
  } {}
[INFO ] 2020-04-29T16:35:31,391Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:31,396Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200429-163512.669/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:31,396Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:31,446Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:31,554Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:31,562Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:33,829Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:34,502Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:34,504Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:34,508Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:34,508Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:34,576Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:34,617Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-29T16:35:34,638Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-29T16:35:34,638Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-29T16:35:34,878Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-29T16:35:34,888Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-29T16:35:34,888Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588178134888) {}
[INFO ] 2020-04-29T16:35:34,893Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-29T16:35:35,101Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588178134888) {}
[INFO ] 2020-04-29T16:35:35,155Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-29T16:35:35,176Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588178134888) {}
[INFO ] 2020-04-29T16:35:35,203Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T16:35:35,229Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=CC6396AE65E79D46FC9B44B5EA6568DD780AD35924BBFD6C4BB02375897DBB1B uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-29T16:35:35,236Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-29T16:35:35,239Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-29T16:35:35,697Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588178134888) {}
[INFO ] 2020-04-29T16:35:35,722Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588178134888) {}
[INFO ] 2020-04-29T16:35:35,723Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T16:35:35,724Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588178134888) {}
[INFO ] 2020-04-29T16:35:35,724Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T16:35:35,732Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200429-163512.669/nodes/1/cordapps] {}
[INFO ] 2020-04-29T16:35:35,732Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-29T16:35:35,732Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-29T16:35:36,003Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-29T16:35:36,032Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-29T16:35:36,034Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-29T16:35:36,060Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T16:35:36,060Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T16:35:36,064Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-29T16:35:10.434Z
      epoch=1
  } {}
[INFO ] 2020-04-29T16:35:36,613Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,615Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200429-163512.669/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,615Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,635Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,638Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,638Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,766Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,823Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,824Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,826Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,826Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,879Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:36,883Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-29T16:35:36,886Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T16:35:36,886Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T16:35:37,005Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T16:35:37,006Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-29T16:35:37,060Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-29T16:35:37,060Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588178137060) {}
[INFO ] 2020-04-29T16:35:37,063Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-29T16:35:37,071Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588178137060) {}
[INFO ] 2020-04-29T16:35:37,076Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-29T16:35:37,080Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588178137060) {}
[INFO ] 2020-04-29T16:35:37,084Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T16:35:37,104Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=CC6396AE65E79D46FC9B44B5EA6568DD780AD35924BBFD6C4BB02375897DBB1B uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-29T16:35:37,113Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588178137060) {}
[INFO ] 2020-04-29T16:35:37,117Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588178134888) {}
[INFO ] 2020-04-29T16:35:37,118Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-29T16:35:37,127Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588178137060) {}
[INFO ] 2020-04-29T16:35:37,128Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-29T16:35:37,136Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588178137060) {}
[INFO ] 2020-04-29T16:35:37,136Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T16:35:37,136Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588178137060) {}
[INFO ] 2020-04-29T16:35:37,136Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T16:35:37,141Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200429-163512.669/nodes/2/cordapps] {}
[INFO ] 2020-04-29T16:35:37,141Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-29T16:35:37,141Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-29T16:35:37,148Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-163512.669/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-29T16:35:37,172Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-29T16:35:37,173Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-29T16:35:37,194Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T16:35:37,194Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T16:35:37,197Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-29T16:35:10.434Z
      epoch=1
  } {}
[INFO ] 2020-04-29T16:35:37,696Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:37,697Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200429-163512.669/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:37,697Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:37,714Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:37,789Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:37,789Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:37,884Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:38,256Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:38,258Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:38,261Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:38,261Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:38,341Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T16:35:38,345Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-29T16:35:38,347Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T16:35:38,347Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T16:35:38,441Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T16:35:38,443Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-29T16:35:38,462Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-29T16:35:38,462Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588178138462) {}
[INFO ] 2020-04-29T16:35:38,464Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-29T16:35:38,473Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588178138462) {}
[INFO ] 2020-04-29T16:35:38,479Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-29T16:35:38,482Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588178138462) {}
[INFO ] 2020-04-29T16:35:38,487Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T16:35:38,513Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=CC6396AE65E79D46FC9B44B5EA6568DD780AD35924BBFD6C4BB02375897DBB1B uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-29T16:35:38,521Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588178138462) {}
[INFO ] 2020-04-29T16:35:38,524Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588178134888) {}
[INFO ] 2020-04-29T16:35:38,525Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-29T16:35:38,535Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588178138462) {}
[INFO ] 2020-04-29T16:35:38,536Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-29T16:35:38,545Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588178137060) {}
[INFO ] 2020-04-29T16:35:38,546Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-29T16:35:38,556Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588178138462) {}
[INFO ] 2020-04-29T16:35:38,557Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-29T16:35:38,566Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588178138462) {}
[INFO ] 2020-04-29T16:35:38,566Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T16:35:38,566Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588178138462) {}
[INFO ] 2020-04-29T16:35:38,566Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-29T16:35:38,569Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-29T16:35:38,569Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-29T16:35:38,573Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-29T16:35:38,573Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-29T16:35:38,573Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-29T16:35:38,573Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-29T16:35:38,573Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-29T16:35:38,573Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T21:26:55,428Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-29T21:26:55,732Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-29T21:26:57,188Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-29T21:26:57,214Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-29T21:26:57,250Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T21:26:57,251Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-29T21:26:57,251Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T21:26:57,251Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T21:26:57,252Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-29T21:26:57,256Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T21:26:57,256Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-29T21:26:57,256Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-29T21:26:57,267Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-29T21:26:57,267Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-29T21:26:57,287Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-29T21:26:57,287Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-29T21:26:57,288Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-29T21:26:57,331Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T21:26:57,331Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-04-29T21:26:57,342Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T21:26:57,342Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-29T21:26:57,353Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T21:26:57,353Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-29T21:26:57,353Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-29T21:26:57,353Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T21:26:57,384Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,385Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-29T21:26:57,397Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-29T21:26:57,420Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-29T21:26:57,420Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-29T21:26:57,432Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-29T21:26:57,452Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-29T21:26:57,452Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-29T21:26:57,463Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,463Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-29T21:26:57,463Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,463Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-29T21:26:57,463Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,463Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,463Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-29T21:26:57,475Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,476Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-29T21:26:57,486Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,486Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,486Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-29T21:26:57,498Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,498Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-29T21:26:57,498Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,509Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-29T21:26:57,519Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,519Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,519Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-29T21:26:57,519Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,519Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T21:26:57,529Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,529Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T21:26:57,529Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-29T21:26:57,530Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-29T21:26:57,539Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T21:26:57,540Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-29T21:26:57,540Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-29T21:26:57,542Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-29T21:26:57,550Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-29T21:26:57,550Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-29T21:26:57,589Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-29T21:26:57,848Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200429-212649.651/nodes/0/cordapps] {}
[INFO ] 2020-04-29T21:26:57,853Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-29T21:26:57,863Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-29T21:26:57,970Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-29T21:26:58,748Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-29T21:26:58,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-29T21:26:58,859Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T21:26:58,863Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T21:26:59,015Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-29T21:26:47.465Z
      epoch=1
  } {}
[INFO ] 2020-04-29T21:27:03,579Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:03,584Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200429-212649.651/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:03,584Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:03,626Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:03,721Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:03,729Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:05,852Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:06,458Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:06,460Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:06,464Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:06,464Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:06,527Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:06,574Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-29T21:27:06,596Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-29T21:27:06,596Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-29T21:27:06,825Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-29T21:27:06,835Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-29T21:27:06,835Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588195626835) {}
[INFO ] 2020-04-29T21:27:06,839Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-29T21:27:07,005Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588195626835) {}
[INFO ] 2020-04-29T21:27:07,076Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-29T21:27:07,098Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588195626835) {}
[INFO ] 2020-04-29T21:27:07,129Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T21:27:07,156Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=A9D9329EA8C15ED1ECD2C603D4CD8D1319053CDE23E0057C6F592471345147C1 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-29T21:27:07,163Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-29T21:27:07,165Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-29T21:27:07,605Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588195626835) {}
[INFO ] 2020-04-29T21:27:07,633Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588195626835) {}
[INFO ] 2020-04-29T21:27:07,635Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T21:27:07,635Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588195626835) {}
[INFO ] 2020-04-29T21:27:07,635Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T21:27:07,651Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200429-212649.651/nodes/1/cordapps] {}
[INFO ] 2020-04-29T21:27:07,652Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-29T21:27:07,652Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-29T21:27:07,657Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-29T21:27:07,684Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-29T21:27:07,685Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-29T21:27:07,711Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T21:27:07,711Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T21:27:07,715Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-29T21:26:47.465Z
      epoch=1
  } {}
[INFO ] 2020-04-29T21:27:08,260Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,262Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200429-212649.651/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,262Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,280Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,282Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,282Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,392Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,403Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,405Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,406Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,406Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,483Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:08,488Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-29T21:27:08,491Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T21:27:08,491Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T21:27:08,624Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T21:27:08,625Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-29T21:27:08,644Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-29T21:27:08,644Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588195628644) {}
[INFO ] 2020-04-29T21:27:08,647Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-29T21:27:08,656Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588195628644) {}
[INFO ] 2020-04-29T21:27:08,663Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-29T21:27:08,667Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588195628644) {}
[INFO ] 2020-04-29T21:27:08,672Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T21:27:08,699Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=A9D9329EA8C15ED1ECD2C603D4CD8D1319053CDE23E0057C6F592471345147C1 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-29T21:27:08,711Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588195628644) {}
[INFO ] 2020-04-29T21:27:08,716Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588195626835) {}
[INFO ] 2020-04-29T21:27:08,718Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-29T21:27:08,729Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588195628644) {}
[INFO ] 2020-04-29T21:27:08,730Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-29T21:27:08,742Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588195628644) {}
[INFO ] 2020-04-29T21:27:08,743Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T21:27:08,743Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588195628644) {}
[INFO ] 2020-04-29T21:27:08,743Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T21:27:08,749Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200429-212649.651/nodes/2/cordapps] {}
[INFO ] 2020-04-29T21:27:08,750Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-29T21:27:08,750Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-29T21:27:08,756Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200429-212649.651/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-29T21:27:08,780Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-29T21:27:08,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-29T21:27:08,805Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T21:27:08,805Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[INFO ] 2020-04-29T21:27:08,809Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-04-29T21:26:47.465Z
      epoch=1
  } {}
[INFO ] 2020-04-29T21:27:09,281Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,283Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200429-212649.651/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,283Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,298Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,301Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,301Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,421Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,433Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,434Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,437Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,437Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,499Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-29T21:27:09,504Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-29T21:27:09,505Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T21:27:09,505Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T21:27:09,615Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-29T21:27:09,617Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-29T21:27:09,637Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-29T21:27:09,637Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588195629637) {}
[INFO ] 2020-04-29T21:27:09,640Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-29T21:27:09,649Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588195629637) {}
[INFO ] 2020-04-29T21:27:09,657Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-29T21:27:09,660Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588195629637) {}
[INFO ] 2020-04-29T21:27:09,665Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T21:27:09,688Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=A9D9329EA8C15ED1ECD2C603D4CD8D1319053CDE23E0057C6F592471345147C1 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-29T21:27:09,697Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588195629637) {}
[INFO ] 2020-04-29T21:27:09,700Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1588195626835) {}
[INFO ] 2020-04-29T21:27:09,702Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-29T21:27:09,711Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588195629637) {}
[INFO ] 2020-04-29T21:27:09,712Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-29T21:27:09,721Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1588195628644) {}
[INFO ] 2020-04-29T21:27:09,722Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-29T21:27:09,730Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588195629637) {}
[INFO ] 2020-04-29T21:27:09,731Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-29T21:27:09,740Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588195629637) {}
[INFO ] 2020-04-29T21:27:09,740Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-29T21:27:09,740Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1588195629637) {}
[INFO ] 2020-04-29T21:27:09,740Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-29T21:27:09,742Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-29T21:27:09,742Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-29T21:27:09,747Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-29T21:27:09,747Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-29T21:27:09,747Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow {}
[INFO ] 2020-04-29T21:27:09,747Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameIssueFlow$ResponderFlow (version 1) {}
[WARN ] 2020-04-29T21:27:09,747Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow, currently using: class net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow {}
[INFO ] 2020-04-29T21:27:09,747Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameUpdateFlow$InitiatorFlow to initiate net.corda.examples.yo.flows.GameUpdateFlow$ResponderFlow (version 1) {}
