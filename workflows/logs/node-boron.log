[INFO ] 2020-04-22T16:45:28,137Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-22T16:45:28,438Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:45:29,842Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:45:30,739Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T16:45:30,755Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:45:30,756Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:45:31,253Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:45:31,276Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T16:45:31,708Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:45:31,719Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:45:31,719Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T16:45:31,883Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:45:31,896Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:45:32,461Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T16:45:32,684Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:45:32,695Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:45:32,728Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:45:32,728Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:45:32,728Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:45:33,503Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:45:33,504Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T16:45:33,514Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:45:33,514Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T16:45:33,566Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:45:33,566Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:45:33,675Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,711Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:45:33,754Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:45:33,808Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:45:33,808Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:45:33,828Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:45:33,839Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T16:45:33,839Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:45:33,864Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,864Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T16:45:33,864Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,864Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T16:45:33,864Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,864Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:45:33,885Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T16:45:33,916Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:45:33,917Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:45:33,927Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:45:33,938Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,938Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T16:45:33,950Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,951Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:45:33,951Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:45:33,972Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:45:33,973Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:45:33,984Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:45:33,984Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T16:45:33,984Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:45:33,984Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,984Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T16:45:33,995Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,995Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T16:45:33,995Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:33,995Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:45:33,995Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T16:45:34,026Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:45:34,026Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:45:34,026Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:45:34,026Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:45:34,026Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:45:34,027Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:45:34,027Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:45:34,027Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:34,027Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T16:45:34,037Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:45:34,037Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:45:34,048Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T16:45:34,048Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:45:34,050Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:45:34,069Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-22T16:45:34,069Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:45:34,106Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T16:45:34,293Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-164522.749/nodes/0/cordapps] {}
[INFO ] 2020-04-22T16:45:34,298Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:45:34,307Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:45:34,413Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:45:35,126Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:45:35,158Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:45:35,217Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T16:45:35,362Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:45:20.965Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:45:39,822Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:39,826Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-164522.749/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:39,826Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:39,871Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:39,961Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:39,968Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:41,950Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:42,563Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:42,565Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:42,568Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:42,568Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:42,631Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:42,668Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:45:42,687Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:45:42,687Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:45:42,885Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:45:42,893Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:45:42,893Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573942893) {}
[INFO ] 2020-04-22T16:45:42,897Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:45:43,050Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573942893) {}
[INFO ] 2020-04-22T16:45:43,106Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:45:43,129Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573942893) {}
[INFO ] 2020-04-22T16:45:43,161Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:45:43,182Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=67A4077DB364A980DFEFAC0265C9131681AB5EC81EE7FC572253D9168709DF84 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T16:45:43,190Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:45:43,195Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:45:43,646Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573942893) {}
[INFO ] 2020-04-22T16:45:43,674Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573942893) {}
[INFO ] 2020-04-22T16:45:43,675Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:45:43,676Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573942893) {}
[INFO ] 2020-04-22T16:45:43,676Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:45:43,686Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-164522.749/nodes/1/cordapps] {}
[INFO ] 2020-04-22T16:45:43,686Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:45:43,686Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:45:43,701Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:45:43,728Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:45:43,729Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:45:43,753Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T16:45:43,756Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:45:20.965Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:45:44,350Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,352Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-164522.749/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,352Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,373Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,375Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,375Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,487Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,501Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,503Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,505Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,505Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,580Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:44,588Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:45:44,590Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:45:44,590Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:45:44,725Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:45:44,727Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:45:44,752Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:45:44,752Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573944752) {}
[INFO ] 2020-04-22T16:45:44,755Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:45:44,764Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573944752) {}
[INFO ] 2020-04-22T16:45:44,773Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:45:44,777Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573944752) {}
[INFO ] 2020-04-22T16:45:44,784Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:45:44,816Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=67A4077DB364A980DFEFAC0265C9131681AB5EC81EE7FC572253D9168709DF84 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T16:45:44,831Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573944752) {}
[INFO ] 2020-04-22T16:45:44,837Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573942893) {}
[INFO ] 2020-04-22T16:45:44,839Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:45:44,854Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573944752) {}
[INFO ] 2020-04-22T16:45:44,856Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:45:44,872Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573944752) {}
[INFO ] 2020-04-22T16:45:44,872Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:45:44,873Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573944752) {}
[INFO ] 2020-04-22T16:45:44,873Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:45:44,881Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-164522.749/nodes/2/cordapps] {}
[INFO ] 2020-04-22T16:45:44,881Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:45:44,881Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:45:44,889Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164522.749/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:45:44,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:45:44,935Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:45:44,964Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T16:45:44,968Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:45:20.965Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:45:45,547Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,549Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-164522.749/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,549Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,573Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,578Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,578Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,747Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,758Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,759Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,762Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,762Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,807Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:45:45,812Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:45:45,813Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:45:45,813Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:45:45,916Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:45:45,917Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:45:45,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:45:45,935Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573945934) {}
[INFO ] 2020-04-22T16:45:45,936Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:45:45,942Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573945934) {}
[INFO ] 2020-04-22T16:45:45,948Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:45:45,951Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573945934) {}
[INFO ] 2020-04-22T16:45:45,954Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:45:45,975Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=67A4077DB364A980DFEFAC0265C9131681AB5EC81EE7FC572253D9168709DF84 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T16:45:45,982Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573945934) {}
[INFO ] 2020-04-22T16:45:45,984Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587573942893) {}
[INFO ] 2020-04-22T16:45:45,986Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:45:45,994Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573945934) {}
[INFO ] 2020-04-22T16:45:45,995Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:45:46,006Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587573944752) {}
[INFO ] 2020-04-22T16:45:46,007Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:45:46,017Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573945934) {}
[INFO ] 2020-04-22T16:45:46,018Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:45:46,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573945934) {}
[INFO ] 2020-04-22T16:45:46,026Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:45:46,026Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587573945934) {}
[INFO ] 2020-04-22T16:45:46,026Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T16:45:46,028Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameCreateFlow, currently using: class net.corda.examples.yo.flows.GameCreateFlowResponder {}
[INFO ] 2020-04-22T16:45:46,028Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[WARN ] 2020-04-22T16:45:46,033Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameCreateFlow, currently using: class net.corda.examples.yo.flows.GameCreateFlowResponder {}
[INFO ] 2020-04-22T16:45:46,033Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[WARN ] 2020-04-22T16:45:46,654Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
[WARN ] 2020-04-22T16:45:46,654Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
[INFO ] 2020-04-22T16:45:46,929Z [Mock network] corda.flow. - Flow raised an error: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
[INFO ] 2020-04-22T16:45:46,935Z [Mock network] statemachine.StaffedFlowHospital. - Flow [4be91765-f44f-4318-acc8-0135be4ef079] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, timestamp: 2020-04-22T16:45:46.091Z, entityType: Invocation, sessionId=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, timestamp: 2020-04-22T16:45:46.091Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameCreateFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameCreateFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=8107D7F70D841774F468B645E743B4EFCB9956F1CABE000BE65993A3B4BD1478), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=104214D86AA02C664C44DD61942186CE3969302B8B38E817C7079E8F76E86773), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameCreateFlow@6d11fe71, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=ff062cdb-e89d-4f4e-a73f-43e81e3450d6) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
[INFO ] 2020-04-22T16:45:46,938Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameCreateFlow.call(GameCreateFlow.java:96) ~[main/:?]
	at net.corda.examples.yo.flows.GameCreateFlow.call(GameCreateFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-22T16:45:46,942Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameCreateFlow.call(GameCreateFlow.java:96) ~[main/:?]
	at net.corda.examples.yo.flows.GameCreateFlow.call(GameCreateFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-22T16:45:46,966Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4be91765-f44f-4318-acc8-0135be4ef079] errored, dumping all transitions:

 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:46.613Z
  Event: DoRemainingWork
  Actions:
    CreateTransaction
    PersistCheckpoint(id=[4be91765-f44f-4318-acc8-0135be4ef079], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, timestamp: 2020-04-22T16:45:46.091Z, entityType: Invocation, sessionId=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, timestamp: 2020-04-22T16:45:46.091Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameCreateFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameCreateFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=8107D7F70D841774F468B645E743B4EFCB9956F1CABE000BE65993A3B4BD1478), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=104214D86AA02C664C44DD61942186CE3969302B8B38E817C7079E8F76E86773), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4edf8d00])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4edf8d00])
    SignalFlowHasStarted(flowId=[4be91765-f44f-4318-acc8-0135be4ef079])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted:
    false
    true
pendingDeduplicationHandlers:
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4edf8d00]
    []
isFlowResumed:
    false
    true


 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:46.950Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions:
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp:
    2020-04-22T16:45:46.568Z
    2020-04-22T16:45:46.934Z
checkpoint.errorState:
    Clean
    Errored(errors=[FlowError(errorId=-8053611881879190547, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)
isFlowResumed:
    true
    false


 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:46.955Z
  Event: DoRemainingWork
  Actions:

  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:46.958Z
  Event: StartErrorPropagation
  Actions:
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp:
    2020-04-22T16:45:46.934Z
    2020-04-22T16:45:46.958Z
checkpoint.errorState.propagating:
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
[WARN ] 2020-04-22T16:45:46,967Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4be91765-f44f-4318-acc8-0135be4ef079] error [errorCode=9lbuqs, moreInformationAt=https://errors.corda.net/OS/4.4/9lbuqs] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameCreateFlow.call(GameCreateFlow.java:96) ~[main/:?]
	at net.corda.examples.yo.flows.GameCreateFlow.call(GameCreateFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-04-22T16:45:46,970Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
[WARN ] 2020-04-22T16:45:47,010Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4be91765-f44f-4318-acc8-0135be4ef079] errored, dumping all transitions:

 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:46.613Z
  Event: DoRemainingWork
  Actions:
    CreateTransaction
    PersistCheckpoint(id=[4be91765-f44f-4318-acc8-0135be4ef079], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, timestamp: 2020-04-22T16:45:46.091Z, entityType: Invocation, sessionId=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, timestamp: 2020-04-22T16:45:46.091Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameCreateFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameCreateFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=8107D7F70D841774F468B645E743B4EFCB9956F1CABE000BE65993A3B4BD1478), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=104214D86AA02C664C44DD61942186CE3969302B8B38E817C7079E8F76E86773), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4edf8d00])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4edf8d00])
    SignalFlowHasStarted(flowId=[4be91765-f44f-4318-acc8-0135be4ef079])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted:
    false
    true
pendingDeduplicationHandlers:
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4edf8d00]
    []
isFlowResumed:
    false
    true


 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:46.950Z
  Event: Error(exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)
  Actions:
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp:
    2020-04-22T16:45:46.568Z
    2020-04-22T16:45:46.934Z
checkpoint.errorState:
    Clean
    Errored(errors=[FlowError(errorId=-8053611881879190547, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=0, propagating=false)
isFlowResumed:
    true
    false


 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:46.955Z
  Event: DoRemainingWork
  Actions:

  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:46.958Z
  Event: StartErrorPropagation
  Actions:
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp:
    2020-04-22T16:45:46.934Z
    2020-04-22T16:45:46.958Z
checkpoint.errorState.propagating:
    false
    true


 --- Transition of flow [4be91765-f44f-4318-acc8-0135be4ef079] ---
  Timestamp: 2020-04-22T16:45:47.005Z
  Event: DoRemainingWork
  Actions:
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-8053611881879190547)], sessions=[], senderUUID=ff062cdb-e89d-4f4e-a73f-43e81e3450d6)
    CreateTransaction
    RemoveCheckpoint(id=[4be91765-f44f-4318-acc8-0135be4ef079])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=4be91765-f44f-4318-acc8-0135be4ef079)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[4be91765-f44f-4318-acc8-0135be4ef079], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-8053611881879190547, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, timestamp: 2020-04-22T16:45:46.091Z, entityType: Invocation, sessionId=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, timestamp: 2020-04-22T16:45:46.091Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameCreateFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameCreateFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=8107D7F70D841774F468B645E743B4EFCB9956F1CABE000BE65993A3B4BD1478), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=104214D86AA02C664C44DD61942186CE3969302B8B38E817C7079E8F76E86773), errorState=Errored(errors=[FlowError(errorId=-8053611881879190547, exception=java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameCreateFlow@6d11fe71, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=ff062cdb-e89d-4f4e-a73f-43e81e3450d6))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp:
    2020-04-22T16:45:46.958Z
    2020-04-22T16:45:46.967Z
checkpoint.errorState.propagatedIndex:
    0
    1
isRemoved:
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
[WARN ] 2020-04-22T16:45:47,010Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4be91765-f44f-4318-acc8-0135be4ef079] error [errorCode=9lbuqs, moreInformationAt=https://errors.corda.net/OS/4.4/9lbuqs] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4be91765-f44f-4318-acc8-0135be4ef079, invocation_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, invocation_timestamp=2020-04-22T16:45:46.091Z, origin=Only For Testing, session_id=1c55d530-da3f-4ae7-ae9d-e04c587a4f7a, session_timestamp=2020-04-22T16:45:46.091Z, thread-id=269}
java.lang.IllegalArgumentException: Parameter specified as non-null is null: method net.corda.core.flows.FlowLogic.initiateFlow, parameter party
	at net.corda.core.flows.FlowLogic.initiateFlow(FlowLogic.kt) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameCreateFlow.call(GameCreateFlow.java:96) ~[main/:?]
	at net.corda.examples.yo.flows.GameCreateFlow.call(GameCreateFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-22T16:49:52,725Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-22T16:49:53,029Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:49:54,486Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:49:55,301Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T16:49:55,316Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-04-22T16:49:55,317Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:49:55,831Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:49:55,852Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T16:49:56,363Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:49:56,363Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:49:56,364Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T16:49:56,543Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:49:56,565Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:49:57,049Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T16:49:57,257Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:49:57,257Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:49:57,279Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:49:57,284Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T16:49:57,284Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T16:49:57,987Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:49:57,987Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T16:49:57,999Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:49:57,999Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T16:49:58,034Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T16:49:58,034Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:49:58,124Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,145Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:49:58,191Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:49:58,239Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:49:58,239Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T16:49:58,251Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:49:58,274Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T16:49:58,274Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T16:49:58,299Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,299Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T16:49:58,299Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,299Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T16:49:58,299Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,299Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:49:58,323Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T16:49:58,367Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:49:58,367Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T16:49:58,367Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T16:49:58,378Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,379Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T16:49:58,389Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:49:58,401Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:49:58,424Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:49:58,424Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T16:49:58,424Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:49:58,424Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T16:49:58,425Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T16:49:58,425Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,425Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T16:49:58,438Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,438Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T16:49:58,438Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,438Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:49:58,438Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:58,471Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T16:49:59,973Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T16:49:59,973Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:49:59,973Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T16:49:59,973Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T16:49:59,984Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:49:59,996Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-22T16:49:59,996Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T16:50:00,026Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T16:50:00,169Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-164947.559/nodes/0/cordapps] {}
[INFO ] 2020-04-22T16:50:00,173Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:50:00,180Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:50:00,263Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:50:00,899Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:50:00,934Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:50:00,986Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T16:50:01,119Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:49:45.885Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:50:05,003Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:05,006Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-164947.559/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:05,006Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:05,054Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:05,143Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:05,151Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:06,903Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:07,498Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:07,501Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:07,504Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:07,504Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:07,578Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:07,631Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:50:07,658Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:50:07,658Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:50:07,905Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T16:50:07,916Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:50:07,916Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574207916) {}
[INFO ] 2020-04-22T16:50:07,923Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:50:08,078Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574207916) {}
[INFO ] 2020-04-22T16:50:08,129Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:50:08,153Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574207916) {}
[INFO ] 2020-04-22T16:50:08,176Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:50:08,199Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=67A4077DB364A980DFEFAC0265C9131681AB5EC81EE7FC572253D9168709DF84 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T16:50:08,206Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T16:50:08,210Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T16:50:08,583Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574207916) {}
[INFO ] 2020-04-22T16:50:08,606Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574207916) {}
[INFO ] 2020-04-22T16:50:08,607Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:50:08,608Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574207916) {}
[INFO ] 2020-04-22T16:50:08,608Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:50:08,616Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-164947.559/nodes/1/cordapps] {}
[INFO ] 2020-04-22T16:50:08,616Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:50:08,616Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:50:08,621Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:50:08,644Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:50:08,645Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:50:08,677Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T16:50:08,679Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:49:45.885Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:50:09,223Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,225Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-164947.559/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,225Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,244Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,246Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,246Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,364Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,375Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,376Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,378Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,378Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,429Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:09,434Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:50:09,436Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:50:09,436Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:50:09,521Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:50:09,523Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:50:09,541Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:50:09,541Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574209541) {}
[INFO ] 2020-04-22T16:50:09,543Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:50:09,549Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574209541) {}
[INFO ] 2020-04-22T16:50:09,555Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:50:09,558Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574209541) {}
[INFO ] 2020-04-22T16:50:09,562Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:50:09,589Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=67A4077DB364A980DFEFAC0265C9131681AB5EC81EE7FC572253D9168709DF84 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T16:50:09,596Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574209541) {}
[INFO ] 2020-04-22T16:50:09,600Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574207916) {}
[INFO ] 2020-04-22T16:50:09,601Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:50:09,609Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574209541) {}
[INFO ] 2020-04-22T16:50:09,611Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:50:09,619Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574209541) {}
[INFO ] 2020-04-22T16:50:09,619Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:50:09,619Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574209541) {}
[INFO ] 2020-04-22T16:50:09,619Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:50:09,624Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-164947.559/nodes/2/cordapps] {}
[INFO ] 2020-04-22T16:50:09,624Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T16:50:09,624Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T16:50:09,629Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-164947.559/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T16:50:09,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T16:50:09,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T16:50:09,669Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T16:50:09,672Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:49:45.885Z
      epoch=1
  } {}
[INFO ] 2020-04-22T16:50:10,094Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,095Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-164947.559/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,095Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,110Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,113Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,113Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,218Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,228Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,229Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,231Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,231Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,280Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T16:50:10,284Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T16:50:10,285Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:50:10,285Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:50:10,360Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T16:50:10,361Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T16:50:10,377Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T16:50:10,377Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574210377) {}
[INFO ] 2020-04-22T16:50:10,379Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:50:10,384Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574210377) {}
[INFO ] 2020-04-22T16:50:10,389Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T16:50:10,391Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574210377) {}
[INFO ] 2020-04-22T16:50:10,395Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:50:10,414Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=67A4077DB364A980DFEFAC0265C9131681AB5EC81EE7FC572253D9168709DF84 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T16:50:10,421Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574210377) {}
[INFO ] 2020-04-22T16:50:10,423Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574207916) {}
[INFO ] 2020-04-22T16:50:10,424Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T16:50:10,432Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574210377) {}
[INFO ] 2020-04-22T16:50:10,433Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:50:10,441Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574209541) {}
[INFO ] 2020-04-22T16:50:10,442Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T16:50:10,449Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574210377) {}
[INFO ] 2020-04-22T16:50:10,450Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T16:50:10,457Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574210377) {}
[INFO ] 2020-04-22T16:50:10,457Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T16:50:10,457Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574210377) {}
[INFO ] 2020-04-22T16:50:10,457Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T16:50:10,459Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameCreateFlow, currently using: class net.corda.examples.yo.flows.GameCreateFlowResponder {}
[INFO ] 2020-04-22T16:50:10,459Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[WARN ] 2020-04-22T16:50:10,470Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameCreateFlow, currently using: class net.corda.examples.yo.flows.GameCreateFlowResponder {}
[INFO ] 2020-04-22T16:50:10,470Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[WARN ] 2020-04-22T16:50:11,009Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=83529d22-cc81-40c0-a87f-bfe6db595608, invocation_id=0e018fdf-696f-483d-875d-baca912a5e9d, invocation_timestamp=2020-04-22T16:50:10.523Z, origin=Only For Testing, session_id=0e018fdf-696f-483d-875d-baca912a5e9d, session_timestamp=2020-04-22T16:50:10.523Z, thread-id=268}
[WARN ] 2020-04-22T16:50:11,009Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=83529d22-cc81-40c0-a87f-bfe6db595608, invocation_id=0e018fdf-696f-483d-875d-baca912a5e9d, invocation_timestamp=2020-04-22T16:50:10.523Z, origin=Only For Testing, session_id=0e018fdf-696f-483d-875d-baca912a5e9d, session_timestamp=2020-04-22T16:50:10.523Z, thread-id=268}
[INFO ] 2020-04-22T16:50:11,308Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=83529d22-cc81-40c0-a87f-bfe6db595608, invocation_id=0e018fdf-696f-483d-875d-baca912a5e9d, invocation_timestamp=2020-04-22T16:50:10.523Z, origin=Only For Testing, session_id=0e018fdf-696f-483d-875d-baca912a5e9d, session_timestamp=2020-04-22T16:50:10.523Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T16:50:11,308Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=83529d22-cc81-40c0-a87f-bfe6db595608, invocation_id=0e018fdf-696f-483d-875d-baca912a5e9d, invocation_timestamp=2020-04-22T16:50:10.523Z, origin=Only For Testing, session_id=0e018fdf-696f-483d-875d-baca912a5e9d, session_timestamp=2020-04-22T16:50:10.523Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T16:50:11,407Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=83529d22-cc81-40c0-a87f-bfe6db595608, invocation_id=0e018fdf-696f-483d-875d-baca912a5e9d, invocation_timestamp=2020-04-22T16:50:10.523Z, origin=Only For Testing, session_id=0e018fdf-696f-483d-875d-baca912a5e9d, session_timestamp=2020-04-22T16:50:10.523Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T16:50:11,551Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=83d92847-7d86-47de-95f0-fe6d02a8913b, invocation_id=5db8eb04-df4f-4dc3-8002-10837d02ab84, invocation_timestamp=2020-04-22T16:50:11.509Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5db8eb04-df4f-4dc3-8002-10837d02ab84, session_timestamp=2020-04-22T16:50:11.509Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T16:50:11,602Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=83d92847-7d86-47de-95f0-fe6d02a8913b, invocation_id=5db8eb04-df4f-4dc3-8002-10837d02ab84, invocation_timestamp=2020-04-22T16:50:11.509Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5db8eb04-df4f-4dc3-8002-10837d02ab84, session_timestamp=2020-04-22T16:50:11.509Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T16:50:11,613Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=83d92847-7d86-47de-95f0-fe6d02a8913b, invocation_id=5db8eb04-df4f-4dc3-8002-10837d02ab84, invocation_timestamp=2020-04-22T16:50:11.509Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5db8eb04-df4f-4dc3-8002-10837d02ab84, session_timestamp=2020-04-22T16:50:11.509Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T16:50:11,622Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=83d92847-7d86-47de-95f0-fe6d02a8913b, invocation_id=5db8eb04-df4f-4dc3-8002-10837d02ab84, invocation_timestamp=2020-04-22T16:50:11.509Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5db8eb04-df4f-4dc3-8002-10837d02ab84, session_timestamp=2020-04-22T16:50:11.509Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T16:50:11,655Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=83529d22-cc81-40c0-a87f-bfe6db595608, invocation_id=0e018fdf-696f-483d-875d-baca912a5e9d, invocation_timestamp=2020-04-22T16:50:10.523Z, origin=Only For Testing, session_id=0e018fdf-696f-483d-875d-baca912a5e9d, session_timestamp=2020-04-22T16:50:10.523Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T16:50:11,655Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=83529d22-cc81-40c0-a87f-bfe6db595608, invocation_id=0e018fdf-696f-483d-875d-baca912a5e9d, invocation_timestamp=2020-04-22T16:50:10.523Z, origin=Only For Testing, session_id=0e018fdf-696f-483d-875d-baca912a5e9d, session_timestamp=2020-04-22T16:50:10.523Z, thread-id=268, tx_id=49878ACA28952EB654323B7CDC7D62D8850682424F574EC9F1337F76A7E5FA75}
[INFO ] 2020-04-22T17:00:06,786Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-22T17:00:07,111Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T17:00:08,718Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T17:00:08,748Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T17:00:08,785Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:00:08,786Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T17:00:08,792Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:00:08,792Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:00:08,792Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T17:00:08,792Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:00:08,792Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T17:00:08,849Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T17:00:08,870Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T17:00:08,870Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T17:00:08,870Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T17:00:08,870Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T17:00:08,870Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T17:00:08,948Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:00:08,949Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T17:00:08,964Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:00:08,964Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T17:00:08,972Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:00:08,972Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:00:09,006Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,019Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T17:00:09,029Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T17:00:09,060Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T17:00:09,060Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T17:00:09,081Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T17:00:09,092Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T17:00:09,092Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T17:00:09,092Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,092Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T17:00:09,092Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,092Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T17:00:09,092Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,092Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T17:00:09,106Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T17:00:09,130Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T17:00:09,130Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T17:00:09,140Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T17:00:09,140Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,140Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T17:00:09,163Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,163Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T17:00:09,163Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T17:00:09,197Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T17:00:09,197Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T17:00:09,197Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T17:00:09,198Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T17:00:09,198Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T17:00:09,198Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,198Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T17:00:09,208Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,208Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T17:00:09,208Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,208Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:00:09,208Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,229Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T17:00:09,240Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:00:09,240Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:00:09,240Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T17:00:09,240Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:00:09,242Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T17:00:09,262Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-22T17:00:09,262Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T17:00:09,289Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T17:00:09,524Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-170000.964/nodes/0/cordapps] {}
[INFO ] 2020-04-22T17:00:09,530Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:00:09,539Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:00:09,640Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:00:10,508Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:00:10,584Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:00:10,651Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:00:10,790Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:59:58.915Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:00:15,445Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:15,449Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-170000.964/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:15,449Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:15,491Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:15,597Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:15,606Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:17,842Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:18,522Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:18,523Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:18,527Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:18,527Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:18,603Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:18,645Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:00:18,664Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:00:18,664Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:00:18,889Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:00:18,900Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:00:18,900Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574818900) {}
[INFO ] 2020-04-22T17:00:18,905Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:00:19,106Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574818900) {}
[INFO ] 2020-04-22T17:00:19,163Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:00:19,182Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574818900) {}
[INFO ] 2020-04-22T17:00:19,210Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:19,235Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=469EFD81DF9F262093798484BA9BDD84EE2D5A8655A97E691BFBDCBE96C16026 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:00:19,242Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T17:00:19,246Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T17:00:19,659Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574818900) {}
[INFO ] 2020-04-22T17:00:19,684Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574818900) {}
[INFO ] 2020-04-22T17:00:19,685Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:19,686Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574818900) {}
[INFO ] 2020-04-22T17:00:19,686Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:19,701Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-170000.964/nodes/1/cordapps] {}
[INFO ] 2020-04-22T17:00:19,701Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:00:19,701Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:00:19,762Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:00:19,784Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:00:19,785Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:00:19,808Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:00:19,811Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:59:58.915Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:00:20,373Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,375Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-170000.964/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,375Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,395Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,398Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,398Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,520Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,567Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,568Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,569Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,570Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,618Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:20,622Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:00:20,625Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:20,625Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:20,771Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:20,772Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T17:00:20,792Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:00:20,792Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574820792) {}
[INFO ] 2020-04-22T17:00:20,793Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:20,799Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574820792) {}
[INFO ] 2020-04-22T17:00:20,805Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:00:20,808Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574820792) {}
[INFO ] 2020-04-22T17:00:20,813Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:20,835Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=469EFD81DF9F262093798484BA9BDD84EE2D5A8655A97E691BFBDCBE96C16026 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:00:20,843Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574820792) {}
[INFO ] 2020-04-22T17:00:20,847Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574818900) {}
[INFO ] 2020-04-22T17:00:20,848Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:00:20,858Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574820792) {}
[INFO ] 2020-04-22T17:00:20,859Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:20,868Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574820792) {}
[INFO ] 2020-04-22T17:00:20,868Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:20,868Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574820792) {}
[INFO ] 2020-04-22T17:00:20,868Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:20,874Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-170000.964/nodes/2/cordapps] {}
[INFO ] 2020-04-22T17:00:20,874Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:00:20,874Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:00:20,881Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170000.964/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:00:20,905Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:00:20,905Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:00:20,924Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:00:20,927Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T16:59:58.915Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:00:21,439Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,440Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-170000.964/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,440Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,455Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,522Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,522Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,620Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,628Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,629Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,631Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,631Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,678Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:21,683Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:00:21,684Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:21,684Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:21,789Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:21,790Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T17:00:21,840Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:00:21,840Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574821840) {}
[INFO ] 2020-04-22T17:00:21,842Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:21,848Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574821840) {}
[INFO ] 2020-04-22T17:00:21,854Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:00:21,857Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574821840) {}
[INFO ] 2020-04-22T17:00:21,862Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:21,889Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=469EFD81DF9F262093798484BA9BDD84EE2D5A8655A97E691BFBDCBE96C16026 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:00:21,898Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574821840) {}
[INFO ] 2020-04-22T17:00:21,901Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574818900) {}
[INFO ] 2020-04-22T17:00:21,902Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:00:21,912Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574821840) {}
[INFO ] 2020-04-22T17:00:21,914Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:21,925Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574820792) {}
[INFO ] 2020-04-22T17:00:21,926Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:21,935Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574821840) {}
[INFO ] 2020-04-22T17:00:21,936Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:21,944Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574821840) {}
[INFO ] 2020-04-22T17:00:21,944Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:21,944Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574821840) {}
[INFO ] 2020-04-22T17:00:21,944Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T17:00:21,946Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameCreateFlow, currently using: class net.corda.examples.yo.flows.GameCreateFlowResponder {}
[INFO ] 2020-04-22T17:00:21,946Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[WARN ] 2020-04-22T17:00:21,952Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameCreateFlow, currently using: class net.corda.examples.yo.flows.GameCreateFlowResponder {}
[INFO ] 2020-04-22T17:00:21,952Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[WARN ] 2020-04-22T17:00:22,602Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=00cd3051-1b89-4d72-9bac-04b9a6aa0e10, invocation_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, invocation_timestamp=2020-04-22T17:00:22.418Z, origin=Only For Testing, session_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, session_timestamp=2020-04-22T17:00:22.418Z, thread-id=266}
[WARN ] 2020-04-22T17:00:22,602Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=00cd3051-1b89-4d72-9bac-04b9a6aa0e10, invocation_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, invocation_timestamp=2020-04-22T17:00:22.418Z, origin=Only For Testing, session_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, session_timestamp=2020-04-22T17:00:22.418Z, thread-id=266}
[INFO ] 2020-04-22T17:00:22,950Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=00cd3051-1b89-4d72-9bac-04b9a6aa0e10, invocation_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, invocation_timestamp=2020-04-22T17:00:22.418Z, origin=Only For Testing, session_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, session_timestamp=2020-04-22T17:00:22.418Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:22,950Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=00cd3051-1b89-4d72-9bac-04b9a6aa0e10, invocation_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, invocation_timestamp=2020-04-22T17:00:22.418Z, origin=Only For Testing, session_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, session_timestamp=2020-04-22T17:00:22.418Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:23,051Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=00cd3051-1b89-4d72-9bac-04b9a6aa0e10, invocation_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, invocation_timestamp=2020-04-22T17:00:22.418Z, origin=Only For Testing, session_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, session_timestamp=2020-04-22T17:00:22.418Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:23,213Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=5306ad9d-ec9a-4f2c-b084-692e055b9971, invocation_id=1cfc44bc-6d1b-4bfd-8582-7d7f8ccf58c0, invocation_timestamp=2020-04-22T17:00:23.166Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1cfc44bc-6d1b-4bfd-8582-7d7f8ccf58c0, session_timestamp=2020-04-22T17:00:23.166Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:23,316Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=5306ad9d-ec9a-4f2c-b084-692e055b9971, invocation_id=1cfc44bc-6d1b-4bfd-8582-7d7f8ccf58c0, invocation_timestamp=2020-04-22T17:00:23.166Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1cfc44bc-6d1b-4bfd-8582-7d7f8ccf58c0, session_timestamp=2020-04-22T17:00:23.166Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:23,321Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=5306ad9d-ec9a-4f2c-b084-692e055b9971, invocation_id=1cfc44bc-6d1b-4bfd-8582-7d7f8ccf58c0, invocation_timestamp=2020-04-22T17:00:23.166Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1cfc44bc-6d1b-4bfd-8582-7d7f8ccf58c0, session_timestamp=2020-04-22T17:00:23.166Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:23,330Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=5306ad9d-ec9a-4f2c-b084-692e055b9971, invocation_id=1cfc44bc-6d1b-4bfd-8582-7d7f8ccf58c0, invocation_timestamp=2020-04-22T17:00:23.166Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1cfc44bc-6d1b-4bfd-8582-7d7f8ccf58c0, session_timestamp=2020-04-22T17:00:23.166Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:23,368Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=00cd3051-1b89-4d72-9bac-04b9a6aa0e10, invocation_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, invocation_timestamp=2020-04-22T17:00:22.418Z, origin=Only For Testing, session_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, session_timestamp=2020-04-22T17:00:22.418Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:23,368Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=00cd3051-1b89-4d72-9bac-04b9a6aa0e10, invocation_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, invocation_timestamp=2020-04-22T17:00:22.418Z, origin=Only For Testing, session_id=2d75b93a-bcb1-45bd-8a55-cbd2c1d22ccc, session_timestamp=2020-04-22T17:00:22.418Z, thread-id=266, tx_id=AAAAEA48D8902ADFF9F8020051924BEAA192C4E7DB51B79CC0D34F4B00D880C9}
[INFO ] 2020-04-22T17:00:23,470Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-170023.406/nodes/0/cordapps] {}
[INFO ] 2020-04-22T17:00:23,470Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:00:23,470Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:00:23,477Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:00:23,502Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:00:23,503Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:00:23,507Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:00:23,513Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:00:23.406Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:00:24,015Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,016Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-170023.406/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,016Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,035Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,038Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,038Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,142Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,149Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,150Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,151Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,151Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,207Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,231Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:00:24,239Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:00:24,239Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:00:24,382Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:00:24,386Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:00:24,386Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574824386) {}
[INFO ] 2020-04-22T17:00:24,388Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:00:24,400Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574824386) {}
[INFO ] 2020-04-22T17:00:24,408Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:00:24,411Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574824386) {}
[INFO ] 2020-04-22T17:00:24,415Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:24,436Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=469EFD81DF9F262093798484BA9BDD84EE2D5A8655A97E691BFBDCBE96C16026 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:00:24,438Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T17:00:24,438Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T17:00:24,444Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574824386) {}
[INFO ] 2020-04-22T17:00:24,446Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574824386) {}
[INFO ] 2020-04-22T17:00:24,446Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:24,447Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574824386) {}
[INFO ] 2020-04-22T17:00:24,447Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:24,451Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-170023.406/nodes/1/cordapps] {}
[INFO ] 2020-04-22T17:00:24,451Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:00:24,451Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:00:24,458Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:00:24,475Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:00:24,476Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:00:24,497Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:00:24,499Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:00:23.406Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:00:24,874Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,875Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-170023.406/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,875Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,892Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,894Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,894Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,988Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,997Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:24,998Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,000Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,000Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,058Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,062Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:00:25,063Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:25,064Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:25,142Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:25,143Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T17:00:25,160Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:00:25,160Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574825160) {}
[INFO ] 2020-04-22T17:00:25,161Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:25,166Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574825160) {}
[INFO ] 2020-04-22T17:00:25,208Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:00:25,211Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574825160) {}
[INFO ] 2020-04-22T17:00:25,215Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:25,234Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=469EFD81DF9F262093798484BA9BDD84EE2D5A8655A97E691BFBDCBE96C16026 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:00:25,240Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574825160) {}
[INFO ] 2020-04-22T17:00:25,243Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574824386) {}
[INFO ] 2020-04-22T17:00:25,244Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:00:25,250Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574825160) {}
[INFO ] 2020-04-22T17:00:25,251Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:25,258Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574825160) {}
[INFO ] 2020-04-22T17:00:25,258Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:25,258Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574825160) {}
[INFO ] 2020-04-22T17:00:25,258Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:25,263Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-170023.406/nodes/2/cordapps] {}
[INFO ] 2020-04-22T17:00:25,263Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:00:25,263Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:00:25,269Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-170023.406/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:00:25,292Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:00:25,293Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:00:25,309Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:00:25,311Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:00:23.406Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:00:25,674Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,676Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-170023.406/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,676Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,692Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,694Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,694Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,817Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,823Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,824Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,825Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,825Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,862Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:00:25,865Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:00:25,866Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:25,866Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:25,951Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:00:25,952Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T17:00:25,966Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:00:25,966Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574825966) {}
[INFO ] 2020-04-22T17:00:25,968Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:25,973Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574825966) {}
[INFO ] 2020-04-22T17:00:25,977Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:00:26,013Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574825966) {}
[INFO ] 2020-04-22T17:00:26,017Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:26,033Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=469EFD81DF9F262093798484BA9BDD84EE2D5A8655A97E691BFBDCBE96C16026 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:00:26,038Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574825966) {}
[INFO ] 2020-04-22T17:00:26,041Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587574824386) {}
[INFO ] 2020-04-22T17:00:26,042Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:00:26,048Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574825966) {}
[INFO ] 2020-04-22T17:00:26,049Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:26,056Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587574825160) {}
[INFO ] 2020-04-22T17:00:26,057Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:26,063Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574825966) {}
[INFO ] 2020-04-22T17:00:26,064Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:00:26,071Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574825966) {}
[INFO ] 2020-04-22T17:00:26,071Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:00:26,071Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587574825966) {}
[INFO ] 2020-04-22T17:00:26,071Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T17:00:26,071Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameCreateFlow, currently using: class net.corda.examples.yo.flows.GameCreateFlowResponder {}
[INFO ] 2020-04-22T17:00:26,071Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[WARN ] 2020-04-22T17:00:26,072Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameCreateFlow, currently using: class net.corda.examples.yo.flows.GameCreateFlowResponder {}
[INFO ] 2020-04-22T17:00:26,072Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameCreateFlow to initiate net.corda.examples.yo.flows.GameCreateFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:00:26,133Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3d515335-97e8-47b1-b5e8-5982c1d7abc9, invocation_id=f66c4060-8896-40b1-bf50-8a82d2c69636, invocation_timestamp=2020-04-22T17:00:26.073Z, origin=Only For Testing, session_id=f66c4060-8896-40b1-bf50-8a82d2c69636, session_timestamp=2020-04-22T17:00:26.073Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:00:26,133Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3d515335-97e8-47b1-b5e8-5982c1d7abc9, invocation_id=f66c4060-8896-40b1-bf50-8a82d2c69636, invocation_timestamp=2020-04-22T17:00:26.073Z, origin=Only For Testing, session_id=f66c4060-8896-40b1-bf50-8a82d2c69636, session_timestamp=2020-04-22T17:00:26.073Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:00:26,152Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3d515335-97e8-47b1-b5e8-5982c1d7abc9, invocation_id=f66c4060-8896-40b1-bf50-8a82d2c69636, invocation_timestamp=2020-04-22T17:00:26.073Z, origin=Only For Testing, session_id=f66c4060-8896-40b1-bf50-8a82d2c69636, session_timestamp=2020-04-22T17:00:26.073Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:00:26,194Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000004, flow-id=73fcdce0-5db0-4076-afd3-c7faf6ad1f03, invocation_id=95f4cf71-d023-43a1-87e3-137ef7e6d01a, invocation_timestamp=2020-04-22T17:00:26.179Z, origin=O=Mock Company 1, L=London, C=GB, session_id=95f4cf71-d023-43a1-87e3-137ef7e6d01a, session_timestamp=2020-04-22T17:00:26.179Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:00:26,205Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000004, flow-id=73fcdce0-5db0-4076-afd3-c7faf6ad1f03, invocation_id=95f4cf71-d023-43a1-87e3-137ef7e6d01a, invocation_timestamp=2020-04-22T17:00:26.179Z, origin=O=Mock Company 1, L=London, C=GB, session_id=95f4cf71-d023-43a1-87e3-137ef7e6d01a, session_timestamp=2020-04-22T17:00:26.179Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:00:26,215Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000004, flow-id=73fcdce0-5db0-4076-afd3-c7faf6ad1f03, invocation_id=95f4cf71-d023-43a1-87e3-137ef7e6d01a, invocation_timestamp=2020-04-22T17:00:26.179Z, origin=O=Mock Company 1, L=London, C=GB, session_id=95f4cf71-d023-43a1-87e3-137ef7e6d01a, session_timestamp=2020-04-22T17:00:26.179Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:00:26,222Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000004, flow-id=73fcdce0-5db0-4076-afd3-c7faf6ad1f03, invocation_id=95f4cf71-d023-43a1-87e3-137ef7e6d01a, invocation_timestamp=2020-04-22T17:00:26.179Z, origin=O=Mock Company 1, L=London, C=GB, session_id=95f4cf71-d023-43a1-87e3-137ef7e6d01a, session_timestamp=2020-04-22T17:00:26.179Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:00:26,238Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3d515335-97e8-47b1-b5e8-5982c1d7abc9, invocation_id=f66c4060-8896-40b1-bf50-8a82d2c69636, invocation_timestamp=2020-04-22T17:00:26.073Z, origin=Only For Testing, session_id=f66c4060-8896-40b1-bf50-8a82d2c69636, session_timestamp=2020-04-22T17:00:26.073Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:00:26,238Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=3d515335-97e8-47b1-b5e8-5982c1d7abc9, invocation_id=f66c4060-8896-40b1-bf50-8a82d2c69636, invocation_timestamp=2020-04-22T17:00:26.073Z, origin=Only For Testing, session_id=f66c4060-8896-40b1-bf50-8a82d2c69636, session_timestamp=2020-04-22T17:00:26.073Z, thread-id=496, tx_id=F02C83DA50857A8A19A219CD248A2FAD721ED15B9543D4D3ECB45539A3C3288C}
[INFO ] 2020-04-22T17:30:40,153Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows ... {}
[INFO ] 2020-04-22T17:30:40,486Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T17:30:42,240Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-04-22T17:30:42,297Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T17:30:42,474Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:30:42,485Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-04-22T17:30:42,537Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:30:42,537Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:30:42,537Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-04-22T17:30:42,548Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:30:42,558Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T17:30:42,645Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-04-22T17:30:42,676Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T17:30:42,676Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T17:30:42,686Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T17:30:42,686Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-04-22T17:30:42,686Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-04-22T17:30:42,928Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:30:42,928Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2020-04-22T17:30:42,952Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:30:42,952Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2020-04-22T17:30:42,984Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-04-22T17:30:42,984Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:30:43,015Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,026Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T17:30:43,046Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2020-04-22T17:30:43,089Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T17:30:43,089Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2020-04-22T17:30:43,100Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T17:30:43,121Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:annotationProcessor {}
[INFO ] 2020-04-22T17:30:43,121Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2020-04-22T17:30:43,121Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,121Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2020-04-22T17:30:43,122Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,132Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2020-04-22T17:30:43,132Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,132Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T17:30:43,132Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2020-04-22T17:30:43,153Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T17:30:43,154Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2020-04-22T17:30:43,166Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2020-04-22T17:30:43,166Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,166Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2020-04-22T17:30:43,177Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,177Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T17:30:43,187Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2020-04-22T17:30:43,210Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T17:30:43,210Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2020-04-22T17:30:43,210Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T17:30:43,210Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:annotationProcessor {}
[INFO ] 2020-04-22T17:30:43,210Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2020-04-22T17:30:43,210Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,211Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2020-04-22T17:30:43,222Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,222Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2020-04-22T17:30:43,222Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,222Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:30:43,222Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2020-04-22T17:30:43,265Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:30:43,265Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T17:30:43,265Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:30:43,266Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T17:30:43,266Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:30:43,266Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2020-04-22T17:30:43,266Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2020-04-22T17:30:43,266Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:43,266Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2020-04-22T17:30:44,943Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-04-22T17:30:44,943Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:30:44,943Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2020-04-22T17:30:44,943Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-04-22T17:30:44,945Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T17:30:44,964Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/.gradle {}
[INFO ] 2020-04-22T17:30:44,964Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-04-22T17:30:44,982Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-04-22T17:30:45,197Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-173033.421/nodes/0/cordapps] {}
[INFO ] 2020-04-22T17:30:45,203Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:30:45,212Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:30:45,362Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:30:46,441Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:30:46,494Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:30:46,602Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:30:46,816Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:30:31.243Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:30:52,616Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:52,621Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-173033.421/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:52,621Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:52,727Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:52,839Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:52,846Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:55,306Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:56,027Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:56,030Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:56,035Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:56,035Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:56,108Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:56,193Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:30:56,213Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:30:56,213Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:30:56,464Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:30:56,476Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:30:56,476Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576656476) {}
[INFO ] 2020-04-22T17:30:56,483Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:30:56,659Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576656476) {}
[INFO ] 2020-04-22T17:30:56,719Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:30:56,804Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576656476) {}
[INFO ] 2020-04-22T17:30:56,834Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:30:56,888Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=837178612F8D3D1A9621473DE5FD931429914A694BA19C75343E156ED11353D3 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:30:56,895Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T17:30:56,898Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T17:30:57,375Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576656476) {}
[INFO ] 2020-04-22T17:30:57,408Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576656476) {}
[INFO ] 2020-04-22T17:30:57,409Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:30:57,410Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576656476) {}
[INFO ] 2020-04-22T17:30:57,410Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:30:57,421Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-173033.421/nodes/1/cordapps] {}
[INFO ] 2020-04-22T17:30:57,422Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:30:57,422Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:30:57,435Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:30:57,511Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:30:57,512Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:30:57,567Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:30:57,571Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:30:31.243Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:30:58,272Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,275Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-173033.421/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,275Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,309Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,311Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,311Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,435Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,494Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,496Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,498Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,498Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,561Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:58,567Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:30:58,570Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:30:58,570Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:30:58,681Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:30:58,683Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T17:30:58,708Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:30:58,708Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576658708) {}
[INFO ] 2020-04-22T17:30:58,710Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:30:58,720Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576658708) {}
[INFO ] 2020-04-22T17:30:58,728Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:30:58,732Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576658708) {}
[INFO ] 2020-04-22T17:30:58,738Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:30:58,997Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=837178612F8D3D1A9621473DE5FD931429914A694BA19C75343E156ED11353D3 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:30:59,009Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576658708) {}
[INFO ] 2020-04-22T17:30:59,014Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576656476) {}
[INFO ] 2020-04-22T17:30:59,016Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:30:59,030Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576658708) {}
[INFO ] 2020-04-22T17:30:59,032Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:30:59,044Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576658708) {}
[INFO ] 2020-04-22T17:30:59,044Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:30:59,044Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576658708) {}
[INFO ] 2020-04-22T17:30:59,044Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:30:59,050Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-173033.421/nodes/2/cordapps] {}
[INFO ] 2020-04-22T17:30:59,050Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:30:59,050Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:30:59,057Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173033.421/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:30:59,085Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:30:59,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:30:59,112Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:30:59,115Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:30:31.243Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:30:59,654Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,657Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-173033.421/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,657Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,677Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,681Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,682Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,825Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,837Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,838Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,841Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,841Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,933Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:30:59,937Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:30:59,938Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:30:59,938Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:31:00,042Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:31:00,044Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T17:31:00,062Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:31:00,062Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576660062) {}
[INFO ] 2020-04-22T17:31:00,064Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:00,072Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576660062) {}
[INFO ] 2020-04-22T17:31:00,078Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:31:00,082Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576660062) {}
[INFO ] 2020-04-22T17:31:00,086Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:00,113Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=837178612F8D3D1A9621473DE5FD931429914A694BA19C75343E156ED11353D3 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:31:00,122Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576660062) {}
[INFO ] 2020-04-22T17:31:00,125Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576656476) {}
[INFO ] 2020-04-22T17:31:00,127Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:31:00,137Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576660062) {}
[INFO ] 2020-04-22T17:31:00,138Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:00,149Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576658708) {}
[INFO ] 2020-04-22T17:31:00,151Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:00,161Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576660062) {}
[INFO ] 2020-04-22T17:31:00,163Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:00,183Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576660062) {}
[INFO ] 2020-04-22T17:31:00,183Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:00,183Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576660062) {}
[INFO ] 2020-04-22T17:31:00,183Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T17:31:00,226Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlowResponder {}
[INFO ] 2020-04-22T17:31:00,226Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[WARN ] 2020-04-22T17:31:00,230Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlowResponder {}
[INFO ] 2020-04-22T17:31:00,230Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[WARN ] 2020-04-22T17:31:00,960Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4484ae45-1faa-40db-b37b-e2f79e959b30, invocation_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, invocation_timestamp=2020-04-22T17:31:00.289Z, origin=Only For Testing, session_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, session_timestamp=2020-04-22T17:31:00.289Z, thread-id=266}
[WARN ] 2020-04-22T17:31:00,960Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract net.corda.examples.yo.contracts.GameStateContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4484ae45-1faa-40db-b37b-e2f79e959b30, invocation_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, invocation_timestamp=2020-04-22T17:31:00.289Z, origin=Only For Testing, session_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, session_timestamp=2020-04-22T17:31:00.289Z, thread-id=266}
[INFO ] 2020-04-22T17:31:01,345Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4484ae45-1faa-40db-b37b-e2f79e959b30, invocation_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, invocation_timestamp=2020-04-22T17:31:00.289Z, origin=Only For Testing, session_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, session_timestamp=2020-04-22T17:31:00.289Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,345Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4484ae45-1faa-40db-b37b-e2f79e959b30, invocation_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, invocation_timestamp=2020-04-22T17:31:00.289Z, origin=Only For Testing, session_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, session_timestamp=2020-04-22T17:31:00.289Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,460Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4484ae45-1faa-40db-b37b-e2f79e959b30, invocation_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, invocation_timestamp=2020-04-22T17:31:00.289Z, origin=Only For Testing, session_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, session_timestamp=2020-04-22T17:31:00.289Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,651Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=8601673b-bfb7-41e0-a12e-86214c0f7e1b, invocation_id=d4da1e9d-02cc-4920-82b7-8bf36d235e42, invocation_timestamp=2020-04-22T17:31:01.588Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4da1e9d-02cc-4920-82b7-8bf36d235e42, session_timestamp=2020-04-22T17:31:01.588Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,784Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=8601673b-bfb7-41e0-a12e-86214c0f7e1b, invocation_id=d4da1e9d-02cc-4920-82b7-8bf36d235e42, invocation_timestamp=2020-04-22T17:31:01.588Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4da1e9d-02cc-4920-82b7-8bf36d235e42, session_timestamp=2020-04-22T17:31:01.588Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,790Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=8601673b-bfb7-41e0-a12e-86214c0f7e1b, invocation_id=d4da1e9d-02cc-4920-82b7-8bf36d235e42, invocation_timestamp=2020-04-22T17:31:01.588Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4da1e9d-02cc-4920-82b7-8bf36d235e42, session_timestamp=2020-04-22T17:31:01.588Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,800Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=8601673b-bfb7-41e0-a12e-86214c0f7e1b, invocation_id=d4da1e9d-02cc-4920-82b7-8bf36d235e42, invocation_timestamp=2020-04-22T17:31:01.588Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d4da1e9d-02cc-4920-82b7-8bf36d235e42, session_timestamp=2020-04-22T17:31:01.588Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,843Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4484ae45-1faa-40db-b37b-e2f79e959b30, invocation_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, invocation_timestamp=2020-04-22T17:31:00.289Z, origin=Only For Testing, session_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, session_timestamp=2020-04-22T17:31:00.289Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,843Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=4484ae45-1faa-40db-b37b-e2f79e959b30, invocation_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, invocation_timestamp=2020-04-22T17:31:00.289Z, origin=Only For Testing, session_id=a126f602-0c0a-4c61-af9f-bbc2f9c67475, session_timestamp=2020-04-22T17:31:00.289Z, thread-id=266, tx_id=C2027DE90A6B88C562508C71B90B4DE2201F6218F022247A821CA6EF9CCB2ACF}
[INFO ] 2020-04-22T17:31:01,947Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-173101.881/nodes/0/cordapps] {}
[INFO ] 2020-04-22T17:31:01,947Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/0/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/0/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:31:01,947Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/0/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:31:01,955Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/0/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:31:01,978Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:31:01,979Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:31:01,983Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:31:01,990Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:31:01.881Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:31:02,539Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,540Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-173101.881/nodes/0/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,540Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,559Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,562Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,562Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,677Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,688Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,691Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,693Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,693Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,754Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:02,780Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:31:02,789Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:31:02,789Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:31:02,972Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-04-22T17:31:02,978Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:31:02,978Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576662978) {}
[INFO ] 2020-04-22T17:31:02,980Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:31:02,994Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576662978) {}
[INFO ] 2020-04-22T17:31:03,005Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:31:03,008Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576662978) {}
[INFO ] 2020-04-22T17:31:03,014Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:03,041Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=837178612F8D3D1A9621473DE5FD931429914A694BA19C75343E156ED11353D3 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:31:03,043Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-04-22T17:31:03,043Z [Test worker] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-04-22T17:31:03,050Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576662978) {}
[INFO ] 2020-04-22T17:31:03,053Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576662978) {}
[INFO ] 2020-04-22T17:31:03,053Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:03,054Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576662978) {}
[INFO ] 2020-04-22T17:31:03,054Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:03,059Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-173101.881/nodes/1/cordapps] {}
[INFO ] 2020-04-22T17:31:03,060Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/1/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/1/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:31:03,060Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/1/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:31:03,068Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/1/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:31:03,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:31:03,090Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:31:03,111Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:31:03,113Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:31:01.881Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:31:03,569Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,570Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-173101.881/nodes/1/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,570Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,588Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,590Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,590Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,698Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,709Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,711Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,713Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,713Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,780Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:03,784Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:31:03,785Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:31:03,785Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:31:03,887Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:31:03,888Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T17:31:03,908Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:31:03,908Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576663908) {}
[INFO ] 2020-04-22T17:31:03,910Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:03,916Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576663908) {}
[INFO ] 2020-04-22T17:31:03,957Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:31:03,960Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576663908) {}
[INFO ] 2020-04-22T17:31:03,964Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:03,983Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=837178612F8D3D1A9621473DE5FD931429914A694BA19C75343E156ED11353D3 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:31:03,989Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576663908) {}
[INFO ] 2020-04-22T17:31:03,991Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576662978) {}
[INFO ] 2020-04-22T17:31:03,992Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:31:03,998Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576663908) {}
[INFO ] 2020-04-22T17:31:03,999Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:04,007Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576663908) {}
[INFO ] 2020-04-22T17:31:04,007Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:04,007Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576663908) {}
[INFO ] 2020-04-22T17:31:04,007Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:04,013Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20200422-173101.881/nodes/2/cordapps] {}
[INFO ] 2020-04-22T17:31:04,014Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/2/cordapps/workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-04-22T17:31:04,014Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/2/cordapps/contracts-0.1.jar {}
[INFO ] 2020-04-22T17:31:04,022Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/davidawad/Projects/R3/ENG-DEMO/ENG-DEMO/workflows/build/mock-network/20200422-173101.881/nodes/2/cordapps/workflows-0.1.jar {}
[INFO ] 2020-04-22T17:31:04,044Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2020-04-22T17:31:04,045Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-04-22T17:31:04,062Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[INFO ] 2020-04-22T17:31:04,065Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {

      }
      eventHorizon=PT720H
      packageOwnership {

      }
      modifiedTime=2020-04-22T17:31:01.881Z
      epoch=1
  } {}
[INFO ] 2020-04-22T17:31:04,473Z [Test worker] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,475Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build/mock-network/20200422-173101.881/nodes/2/network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,475Z [Test worker] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,506Z [Test worker] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,509Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,509Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,676Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,684Z [Test worker] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,685Z [Test worker] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,687Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,687Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,728Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-04-22T17:31:04,732Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-04-22T17:31:04,733Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:31:04,733Z [Test worker] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:31:04,811Z [Test worker] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)] {}
[INFO ] 2020-04-22T17:31:04,812Z [Test worker] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-04-22T17:31:04,829Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-04-22T17:31:04,829Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576664829) {}
[INFO ] 2020-04-22T17:31:04,840Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:04,845Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576664829) {}
[INFO ] 2020-04-22T17:31:04,849Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-04-22T17:31:04,886Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576664829) {}
[INFO ] 2020-04-22T17:31:04,889Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:04,904Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=837178612F8D3D1A9621473DE5FD931429914A694BA19C75343E156ED11353D3 uploader=app filename=GameState CorDapp {}
[INFO ] 2020-04-22T17:31:04,909Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576664829) {}
[INFO ] 2020-04-22T17:31:04,912Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=6, serial=1587576662978) {}
[INFO ] 2020-04-22T17:31:04,912Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-04-22T17:31:04,918Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576664829) {}
[INFO ] 2020-04-22T17:31:04,919Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:04,924Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=6, serial=1587576663908) {}
[INFO ] 2020-04-22T17:31:04,925Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:04,931Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576664829) {}
[INFO ] 2020-04-22T17:31:04,931Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-04-22T17:31:04,937Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576664829) {}
[INFO ] 2020-04-22T17:31:04,937Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-04-22T17:31:04,938Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=6, serial=1587576664829) {}
[INFO ] 2020-04-22T17:31:04,938Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-04-22T17:31:04,938Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlowResponder {}
[INFO ] 2020-04-22T17:31:04,938Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[WARN ] 2020-04-22T17:31:04,938Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.examples.yo.flows.GameIssueFlow, currently using: class net.corda.examples.yo.flows.GameIssueFlowResponder {}
[INFO ] 2020-04-22T17:31:04,938Z [Test worker] internal.NodeFlowManager. - Registered net.corda.examples.yo.flows.GameIssueFlow to initiate net.corda.examples.yo.flows.GameIssueFlowResponder (version 1) {}
[ERROR] 2020-04-22T17:31:04,978Z [Mock network] internal.Verifier. - Error validating transaction 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7. [errorCode=1ugj3bn, moreInformationAt=https://errors.corda.net/OS/4.4/1ugj3bn] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
java.lang.IllegalArgumentException: Failed requirement: Checkers is not a real game
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.lambda$verify$0(GameContract.java:31) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.verify(GameContract.java:25) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:206) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext(TransactionBuilder.kt:186) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:146) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:140) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:622) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:90) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[ERROR] 2020-04-22T17:31:04,980Z [Mock network] internal.Verifier. - Error validating transaction 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7. [errorCode=1ugj3bn, moreInformationAt=https://errors.corda.net/OS/4.4/1ugj3bn] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
java.lang.IllegalArgumentException: Failed requirement: Checkers is not a real game
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.lambda$verify$0(GameContract.java:31) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.verify(GameContract.java:25) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:90) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-04-22T17:31:04,980Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
[INFO ] 2020-04-22T17:31:04,983Z [Mock network] statemachine.StaffedFlowHospital. - Flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=74daab96-e706-401c-9b73-2238920d2115, timestamp: 2020-04-22T17:31:04.939Z, entityType: Invocation, sessionId=74daab96-e706-401c-9b73-2238920d2115, timestamp: 2020-04-22T17:31:04.939Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=508713D12992F7B526A2C3A30C581AEC600A19CFA58B1B523386291DFAF5736B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5341FBA27E1F640E24BC2A2356E3870A772CD937FF600F9DD65BCDBF31337770), errorState=Clean, numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow@f6e7a35, pendingDeduplicationHandlers=[], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=b9853776-d1cd-4374-b487-d5313ee0e1dc) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
[INFO ] 2020-04-22T17:31:04,985Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:90) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: Checkers is not a real game
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.lambda$verify$0(GameContract.java:31) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.verify(GameContract.java:25) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[INFO ] 2020-04-22T17:31:04,989Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:90) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: Checkers is not a real game
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.lambda$verify$0(GameContract.java:31) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.verify(GameContract.java:25) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-22T17:31:05,006Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] errored, dumping all transitions:

 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:04.942Z
  Event: DoRemainingWork
  Actions:
    CreateTransaction
    PersistCheckpoint(id=[e6873156-8e2b-46e1-bf6f-614a3b0ac3e5], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=74daab96-e706-401c-9b73-2238920d2115, timestamp: 2020-04-22T17:31:04.939Z, entityType: Invocation, sessionId=74daab96-e706-401c-9b73-2238920d2115, timestamp: 2020-04-22T17:31:04.939Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=508713D12992F7B526A2C3A30C581AEC600A19CFA58B1B523386291DFAF5736B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5341FBA27E1F640E24BC2A2356E3870A772CD937FF600F9DD65BCDBF31337770), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@50bd32f5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@50bd32f5])
    SignalFlowHasStarted(flowId=[e6873156-8e2b-46e1-bf6f-614a3b0ac3e5])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed:
    false
    true
isAnyCheckpointPersisted:
    false
    true
pendingDeduplicationHandlers:
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@50bd32f5]
    []


 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:04.991Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7)
  Actions:
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed:
    true
    false
checkpoint.timestamp:
    2020-04-22T17:31:04.940Z
    2020-04-22T17:31:04.982Z
checkpoint.errorState:
    Clean
    Errored(errors=[FlowError(errorId=-5542783596643617911, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7)], propagatedIndex=0, propagating=false)


 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:04.995Z
  Event: DoRemainingWork
  Actions:

  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:04.997Z
  Event: StartErrorPropagation
  Actions:
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp:
    2020-04-22T17:31:04.982Z
    2020-04-22T17:31:04.997Z
checkpoint.errorState.propagating:
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
[WARN ] 2020-04-22T17:31:05,006Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] error [errorCode=hvap2o, moreInformationAt=https://errors.corda.net/OS/4.4/hvap2o] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:90) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: Checkers is not a real game
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.lambda$verify$0(GameContract.java:31) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.verify(GameContract.java:25) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-22T17:31:05,008Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=hvap2o, moreInformationAt=https://errors.corda.net/OS/4.4/hvap2o] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:90) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: Checkers is not a real game
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.lambda$verify$0(GameContract.java:31) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.verify(GameContract.java:25) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
[WARN ] 2020-04-22T17:31:05,080Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] errored, dumping all transitions:

 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:04.942Z
  Event: DoRemainingWork
  Actions:
    CreateTransaction
    PersistCheckpoint(id=[e6873156-8e2b-46e1-bf6f-614a3b0ac3e5], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=74daab96-e706-401c-9b73-2238920d2115, timestamp: 2020-04-22T17:31:04.939Z, entityType: Invocation, sessionId=74daab96-e706-401c-9b73-2238920d2115, timestamp: 2020-04-22T17:31:04.939Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=508713D12992F7B526A2C3A30C581AEC600A19CFA58B1B523386291DFAF5736B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5341FBA27E1F640E24BC2A2356E3870A772CD937FF600F9DD65BCDBF31337770), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@50bd32f5])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@50bd32f5])
    SignalFlowHasStarted(flowId=[e6873156-8e2b-46e1-bf6f-614a3b0ac3e5])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed:
    false
    true
isAnyCheckpointPersisted:
    false
    true
pendingDeduplicationHandlers:
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@50bd32f5]
    []


 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:04.991Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7)
  Actions:
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed:
    true
    false
checkpoint.timestamp:
    2020-04-22T17:31:04.940Z
    2020-04-22T17:31:04.982Z
checkpoint.errorState:
    Clean
    Errored(errors=[FlowError(errorId=-5542783596643617911, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7)], propagatedIndex=0, propagating=false)


 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:04.995Z
  Event: DoRemainingWork
  Actions:

  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:04.997Z
  Event: StartErrorPropagation
  Actions:
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp:
    2020-04-22T17:31:04.982Z
    2020-04-22T17:31:04.997Z
checkpoint.errorState.propagating:
    false
    true


 --- Transition of flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] ---
  Timestamp: 2020-04-22T17:31:05.021Z
  Event: DoRemainingWork
  Actions:
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7, errorId=-5542783596643617911)], sessions=[], senderUUID=b9853776-d1cd-4374-b487-d5313ee0e1dc)
    CreateTransaction
    RemoveCheckpoint(id=[e6873156-8e2b-46e1-bf6f-614a3b0ac3e5])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[e6873156-8e2b-46e1-bf6f-614a3b0ac3e5], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-5542783596643617911, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=74daab96-e706-401c-9b73-2238920d2115, timestamp: 2020-04-22T17:31:04.939Z, entityType: Invocation, sessionId=74daab96-e706-401c-9b73-2238920d2115, timestamp: 2020-04-22T17:31:04.939Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class net.corda.examples.yo.flows.GameIssueFlow, classToInitiateWith=class net.corda.examples.yo.flows.GameIssueFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=508713D12992F7B526A2C3A30C581AEC600A19CFA58B1B523386291DFAF5736B), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5341FBA27E1F640E24BC2A2356E3870A772CD937FF600F9DD65BCDBF31337770), errorState=Errored(errors=[FlowError(errorId=-5542783596643617911, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=net.corda.examples.yo.flows.GameIssueFlow@f6e7a35, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=b9853776-d1cd-4374-b487-d5313ee0e1dc))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.timestamp:
    2020-04-22T17:31:04.997Z
    2020-04-22T17:31:05.006Z
checkpoint.errorState.propagatedIndex:
    0
    1
isRemoved:
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
[WARN ] 2020-04-22T17:31:05,080Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [e6873156-8e2b-46e1-bf6f-614a3b0ac3e5] error [errorCode=hvap2o, moreInformationAt=https://errors.corda.net/OS/4.4/hvap2o] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000003, flow-id=e6873156-8e2b-46e1-bf6f-614a3b0ac3e5, invocation_id=74daab96-e706-401c-9b73-2238920d2115, invocation_timestamp=2020-04-22T17:31:04.939Z, origin=Only For Testing, session_id=74daab96-e706-401c-9b73-2238920d2115, session_timestamp=2020-04-22T17:31:04.939Z, thread-id=496}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: Checkers is not a real game, contract: net.corda.examples.yo.contracts.GameStateContract, transaction: 05203B01B9B4B317C13C1052EB013AC990A74659B9B3C261C62D6FBFBC84A2D7
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:426) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.BasicVerifier.verifyContracts(TransactionVerifierServiceInternal.kt:375) ~[corda-core-4.4.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:69) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:207) ~[corda-core-4.4.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:630) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:90) ~[main/:?]
	at net.corda.examples.yo.flows.GameIssueFlow.call(GameIssueFlow.java:25) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_242]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_242]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_242]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_242]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: Checkers is not a real game
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.lambda$verify$0(GameContract.java:31) ~[contracts-0.1.jar:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.4.jar:?]
	at net.corda.examples.yo.contracts.GameStateContract.verify(GameContract.java:25) ~[contracts-0.1.jar:?]
	at net.corda.core.internal.ContractVerifier.apply(TransactionVerifierServiceInternal.kt:424) ~[corda-core-4.4.jar:?]
	... 19 more
